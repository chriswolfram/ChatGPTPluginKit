(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    845263,      15156]
NotebookOptionsPosition[    832388,      14895]
NotebookOutlinePosition[    833556,      14928]
CellTagsIndexPosition[    833474,      14923]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ChatGPTPluginDeploy", "ObjectName",
 CellID->2036062166,ExpressionUUID->"cf546770-fc27-4178-86b9-6c76b7743af6"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"c32f8618-de35-4abd-aeb6-26b7156010ac"],
 Cell[BoxData[
  RowBox[{"ChatGPTPluginDeploy", "[", 
   StyleBox["plugin", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "e94ddb87-eed1-42a8-b48e-2f482ef1d064"],
 " \[LineSeparator]deploys a ChatGPT plugin specification to a local web \
server.\n",
 Cell["   ", "ModInfo",ExpressionUUID->"b9d72727-a16b-4ce6-bdd0-132fdf4c3584"],
 Cell[BoxData[
  RowBox[{"ChatGPTPluginDeploy", "[", 
   RowBox[{
    StyleBox["plugin", "TI"], ",", 
    StyleBox["port", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "b1091627-ceca-470d-b382-8c70cd69442c"],
 "\[LineSeparator]sets up the web server to use the specified port number."
}], "Usage",
 CellChangeTimes->{{3.889473129939982*^9, 3.889473165913517*^9}, {
  3.890398875679706*^9, 3.890398877501683*^9}},
 CellID->2092392664,ExpressionUUID->"28e7573e-710b-4465-8242-4a06f5ae31e8"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ChatGPTPluginDeploy",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPluginDeploy"]], 
  "InlineFormula",ExpressionUUID->"b784c3f5-5abd-4a56-b5e0-482c16fc4075"],
 " returns a ",
 Cell[BoxData[
  ButtonBox["ChatGPTPluginDeployment",
   BaseStyle->"Link",
   ButtonData->
    "paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPluginDeployment"]], 
  "InlineFormula",ExpressionUUID->"9086bc92-edce-4cf1-a4d4-53692ce3e703"],
 " representing the web server."
}], "Notes",
 CellChangeTimes->{{3.889473171582748*^9, 3.889473218216765*^9}, {
  3.8909251676786013`*^9, 3.890925177281372*^9}},
 CellID->1798784223,ExpressionUUID->"4374a6a6-e1a0-4503-9992-d74d486ab093"],

Cell[TextData[{
 "Web servers returned by ",
 Cell[BoxData[
  ButtonBox["ChatGPTPluginDeploy",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPluginDeploy"]], 
  "InlineFormula",ExpressionUUID->"3a0bec96-30a4-463e-b6d2-4a0ea036e3e7"],
 " can be stopped with ",
 Cell[BoxData[
  ButtonBox["DeleteObject",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "1c7dbb3b-5361-4a69-997b-06aa6a23cb7c"],
 "."
}], "Notes",
 CellChangeTimes->{{3.889473219679442*^9, 3.8894732418772507`*^9}},
 CellID->1024735286,ExpressionUUID->"eb41cced-7422-463f-9147-04988e3f3795"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["plugin", "TI"]], "InlineFormula",ExpressionUUID->
  "36951242-7cb3-4fcb-a391-c02743920019"],
 " must be a valid ",
 Cell[BoxData[
  ButtonBox["ChatGPTPlugin",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPlugin"]], 
  "InlineFormula",ExpressionUUID->"18e82487-c088-49e6-a4d6-266cc70c6ac9"],
 " object, or an association that specifies a valid ",
 Cell[BoxData[
  ButtonBox["ChatGPTPlugin",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPlugin"]], 
  "InlineFormula",ExpressionUUID->"7b9a7ee1-9df9-4e82-9769-5a0af9ca4bfd"],
 "."
}], "Notes",
 CellChangeTimes->{{3.8894732911277847`*^9, 3.889473305332693*^9}, {
  3.890398696616632*^9, 3.890398720878022*^9}},
 CellID->1735908722,ExpressionUUID->"7f69d1f7-9102-4e84-8a1f-07341c4c055e"],

Cell[TextData[{
 "The default value of ",
 Cell[BoxData[
  StyleBox["port", "TI"]], "InlineFormula",ExpressionUUID->
  "9fcc7e11-a367-409d-9292-1403f0066641"],
 " is ",
 Cell[BoxData[
  ButtonBox["$ChatGPTPluginPort",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/$ChatGPTPluginPort"]], 
  "InlineFormula",ExpressionUUID->"f4e6d2f2-019e-4015-9268-adcb35f741cf"],
 "."
}], "Notes",
 CellChangeTimes->{{3.889473249466125*^9, 3.889473281475637*^9}},
 CellID->1630866714,ExpressionUUID->"db4d2f57-a9e9-4797-93d7-9ceb51458254"],

Cell["\<\
Endpoints are evaluated in the kernel from which their plugin was deployed.\
\>", "Notes",
 CellChangeTimes->{{3.889473789626955*^9, 3.8894738028991003`*^9}},
 CellID->178889690,ExpressionUUID->"05d69e1e-e912-4deb-8d8b-181fb6f1c34e"],

Cell["Supported options include:", "Notes",
 CellChangeTimes->{{3.889474057598543*^9, 3.889474060742054*^9}},
 CellID->1165676712,ExpressionUUID->"fc3833f6-4b26-4871-82f3-c6d714ec31a8"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "55a9eb5f-44cc-4108-a8e0-c0a91f8a6a19"], 
    ButtonBox["HandlerFunctions",
     BaseStyle->"Link"], Cell[
    "how to handle events generated", "TableText",ExpressionUUID->
     "d9228096-5718-4198-9ed9-64004327ab6c"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "40e05464-ad85-4c56-b304-192dbe96bcb1"], 
    ButtonBox["HandlerFunctionsKeys",
     BaseStyle->"Link"], Cell[
    "what parameters to supply to handler functions", "TableText",
     ExpressionUUID->"612990fa-ed36-4075-91aa-b758d6e62611"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.889474066749362*^9, 3.8894741024349833`*^9}},
 CellID->1738984238,ExpressionUUID->"5d228e9b-6128-4256-a82d-0c1f022513e4"],

Cell["The following events can be generated:", "Notes",
 CellChangeTimes->{{3.889474108154808*^9, 3.88947411492656*^9}},
 CellID->1973568911,ExpressionUUID->"72f88175-2618-4ef4-b49b-29f6c62bedfe"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "6ce38db1-3bf5-4757-b4ae-966a6c7a3703"], "\"\<HTTPRequestReceived\>\"", 
    Cell["request received", "TableText",ExpressionUUID->
     "910a0ffd-48d2-407e-b7e6-b3c20f6f4a14"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "62d6412c-61fd-4c67-8ab8-420971632981"], "\"\<HTTPResponseSent\>\"", 
    Cell["response sent", "TableText",ExpressionUUID->
     "de39dcb4-a01c-4990-8a48-dbe20af56ced"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.889474127806839*^9, 3.889474183483181*^9}},
 CellID->1484738809,ExpressionUUID->"04f93e12-36b6-4951-9abf-00e3e0d2219c"],

Cell[TextData[{
 "Possible keys supported by ",
 Cell[BoxData[
  ButtonBox["HandlerFunctionsKeys",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "572ceb91-9529-4ae6-b7c2-9b89e7d72688"],
 " include:"
}], "Notes",
 CellChangeTimes->{{3.8894741881660137`*^9, 3.8894742090635777`*^9}},
 CellID->1737601310,ExpressionUUID->"fa6c7d7c-8976-451b-97bc-ad01c9835782"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "8d193a5b-9b63-482a-be21-26b0b0b39009"], "\"\<HTTPRequest\>\"", Cell[
    TextData[{
     "the ",
     Cell[BoxData[
      ButtonBox["HTTPRequest",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "b37c6042-365f-41e9-ac8b-3a1f33935287"]
    }], "TableText",ExpressionUUID->"ec836e1e-4b87-4e28-99af-f798cb6aa16f"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "dcad1656-4fc9-4eb1-93f2-fa843b7081f5"], "\"\<HTTPResponse\>\"", Cell[
    TextData[{
     "the ",
     Cell[BoxData[
      ButtonBox["HTTPResponse",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "ee947710-ab8d-48fa-9dfa-b78ece7e20a2"]
    }], "TableText",ExpressionUUID->"8435ffad-da4d-43af-ae24-fc52938f572d"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.889474217421781*^9, 3.8894742491373587`*^9}},
 CellID->1289514234,ExpressionUUID->"d7a6c1b4-c37e-40d9-acb6-37385a5b188b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "2663d1d6-5269-4f51-a89c-d3a96e9535ff"]
}], "SeeAlsoSection",
 CellID->2039137142,ExpressionUUID->"15f78e16-a1af-4409-9375-ccd55f541822"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["ChatGPTPlugin",
   BaseStyle->"Link",
   ButtonData->"paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPlugin"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "4c1eebe4-97ee-4863-a7f7-7c3f5ee6ae25"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["ChatGPTPluginCloudDeploy",
   BaseStyle->"Link",
   ButtonData->
    "paclet:Wolfram/ChatGPTPluginKit/ref/ChatGPTPluginCloudDeploy"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "c30e4b3c-074f-4a30-94a9-d159cfd44a59"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "27ea6254-d386-4cf0-b69e-e4da92d05efd"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "02af9b38-5847-4462-9a83-6598f90ff537", 
     "57139533-eef0-43d1-b5c1-ffe1137d9663"], $CellContext`cellobj$$ = 
    CellObject[
    "02a83ee2-9933-4be2-a5b0-3d334b7f8e60", 
     "eabeed2c-e4ba-48db-82f7-3144ee5f0ef8"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "02a83ee2-9933-4be2-a5b0-3d334b7f8e60"]
}], "SeeAlso",
 CellChangeTimes->{{3.889473306088585*^9, 3.889473308142552*^9}, {
  3.890925726788642*^9, 3.8909257335183983`*^9}},
 CellID->86423121,ExpressionUUID->"edaa3921-2e40-49ab-9817-55f9ea164173"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "c931f91f-1890-49b0-a634-1ecebc0ea381"]
}], "TechNotesSection",
 CellID->814449275,ExpressionUUID->"1b20e0a0-6471-40aa-a172-84a409563d0c"],

Cell["XXXX", "Tutorials",
 CellID->388198947,ExpressionUUID->"54fc0ae8-d630-4a4d-b8bb-b26f1dea589b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->404382643,ExpressionUUID->"afdf4e86-e313-4fe8-bbf4-8d9a872db585"],

Cell["XXXX", "MoreAbout",
 CellID->1820821793,ExpressionUUID->"16cca966-37bb-478b-a0d5-64b5c6effcb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "70ef281a-1ade-4c47-a4bb-98318c1497d5"]
}], "RelatedLinksSection",
 CellID->909905201,ExpressionUUID->"2a3ff21e-fb6a-46e7-8d9e-536f39452e5e"],

Cell["XXXX", "RelatedLinks",
 CellID->545662920,ExpressionUUID->"60752c2a-8ef3-49a1-9bea-7cb156508a15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "24807972-a895-48cc-9c41-0a8333db9708"]
}], "ExamplesInitializationSection",
 CellID->1201523750,ExpressionUUID->"00766500-63d6-45c9-a957-a9bbc523089d"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Wolfram`ChatGPTPluginKit`\>\"", 
  "]"}]], "ExampleInitialization",
 CellChangeTimes->{3.890323903694914*^9},
 CellID->1220933509,ExpressionUUID->"f1583514-0533-404e-bd26-af386bd5d22f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->1023238678,ExpressionUUID->"b4b63811-622c-4c97-bb9f-fd0fcbfaacf8"],

Cell["Deploy a ChatGPT plugin to a local web server:", "ExampleText",
 CellChangeTimes->{{3.889473009228105*^9, 3.889473020802627*^9}, {
  3.890398799300242*^9, 3.8903988109837*^9}},
 CellID->374440937,ExpressionUUID->"ddde5435-aacf-4099-b303-8660c4934633"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<CityPopulationFinder\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Endpoints\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<getCityPopulation\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
          RowBox[{
           RowBox[{"#city", "[", "\"\<Population\>\"", "]"}], "&"}]}], 
         "]"}]}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8894730240943127`*^9, 3.889473030319086*^9}, {
  3.890398737336687*^9, 3.890398752365046*^9}, {3.890398801057192*^9, 
  3.890398818379952*^9}, {3.89092539896572*^9, 3.890925399082377*^9}},
 CellLabel->"In[3]:=",
 CellID->428262334,ExpressionUUID->"4c0ee421-71dc-4cfe-989d-3f35108998f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931343469484326], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931343469484326], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931343469484326], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931343469484326], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-58b208bd-4ea4-43a7-a40e-d9cfd370e7f6\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-58b208bd-4ea4-43a7-a40e-d9cfd370e7f6\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-58b208bd-4ea4-43a7-a40e-d9cfd370e7f6"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3611931343469484326], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3611931343469484326], "URL" -> 
    "localhost:18000", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "CityPopulationFinder", "Description" -> "", "Prompt" -> "", 
       "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getCityPopulation", "Prompt" -> 
           Missing["NotSpecified"], 
           "Parameters" -> {
            "city" -> <|
              "Interpreter" -> "City", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Slot["city"]["Population"]& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.889473027310793*^9, 3.8894730306369877`*^9}, 
   3.8903243280603333`*^9, {3.890398778190605*^9, 3.890398818646522*^9}, 
   3.890925190601407*^9, 3.890925234555771*^9, 3.8909253999360323`*^9},
 CellLabel->"Out[3]=",
 CellID->2010343509,ExpressionUUID->"756d76f7-d0c5-439c-8348-e0362144586e"]
}, Open  ]],

Cell["Stop the web server:", "ExampleText",
 CellChangeTimes->{{3.889473069685279*^9, 3.889473074177333*^9}},
 CellID->1129729877,ExpressionUUID->"2270c8fd-dbb6-4fd0-9577-43b2b832bc7a"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 CellChangeTimes->{{3.889473081013341*^9, 3.889473083050357*^9}},
 CellLabel->"In[4]:=",
 CellID->1952056595,ExpressionUUID->"3634bc9f-131f-45a0-8ce1-05b383133cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "7b3c7f16-45b7-4388-b7f0-79b1af2c2aa9"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->523415970,ExpressionUUID->"e17586ef-c0f9-4026-b318-29459c49dc32"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "b8c45972-611a-49b4-9f57-209c37f37550"],
  $Line = 0; Null]], "ExampleSection",
 CellID->959189678,ExpressionUUID->"3a39a644-2a76-40fa-9fce-98ef207fac0d"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["HandlerFunctions",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "5a6e2d8b-76f9-48e3-b748-e270b6dd6fd9"],
 " to add logging and to view requests from ChatGPT. First, define a plugin:"
}], "ExampleText",
 CellChangeTimes->{{3.889474262692946*^9, 3.8894743223686037`*^9}},
 CellID->726188294,ExpressionUUID->"b3cbbf46-1e84-4dbc-a65d-04ec3e8af36b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plugin", "=", 
  RowBox[{"ChatGPTPlugin", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<CityPopulationFinder\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Endpoints\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<getCityPopulation\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
          RowBox[{
           RowBox[{"#city", "[", "\"\<Population\>\"", "]"}], "&"}]}], 
         "]"}]}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.889474308221489*^9, 3.8894743093761187`*^9}, {
  3.8903988930805063`*^9, 3.890398897836549*^9}},
 CellLabel->"In[2]:=",
 CellID->1020351672,ExpressionUUID->"88260ee7-e80c-42e4-82c3-bb133e611cc6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPlugin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
   "Name" -> "CityPopulationFinder", "Description" -> "", "Prompt" -> "", 
    "Endpoints" -> {
      Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
       "OperationID" -> "getCityPopulation", "Prompt" -> 
        Missing["NotSpecified"], 
        "Parameters" -> {
         "city" -> <|
           "Interpreter" -> "City", "Help" -> Missing["NotSpecified"], 
            "Required" -> True|>}, 
        "Function" -> (Slot["city"]["Population"]& ), 
        "APIFunctionOptions" -> {}|>, {}]}|>, {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8894743100007887`*^9, 3.890324335190215*^9, 
  3.890398910780046*^9, 3.8909254090841627`*^9},
 CellLabel->"Out[2]=",
 CellID->1015065423,ExpressionUUID->"7dd06605-3e68-4921-8a1b-02e9ab3b777c"]
}, Open  ]],

Cell["Deploy the web server:", "ExampleText",
 CellChangeTimes->{{3.8894743264688168`*^9, 3.889474332976077*^9}},
 CellID->325808286,ExpressionUUID->"d455e7be-ec66-4f33-9bfe-1507a39230e8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"requests", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "[", 
   RowBox[{"plugin", ",", 
    RowBox[{"HandlerFunctions", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<HTTPResponseSent\>\"", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"requests", ",", "#"}], "]"}], "&"}], ")"}]}], "|>"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894742923742332`*^9, 3.8894742939955072`*^9}, {
  3.889474343028894*^9, 3.889474359924485*^9}},
 CellLabel->"In[3]:=",
 CellID->1993786874,ExpressionUUID->"c1e65441-e113-442b-8041-656903d1c0a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931371018170892], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931371018170892], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931371018170892], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931371018170892], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-4caeb520-225f-4a8e-a3bf-3633f3382b4c\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-4caeb520-225f-4a8e-a3bf-3633f3382b4c\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-4caeb520-225f-4a8e-a3bf-3633f3382b4c"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3611931371018170892], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3611931371018170892], "URL" -> 
    "localhost:18000", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "CityPopulationFinder", "Description" -> "", "Prompt" -> "", 
       "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getCityPopulation", "Prompt" -> 
           Missing["NotSpecified"], 
           "Parameters" -> {
            "city" -> <|
              "Interpreter" -> "City", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Slot["city"]["Population"]& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.889474361944867*^9, 3.890324337127048*^9, 
  3.8909254119064837`*^9},
 CellLabel->"Out[4]=",
 CellID->1653139383,ExpressionUUID->"bef284d7-1325-4418-aa9c-2ec1f8776a1a"]
}, Open  ]],

Cell["Install the plugin and ask ChatGPT to use it:", "ExampleText",
 CellChangeTimes->{{3.8894739241500063`*^9, 3.889473949903037*^9}, {
  3.889474011909892*^9, 3.8894740209517307`*^9}, {3.889474383429101*^9, 
  3.889474383824717*^9}},
 CellID->1536036706,ExpressionUUID->"3b1b94af-3b8e-4679-b46d-6c3da7fdd2e7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQmcHGWdv93LXcGAhktkRUGFXdZrVTz/4rWL5+qqux6IB6yKeAACigiC
goCcIggIcsp9yWFIIOSYI5lcECBAAgkkISH3JJNzcpDk/de3Zqrz9ttvVVf3
9PTb0/08n89Dhumu6uruqp7327/32O/IY7/4vb992ctedsI/Rf/54hEnffT4
4484+Uuviv7nf4854eijjvnudz51zInfPeq7x7/vyL+LfvnJf3jZy86Ifvj7
6OcXXlhg5s6dh4iIiIiIiC3iggULgx8DIiIiIiIi1s/t27cbAAAAAAAAAAAA
AAAAAGhOqAcCAAAAAAAAAAAAAAAANC9bt24NfQgAAAAAAABQR+gXCgAAAAAA
0FqQAwEAAAAAAAAAAAAAAACal23btoU+BAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAKgQ5gsFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYerB+IAAA
AAAAAAAAAAAAAEDzQj0QAAAAAAAAAAAAAAAAoHlh/UAAAAAAAAAAAAAAAACA
5oXxgQAAAAAAAK0F/UIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGHowP
BAAAAAAAAAAAAAAAAAAAAAAAAABoDugXCgAAAAAAAAAAAAAAANC8NEI9cNu6
WWb9zONMT9ebzarO4WblhFebVRN3jU1+Xtm1q+mJfl7dMbzv3wmv6jP5/+jf
Ne3DC/+f/C7ZtrC//p+9+xoE13TtbzbMPDZ+jgAAAAAAANCXAZX/Vk7Yoy/z
WTlQ/66cMKzPiTsNKAfa+9G/9cqBdh4kCwIAAAAAQCMQuh6oOmBfBizNgbGd
u0T/Rtmt6xVRZnulJwcO6//9sOwcqH1EdnftVMiCq9t36fu3DjlQqi4IAAAA
AADQ6vTVAl9dsFnrgUlNEAAAAAAAIDRbt24N+vjKfUV27Nb3b1wLHF6oCa60
sl01ObCns6/+F/8b/b5e2c8VAAAAAAAgNKH7hdq1wOx64Kv66nidwwr1vNj+
+8fZLsp5bg4sqgE629a7HkgOBAAAAACARiB0DiyMA8yycxfTHeVAb02vfbdC
HlzTFv3cnvQBfXXf+L9kTGCA8YDkQAAAAAAAgFKKa39WXdBeM0K/i+uBfXW8
Qk2vc1h/DXGX/nxY2i9U903WidD9C3VE6oEAAAAAANCibNu2Lejj23nP/dk1
zoK2SZ9RZb3OXQo5ryh7dQwvHg8YcGwgORAAAAAAAMAU6nVJX063/uf+v1sz
TPqMJv1A4zxYGDs4zMqKry7MN7PSut2uD1ZitbVEAAAAAACAVidZ1y+ZyyWZ
EybPuMHi+WWsemCS0dr7cl+3VTtMfk5uT+6v9Qf7tH+2/r9GtUQAAAAAAIBW
p2/s3iv71oq35vS064HZWXDHfZP859YNk3pgMreo77b0/y/9PfVAyGLuvPlm
48ZNoQ8DoKFYvnyFWblyVejDGDJs2NBrtmx5KfRhDAoajzJ7zvPB56kDAGh1
Qn8Or56wc3+9beei+UC74zF/Vm6z+4UWfh5W1NczyWaq+XXr96orxv1Gd+6v
/+0WZ8F4//39SZP7lYw5jGuUryrkzO5C/9NhA5p7tNWZ8eTT5gMf/ETs1w//
bujDqSm6lvSc3n3wR8173/cfZtLkaaEPKZNmfi9anUZ7b3/3u8vj60L+6U9/
Dn04DcvDY9rM97//E3PIIZ8uvF567WqBcuXMmc+Y0aPHmRv+fJu56+6/mo7O
riifd+favlbn1OLFS81HPvrZ+Ll9/D8+b1at6ql6X2DM5s1bzJq1a0MfBgBA
VaTVA5Mxf1l9RJOcluS5JEP6anlFmbKo5jfM6Wc6LD6WVV2vKOTMHeMXhxXG
Hw7leuDxJ5xS+Ht+2ulnl73/9OlPFO4vn3pqVtltTvr5rwr3//nJvy78fuq0
6YX2zaGHfmFAz6PRmDLlkcJzk9876rjQh5RJM78XrU4jvbfKH/Z1oe9Itm2j
DuRy330ji16nxN+ee/GA9jt//gLzq1/91rvvxK9+7f/MhAmTM/dTq3Pq4t//
seixr7v+1qr31apMe+Qx8+NjToqvpeR1VLbW76699mazfv2G0IcIAJCL1VHG
imuCUfZSHuwbs/fK0uxWth7YN56vp3B7kid3jo3re127Fo1HLB1jqMfboygH
2mvbF8YhDvEceOmlVxX97SiH/V2+vPzya8puo/zn+/6/kdqnCVdddYP59Rnn
xc6e/VzV+5k374Wi1+n008+p4VHmR88heT56bmk04nsBtaFe761qS8m5pp99
qA9gUv+Rn/zU/wza8QxV1G53s9kPfnhi/D2daoTVoppfVv5z/eOV16fuq1bn
1O2331v0mKMeHFP1vlqRe+97oOz7+OnPfNksWbIs9KECAJSlJAeqf2j0b1wj
7NylZLxgoUbY2dcvs2/d+L6slqwh2HefncwKrR+vPCcn/aNZOfnlfWvKRz93
T/rb6D7/YLo7d4u23bNvHx17mVXj94v3tarrb/vyoH7W7yP7+pDuNORz4OOP
P1n0N2Px4iWZ9//CFw8v+e44C42Ps+8/a9bswm2NmD10HMkxjRw5ekD7Un8r
/Q0+5tiT4v5PIdBzyPMaN+J7AbWhXu/tqb88q/A4+jkN1Zr+53+/FfcnVC0D
irHfLzlnzvMD3udll19Tkg9UPzriyB/G79W3j/hB0fd1iT/60U/jGm7WMQ7k
nOrt3Rh/b6B9nH3O78xLLzXnGMjB4I477il5v/Qe6rsV3+/nzp0f+pABoMEJ
vX5gnAFtlQs1XtCqDyZrQ8R9NK1xevF4QtUANeavfTezum336N+9zMqO3Qvz
hCb1QOW/7kn/ZFZMekVfBuz6uzjr9c1TmmTLKA+27duXCa3b9HvlRe1nVZQh
7XxaaSZsBPSe2/1J9P1iGj09q73fN27YkN7vxP6+V3+L7DGojZg9apkDGwFy
IDRaDoRs1JfPruUMFDdXJv0y0vKdPR5R6nusrH3yeVF/NGeQ/R7pPXj++XmF
2/Xe/uasC0syPQBAIxPX3Bzj/BfX4tx64I45XJL7xWtF9Nfsesa/xqxq28d0
j/9ns6Jj38h9zPIJe5plE4eb5RNfaZZHWXBZlAOVBVdN+ps4C3ZP/Idony8v
GjOoPqFxPTD6N+5Tqv9XPVH5cfLLosd9eWEs4lCsB4qjf3BC4W+FPX7Pxc4U
tmMy+iod95NfFO6nn20asS1BDmyc9wJqAzlwaHH++ZcUXkeN5RsIygv2Z5rs
nDApcxvN1fK1w75TtM0jTt2Wz4uwdHVNKfp+Vd/R+jjxp78seh8ZiwsAWTRc
PbB//tC+vqF9tbaSfqHWuMBkjcBV/TXBnnh8315Rhtst+nd3s6Jr174cOEFZ
8NVRFnyVWTJxmFnR+QrTMyl6nMk7981RkxhnwCT3/WMhA/ZM/gezKsqAcRa0
5rMZivVAcdvtO/qXaM62NJQRfTkwa+yb/d3yPfeMKLotrS2hOc/U7tB31qon
zqlwTvG1a9eZ6Y/NiJ+X+kM9/PB4s2jR4tT7d3evNE888VSsfby/v+TKwu/z
zIfj8txzcwvbZ60dob/Nuq9qsRqv+dcRD8bj+gbSR0pzAepx9RyS56PnlhyP
XLFix9yAg/VeCPU9/stf/mr+cNnV8TwQGuO0sgbzAqoPc/Jc7HbQCy8sjMcZ
6b2//oZbzfi2Tm/tI4s1a9aaceM6zI033RG/hrfccrdpa5tQdj/aLjmmhQsX
FX6v56vtr77mpnicpo5v2bLlmfvS2gq+98qHfQ67+62kza73+5lnZsfzlOhc
vOfeEfGc/lu3bvXeX+d18rjf/e4xhcfRz/a5Zr9uS5cuK/xex52FrgHNtas+
cDoenT8ae1jutdPxzpjxdPwYej727/U71dxkR0dX/DrXGn1e6DW84opr4/c7
uabTUJ+K5DWxvzvTuED7ddT5VQnufDPXXXdLru30eWlvp7m+bGr1eaHbNPeo
nps+s8qha0rXTnIdqY9xWgbyoc9afT7ob4Lem5tvvss8Fv2tUP/UStA5pc9r
fcbceOMd8bxg9jmu2/WcdA6mXTsJ1XzWqA9t8vor66Whz1r7fRyMcx0AoFas
iXJcojLdmrZdC31Bk4yVZL5kTGBfH87h/f1Bd+2736RXmg2PDDfrp0XbTx0W
9wFd2rWzWTFlJ7Nq6nCzYtJu/VlwD7O0c3ezdHyUETtfG+1rX9M9Yc+43+iq
SX1zj67qih5HP09+uVkVbd8zpS8zLu+IMuS4aB/t/WtJJOsW9mfRoZQD9be1
+G+Fv81pZyT9zSqXHUv3W/w3yG1L6G90WtZU31X97c9CbW31ffFtn+zjzjvv
LdnuEisrZak2TiXY38PrufrQc8p6TLVTqiHP81HdIaHW74VQnVj92tIe/+Rf
nDGgOc7VXy3Zl/KezlvNf5t2zGr3lcuwalOmPe9kP2eceX5qG83+TkVz/uuc
yTq/1L5Oew3sfl32e+XDnr9J461s8uRA5a3fl7kONE+J+12hr8+hT7sGZdcN
9dr40ONoDirfmDX79VWb3oc9LlnvmTjPqrO5XnjRZRVf3z4efHBs5jmv8dW+
uTgfemhsrtfR9/mVhXJksq0+pyv5bukXp5xZ2Faf/Ta1+rzQ9wD2fdPQdxH/
950fp74uem7KTlkoP2adT6qBlvt+SsehMfG+7fUaKe8Le6yFzkUfA/msUb7U
Y0nNAZuGvuew98latgCQRfD1AzuGFbTXD+zpr/vt6Be6U8n8oEm/0DVRrlvb
sY/pGfMGs6H938y6znealR3vMSvb3mO6x/27WTLmQNPd+Sazomtfs6xzrygj
7m1WTz7AdI89yKx48J3RfQ6Mc188n+iEfaLH2r1vvtD+HLhm8u7RY7zRrBzz
NrNy9L+Z7vF77hhXOETrgUJ/R5O/FSMeeKjkdtWrktv1t1Tfcdp/6+zaR4Jq
QMntvnkB3bbEWWdfVLYdlJaLHn308cy/8bZu2zNEDtTf9qzMaqvaSqW1+jz7
zcqBA3kvhL6rz3MMOi9UH6oGOweqVuT2f/OpWkva9/OaR8G+DrJMm4PPzoFa
K8Su7WTty1cXq1cO1GN/9r++kut5qy1u104GIweqNqZ5S/LsV59BU6c+Wvpe
OjlQ9aly+1KuHAgXXHBprmOWbl1uMHLg5s2bi7bVNVIJyinqfyjd9U9r9XmR
Jwcq39l/a7L0zXGqdk2e61Dq+l+w4EXvceh7JnfspE/V88rlwFp81uThZyed
nnntAwA0EspPicpJhTzVMbyQC9VvM67XWev49eWwl8c5bNnY15ulD77drGj/
nNn8+I+MWXSR2d5znTGL/2g2PnlylP8ONwse/H/mhXH/ZpZOep15sWNPs3js
/mbrM4cZ8/wpZuP0/472v2vkblF+fHNfFkzmGNXv2/c1vZM+bMxTxxnz4i+i
fPnGeJ37oVwPFPquP/l74VtHUO2W5PZkDKH9t/XWW+8u2Ua1juR2tRNc0tqQ
yj3XXHtj3I/UHesufX003XlMNeZRbT+Nj1Mmseeql3a7Rn141H6X9t9v9bdJ
fq9+aZV+T5KVA893ahM6XvV30/qM6q/2jW8cVXR72jz8aai9qOO2x4fouSXP
R9r9sGr5Xrh9kfS4yryqIasm87nPH1Z0u76Hr+Y7KDsH2upcUG1LfQg1H6J7
u15fF2V8d549tdM0Pkv921Qbcc+hL3/liJLxNnYOdPel7/Z1u64b9zsLvc4u
9cqB51h9zJL346Jof/o+SG13PU/79osvvqKwreonyfmkOUCT++hn+1yz+7WW
y4FujUSvlV4zfcbo/HEzq84vt9+sO09xovKlsoL69Ok1dfPFxIlTMl/nNHzz
9+uxdK7p8TQ3qnu7XRdUOz95rexrX7Un+3VMq3/6ePbZOUWPp/6XtaJWnxfl
cqAymbsPfX7ofFctTOePey3ps9pG/cLt23Wd61pUn2etpeH2IfDNga3vPty/
MdqP+mfGn7Mn/jL1e0g3B9bqs6Ycdp+d+Lr9/R8r2h4AWo/Q4wPtHBhbqAXu
qPntmBtmVysT7mTWdA0zyzvfbJZNP9xsWPib6MlEbZWNlxqzNmo/rYwyyKbo
/7ddb7a/dINZs+Bis2zK983ccQeaVdP3N/Mf3M+Y5T8z27feYzbPOd4s7NzD
LJ88LJ5XJs6D/fXBVRP3MQsePsisnPI1s63nr9HrNcosbX97oS45VMcHCrvt
7qvd2d/PJ5lEf4eT3/m+S7e/7+zo7Cq53deW8M05o5xm38dda1htN/t23xpU
+ttrtx/ttqxNLeeJycqB9vfKapO46G/+N7/1/aK2eTVUM0/MQN4L1Tnt56af
fWO53PpB0p+qEnw5UONsXDSO0G7v62e3/5e9jqZUNvLhthnVBrTx5cCzPfvS
/B12bvJdI/XIgRqbZL827rYJdnZLWysm7zwxWTnQPQ/1Gum1cnHnzD/uuJOL
bvflQDcfCPVjsJ+/1t6uFPXrdc8v3/o7bi5TW99Xm7a/I9I5UC3u52It/77X
6vOiXA60PwPTPif0mWPnKneOVfs6U5bz9Y3Udx7247j3sfvIyj/+8bqSfei9
dI9XujmwVp81aej1cD8bdd3Xot8zADQ34fuFDi9o9wuNa21S87T057943F4y
n0uUDZeO3dNsnHWY2brxQbPVjDNrnzvRbHzia2Zjx8dNb/t7TffUj5pls48w
29dfFn1gt5ut6x8w3U98yiyb/HqzePybzbalPzXbt4wzG58708zveF2UE19u
lk3623hcoB67p3PPKO+9ycwd8w6zYNp3zdbeJ6MP3ClmUfv7+46zfdchO1+o
0Nwq9t8Nu53s9i9K1omw15FQ28du06ivn72Nbxy+25aw15h3seuV+vtoo/ER
6oMqs+bCs3NrWlu2HjlQr5P9vNXvyofm7dM8D3peWXOyZlFtDqz2vRg16uGi
c0JtXx/Kufa8IvqeoVLcto5qWGkoY9n31ffuNvb376rdpLWZ1T60v0/44pe+
UXS7mwOV39P6oeoasWsI7ny69ciBupaTa0fnWtrz1the+3npM8GlFjnQ7sem
1yZrXgu3ba711xPcHOjrj5Bgt8v13laKal/2Y2XVFO3PIOn7vKpVDrTniEnG
SNaKWn1eZOVArbma9z3UeDn7vvb8pvpeMDnHs+Ylsr+31LwvCTrX7ZzvW0cj
QX9H3VqfmwNr9VnjQ2tHuP3jtV25eZUAABqBHXOA2g4r/LsqGRfYnwG7+3+3
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
zUZaLbBv3fgddk8YblZ1/rNZN+lfzcpxbzKbn/iG2b55mtm67N54Pb+e9t3M
urZXmPXtfxNlvn8wa9r/Kfr/3eK1H1ZP2CPOgMsm7Rb5uijvHWgWtb3FbF8W
/Y3YPtWsn3+xWTbuX8yarr1N96ThZm3XMLMpesz1UfZcO2F/s2rc/mbdxE9F
jzfVbNs0panGBya4c0/nadPbYzkSy42Dr0Vbwp1nQznWhzKC3a5Jy4H2WAz1
GxoIaTlQ8y8m37Orf1LanJJq99jPTa9Bpdh9dLPaw7Vq16kPoX3MGguVhuZE
0XkjjzjyhxWvc+2uH/j97/8k9bus6667pei+el1s7Dykdp5qUz40n4r93Yh7
Xbg5MGtfbv8xzfFuo77M9nuXVud2+2xWkgPt812ZwYdeU/WzLpcDdfx5Pi+y
cqD6INiPo36rPlT7sPsB6PWx59mtZw5Un257+6z1LuyMl3ZN1zIH6pyxM4xe
C82nVY7LL7+m6Dg1x4pNPXKgamX2bVlrcbrfmc2Z83z8e/uczJo7xb1u3Rzo
5mmdezOefLpQX9WaDapf+8Z6u9dKrT5rXFSz1+et1potN08xAICP0PVA35oR
9lyhcT0w+jmuB07YJ8pS+5metv3M8gnR35ZNXWb7tqlmxYzPm+fHar2/4WZD
2y6md/xeZk3brvH8Misn7h7t47VmaedeZlHna8zirtebFzsPMAvHKweearab
qWZdlAOXjDvI9EQ5cMWkaNuu4aZ34s5mXbTNmolvjHPg2omfMVujHLh94+Sm
qwcKu52WqHENWbjt7DxtmMHoi6g169zxG5p7252bMy0H2uONNCdA1npN5UjL
gVpTzj4We1xTgp6D+tja96tm7lC1+dz2jS9v1eq90HG73yOoTuN+tuh7c7t9
mmdOFRc3B0r1c7T7Yqqd5mZTHbO7VqE9DlbqPFjlfOevc8Edv6m+czZuezLZ
l1s/0Ly7dp9G6a4l5n4PoOvSXVNEWdJ9vSvJgTr37NvcmovalnY/xrS2rXD7
w6V9b5GVA7VWhfteadygjfKB+xmlumrR61vHHKjXyF27W+ec3QdT7XJ7fKpM
68tcyxwo3Jyq10Pj4nxZQe+/3ZdU6vxyP1PrkQOFPcZAqn+0W/fX/Df2GEB9
p5Tg9sPU546LPYen/Tnp4n5HkbyW7t8W97p2r5VafdbY6DPd/jzNM58NAECj
kbseGOVAjRFc1bl3lKf2NS+2vddsWqXvK582a184wzz14HvN4o79TPf415p1
Y19vNrTvYVZPerXpnvgas2jcm8yyyR8zSx/5hJk/+SCz4JF/MS+0vcWYpadG
QXiyWTvvYrN47L/GYwlXdO0eZb9dzfoJ/2RWT9wryp77mZVjX2fWRrlz26b+
emAT5kD3u1WZNm4owW2/SbU/sqhVW+I85zt2qbbMmVEb164Z2KblQM3V4t5X
+1DtrtLvWLP6hbrz86utpfl29L372ef8rqRdmWfckQ/N3+p77qqd2eMfa7mG
h1ufSh5TfRs1js3uw5iYtrZIFm6/ULdtpcfzfT//0EP+GqXaj+591RZTDvKt
8aHn4mLnQPeYtC8ds6/enjYHk9sW1Huj7wdU59Dac75zu5IcaNccE5VPdA7q
9UibR9SXA928LVVv1Llm92nOyoHCN/evXjO9dvYYLvs5uTmlnjlQ2Gvu2I+r
c1CfRb7X0fcailrnQGGPtUtUblCfVq15qM8e3xxVur59eb5eOdCtZyaqD4Hq
e27mij9rrfF7yoy+80XXiGrcvn1LXw5Urte57Lu//Z6rn4P9ueN7n2vxWWPj
rjcvq+k/AgCtTeh64Ooo4yUq7ylfxbmvaydrrphdCmsIxllw4u5m8YSDzLNd
XzUvbRwRz+HS/cyZ8di+uaPfaObfv7/pHruvWTl+T7M4+v/Fo/+f2bLqiujJ
3mSWzv+seWHmgWZe+0HGLDnFbN/WFeXAi6IceEDcf3SFxhkmOTB+rDeY7nFv
MGuiHLh982SzfeOkpsyBWi/C/nuSd4y+274tV7+qVVtCf+vtOl7a32etq5v8
f1oO1DoZaW3fcvPEuWTlQOXmtLlBXTXvaaV9Jm3sMTK29tikWq/lqKyV57lJ
zdVXDXYOVB9eX99k12uvvTl1fzqPVJfMc8xqg/rOBzsHqs2o967cvvQdQ9p6
0ur37MuNtspa9hw4leRAfeZfeNFlZY9RY7XS1kRLUDvZl/GlvSZIuRyoY1I2
yfM+qO6h/nMu9c6BQv3x8qy/oftkjRcejBwo/nT1jble00RfnSqhXjlQaN5Y
u/9y1uvq++7RrQn61HzDdsbz5UCha15jLN11KJQn9V5pji9RLgfW4rPGxjsu
ca7/ewYAgEbFrQf2THhloR5Y1De0Pw/G94n+XTZhb/PUQweapU9+22zZeHu0
p1FmY/dFZuWzJ5sX244289u+aZ7vOMwseeS4qGGlubMfMC/1nG+6n3q/mde1
V3SfA832xaeYbS9NNKvnXmgWjTkwynV7muUThsePu65j5+j/o58n7mtWjH9D
9LtPma1RBty+ocssajs4zoCxUTZthhwo7Dk1ziszZ32C3cdMtYpy2H+7ymVN
fcdq/811Ua1ObWHf97tqZ2t8vsaMpLVHbObPXxBnJ7eWVGkOtL/X9fVH0jGr
HezW/pI2jXJNtRnJRn0JlYHdnGT3pavle5GgGtBJP/9VaptNNSe1A6vFzoGq
o+p5qo+Xrwaomm5Wv6oEZRmNBUpbb0zXRdb8QW4OFGqb+r7jV75Tf+tyczjq
3NV6Lr7npX5yanteYuVNNzvkeW/VZ9F3jPquIqmv2I+fNg5X9Wf1EXfb7fZr
b/f10zi0NDTHTlpbWeed6oZu/94Ee76rtO98EvJkkbzo+x1lirRzXp+R5fpW
2HO4qi9iLdF4S19/alu9XsqMWd8L1+rzQjkzz2uv3KT13H31P+1T14c+t1Of
95NPe/uGaH+63nUN2uuwp42VtdE2Ot/dc9BdR17nRNr2A/mscdHcs8m2Gh8B
AFApoccWq/aWqIy3esLO8b9xPXDiToX+oXE2VCac1JcNV09+lemZurdZOvWt
ZsGTXzLrVkV/O7e3RXuM2t6bnzSbl3WYDWs1L9ezZmvvZPPS8gvM8o73mO4x
e5sNcbY70JgVp0a3TzS9C841i8fuX6gH6vHXRJktzoET9onXre/pOjS6b1f0
GBPN4vZ/N6vbd4nXOWyWeuBQR+06reesvobVjKlLUA1O+9LYroHsJw/KmBof
puNO5robDDS2Ss9Hz6te9X/NM6u2kJ6b2o/l5v3Li5sDbdTW1uNpfKRqatWg
7VTLUA7SuZR815+FLwcmaHv1H9Rx6fgqmcM/QZlw2iOPxRm70u8l8qDzXFlh
enScabWgvOj56jVMmwcjL8oAGlOr563XT/W70H1XyqH3RrlE77WOW++bO7Yz
JOr3oBqtzlflK81Ne/fd98fjTRv5tdU1o/pvcm3nuSZt1MbRtazzW9dg3ueq
zzBdG7JcO0nvu53n8szxWc1njQ99/6FzDQCgGkJ//vtz4I7s15fFhsXzx6wq
3G8ns2byrmb9tN3Myin7mHkT32wWTD3ErJ75bbPmuROjXPdr0/v8L83GRWeZ
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
iIiIiIiIiIiIiIiIiNgc0i8UERERERERERERERERsXndtCn8MSAiIiIiImL9
7O3dGPwYEBERERERsX5u2fJS8GNARERERETE+rlhQ2/wY0BERERERERERERE
RETEwZHxgYiIiIiIiK0l6wciIiIiIiK2ltQDERERERERW0vqgYiIiIiIiK0l
ORAREREREbG1ZP1ARERERERERERERERExOaVfqGIiIiIiIitJTkQERERERGx
tSQHIiIiIiIitpasH4iIiIiIiNhaMl8oIiIiIiJia0k9EBERERERsbVkfCAi
IiIiIiIiIiIiIiJi88r4QERERERExNayt7c3+DEgIiIiIiIiIiIiIiIi4uDI
PDGIiIiIiIitJeMDERERERERW8tGqAdOXjzffG3sTWavW840u954elOp56Tn
pucY+nX2uX59r1m9er1ZtWqt6e5eg4iIiIiIFaq2tNrUaluHbt8PFZWPmjH/
+fJgo2VBnauhrxlERERExGZSbezQ7fw8hq4HqlYWOqPVSz3X0O93Yk/PuuDX
CCIiIiJiM6q2duj2fqPbCrVAuyYY+vWW1AEREREREQfXoVIXDGXobFZvQ7/e
6rMc+ppARERERGwFG3m8YOh+oaFzWavlQGqBiIiIiIj1kZogObBRciDzgiIi
IiIi1ke1vUO3/9PctIkc2Eo5MPS1gIiIiIjYSoZu/6fZ27ux6XPgZ0ZfZ34w
4R5z9hPj4n/1//vefg45EBERERERB9XQ7f80t2x5qSlz4Nvu+Z25+bnHzOrN
G00aI16YZf4ryoTkQEREREREHAxDt//T3LAh7Bw2g5G1VPerhM6l8+pWHwz9
foe+DhARERERW8nQ7f9GtZYZS1lOmc7lgRdmmd9G2fDrbbeak6eNMrc8/5hZ
s6W4TvjCuh5zyIgryIGIiIiIiFgzQ7f/02ym8YHq52lzxayuzDqfMqGbB11m
rFpiTorup36m5EBERERERKzE0O3/NJtl/UBlOps84/6U7dzsmMXlZXIlORAR
EREREW1Dt//TbIZ6oLKZPR/MDyfeU3YbjSH0zSGj+uCEpfNifbVC1QcH0n80
9Psd+jpARERERGwlQ7f/02yGeqBdC9TYv6z7aoygxgK62U99SH19P/U77dNG
+bHaumDo9zv0dYCIiIiI2EqGbv83Yw7UWoBuv860/qCq4fnmkFHGy5PptL1d
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
Uf1QYwST/du3Hfb1bxa2Vw3Qt/3Spd2F7cmBiDiUXDdvgdn09CyzdfpjZvvU
aZFTEZvMafH5rfNc53voaw5b09Dt/zSH0vqBbr5z1w1M6oOq+/lqf0JjAPOM
67vCWm9C69XXIgOSA7PNqgceeuinCrd96JCPmNui2/PkQfUhTbabOu2x1Psd
ffSPC/fTWMTk9+oHmtQhsx7nlFNPJwci4pBR7eG+7Be6jY5YX3Xekwex3oZu
/6c5FOuBiZrT5QFrffhyaAxgnj6kqi3a1KoWSA7MNisHao0H3/wsyoe//vVZ
qes/aLygXUtM095n8tgLFiwu/E5jBLOO/cabbiMHIuKQsPeZOcHb4oih1XUQ
+lrE1jF0+z/NoVoPdPuJqn6XrBWRhmqFWZlOuXKEkyuz1qcgB6Zr50C7vpbl
b876bea6EZrP89Of+VzqnJ1a12HmrOLPdd8aE+W86KJL4m2nTHm08LtvfPPb
mcc+bnwnORARG14yIOIOyYJYL0O3/5s5B2bp6z+qPHh5lBtV99OagFpDIm0O
mVofT+j3u17n+ze/dWQhF2nN9jzbHP6Nbxe2yVrP76mnno3H+un+bi1P9b/n
nptfuK9dD7zl1jvj/qQ+b7759njNCf2s9eG17YsvLi1sq/UJs479+utvIgci
YkOrvnCh292IjSZ9RLEehm7/pzmU1g8cSL1QY/zyotxYzdqA5MAdam2GJBdp
Ps4829hr9E2e/EiubTRG8Oqrry/aVpksud1e82FaxvjANLVOfDI+0F2PIu35
kgMRsRFlPCBiqbouQl+b2PyGbv83qvXIgYnKdll5MFlHMM8YQnJgtqqt2Wvu
zZu3MPP+I0eOLlrHz54DRmv4zZ4zL3bZspXe7S/9wxWF7X/yk58Wfv+LU04r
/P7CC3+f+vhz5y6I1w6U9mOoP2iy/V/u+at3W9UNk7xIDkTERpRaIGK61ARx
sA3d/k+z2fuF+tQ4QPUXPXnaqDj3aU3AateFJwf61VoKdp9NzfGprOW7r9Zj
sPt2al14+/Y77rynaF4YXxY844yzC/e59to/F34/adK0on1rvhl3Wx1XMi+o
O57xkksuL8qnvrGO9lr05EBEbEQ1Z37otjZio6rrI/Q1is1t6PY/ObAxDP1+
1/Oct+fQlFoLXhlP/TY158vvLr60aH0+qf6dzz47r2g/ypR2v8/P//eXzLXX
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
OjonBT8mLPXZZ+eZxx9/uuC8eQuDHUsrnTOnnX6GeeObDoj96U9PDnosM2bM
LDoHli7tDv76YG1zoFTb2x2XJ7U+hLtefK2yoNR4Os0XM/M3v4kfZ9MA+gEi
2oa+RrG5Dd3+T3PDht7gx4D1M+Q1MHv2XHP77Xeb3118qfnZSb8wp512hrn8
8qtMe/vEstt+45vfLpr794tf+nLQ57J48XKzYMFiM3vOPDNz5uz4X/2/bejP
nBAe8uGPFb1Pep9DHUujnTNZuudOHles6Im3nTbtsaLnKSdMmBzsebjHcv9f
RwV/fVE5cFrN282aR3TiUTvWdtCa8Wn3dbNg6DY/YrHTgl+j2NyGbv8jyhDn
flfXVHP4N75d0j60ffs73mluuum21H287/0fLLr/W9769qDX88c+fmjm80l8
57sONr/4xWnm6afnBP8MqoeNlAMb7ZxJc9mylbnOJdexY9vj7W+77a6S2/50
9XVBngs5sHHdOv2xQWtDJ+uLl7ufnQXDt/sRd6jrI/Q1is1t6PZ/mowPbC3r
fd7fGGW7Stq2p//qTO9+VEO073fGGWeX3MfNIKecevqgPa+kv2FeD/q3t5qp
05r/70w9cmDe9znPOdMIqt9kNTlwzJi2wvYHHHhQ4ffqGxqqHk0ObFw3PT0r
eFsbsVHV9RH6GsXmNnT7P03WD2wt63nO33DDzVW1b1U7VL9Le1/qA3fPvSPM
Mcf8xNxx5z1m+fJVJY/n1n9+9rPBq0VVmgOl2uqTJjV335N65MC873Oec6YR
HGgOlM88M9eccebZ5te/Pss89dSzwZ4LObBxXTdvQfC2NmKjqusj9DWKzW3o
9n+a1ANby3qd75ovRHUJt02o36l+o4x4zm/PN5//7y9527hnnXVuxY8ZOgdq
fg6p3PG5z33B+7zUN7FR80gtbKQcOFT05cB3H/xe8+WvHJbpY489FfzYXcmB
je1g9g1FHKrSJxTrYej2f5rUA1vLep3vP/jhMd6+kc89N7/kvldffb03L9p9
2x5+eLy56k/XFXzwwTHx7zVXfvI7u2+c/PRnPle4bXS0ve6veWrs/dxyyx2p
z+Gaa24ouq89n42bA//nf79asr3mTXzPez9Q8tzuu+8B7+Pp/ueee2H82n35
y18zRxz5HfOLU04zI0Y8WJgTxFWvkX2MMnnddLznnX9RvD/lsSuvvCa1v+Cs
Wc8X7UPP3Xe/8eM7i+6nY7Nvz5sD9XzifV11bZyd9XyPOfZ4c/kVfzLjot+7
c0xW+j5nnTM+Na+pHvsnP/mp+erXDjeHff2b8XFdf/1NJbVpW41ptR8jyWaa
J/Oyy66M56r57nePNudf8DszffoM7z58OfDCC3+f+1rTWhFp54DU4/rOeb2m
ymgn/fyUOFfqX/XjLvc9hbbT+fHzk081Rx/94/icTcYqVpoD1Vf6zN+cY773
vaPja0j7O/uc8+LXL22bhx4aW/R8kvd85qw58f9rHyeceFLLrBdSidQEEUul
Foj1MHT7P01yYGtZj3Nd7Ui3rS7tNrqrxgW69x85cnTh9m9+68ii25Qb9Hu1
F/P0oVO7Xvf/whf/p+S2uXNL/wZMnTq95H4ab5bcnicHSvXdc/ejdq99Hz2+
skfW8WseHd/rp7UR3PtmzcujfH333feV7Ef9Jt37+vKAm++Vwezb8+RAvWef
+ORnMp+v9qO+jvY2lbzPWeeMe67+8pe/ztynXjNlOt/7657nup9q2Wn7uuSS
y0v2MdAcqOxZcg5Y/Y/1mPZtOmbV61Wb9h2j5kBK61uq88R3bcevb5Ql9X1C
nhyo51zunP/eUT/wfv/hbqdz/Yo//sl7HdTj826o2fvMnODtbsRGUddD6GsS
W8PQ7f80WT+wtazHua785rbJjj3uhMxt1C51t1GdIbm9VjlQ9R33tptvvr3k
eC648OKS+9m5JG8OVM5w96Msldyu9SaU8fI8B+nWL305sFzGUq559NHi2lS9
cqDWM8j7XFU/To5zMHKgMobWksh7PMcf/9OS18PNRJ/9r8+X3Y/qoPY+6p0D
9f6XG9+q/tru4/zlnr+WfW6+19PNgXrd3TU90vzRj48rOQ43B37gg4d4tyUH
pksWRCQDYn0N3f5HlPU41915GmXWmhCJqoupL1ei3R8vrU2vukWe9qT65un+
vn5r6pPmHovbnj/00E8V3Z43B+o5uI9nZ+K0HJJWc1Eb3q7V+HJgHjX+zO47
WK8c+O0jvuN9rmltea0xWc37nHXOJKqvZtprnLZ/vU72PtLepyx1btn7qHcO
zOu4cR1F53Fa/bCcbg5U/1/fa/6pT3/W+3qe+stfFW1fro5YeA3IgZmqLxzj
BbEV1XlPX1Cst6Hb/2nSL7S1rMe5rvXy3DbZ5MmPDGifefr45Z0/xO0zqbqT
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
yvMv+F1F2+ucsvtLkwMREXGoGbr9jyjrfd6rf2JancCncoNvjFyeHDhz5uzU
x0rLgdOnz0g9loULl6Q+r1rlQGUc1UfzvDaqX7lrr/tyoG+9OFvNzfHoozNK
jkV5Ims+R9Vt3Hk2K8mByq/u+1jyPnlqgm4OzPs+5zln1P8wz2uvxxsx4sGS
7VspB86eM89bQ7X1jbt0c2Al57z65WqNSXt7ciAiIg41Q7f/02SemNYyxLmv
dqrmLsnKg+qfaa/P7aqxSPb90+aXUB/Dk35+SpxZ7Ptrrsy0fbtro7l5wqfm
uMxzPHm9/fa7U+txei7qQ+ubl8OXAzXWT/0jfc9L8326NS1bZRY3y0nN26/M
rLFa9u/dMXUf+/ihRbdrXKJ9uzKA5oJ03x/1f9X77xuD6JvHM8/7nPecmThx
SmqtS+fs9476QUn+TnRzoPrQuveZMGFyyX7tcbLKx+7tdt/fcs6YMbNke50X
ye3uuuz2upG27thMrbHo3kdrqPjqsXr/brrptriO796mOrDv8dTX072O7GNU
Fl6yZEXJdu57pbw/GJ9biIiItTJ0+z9Nxge2liGvAbUR1SbU2gyaD0V9ItX2
H+ga82kqP2iuD7sfpatqfm6WkPbYuXqq9dfGj++MH19rBCpD++qjiWk5MLld
c5pofxrfpdci73Eocz788HgzctTD8TjGwXiuGiumuUUGuv8873Pe81Pzx6h+
pblt9dpW8pq1kqphqqas92+2U6+r5jxQH12d8+Oic9W3XiciIuJQNnT7P03q
ga1l6OugUVSbX3OTuOtEJLUNXw2qES2XAxERERExrKHb/4gy9HXQCJabv8a3
bl6jSg5EREREbGxDt//TpB7YWoa+DhrBW2+7KzUDXnzxH4IfXyWSAxEREREb
29Dtf0QZ+jpoBH05UOsxaKxT6GOrVN/675pDJfRxISIiImKfodv/iDL0ddAI
ai4W9f3UnDXl5mFBRERERByIodv/adIvtLUMfR0gIiIiIraSodv/iDL0dYCI
iIiI2EqGbv+nuWlT+GPA+hn6OkBEREREbCVDt//T7O3dGPwYsH6Gvg4QERER
EVvJ0O3/NLdseSn4MWD9DH0dICIiIiK2kqHb/2lu2NAb/Biwfoa+DhARERER
W8nQ7X9EGfo6QERERERsJUO3/9NkfGBrGfo6QERERERsJUO3/9Nk/cDWMvR1
gIiIiIjYSoZu/6dJPbC1DH0dICIiIiK2kqHb/2lSD2wtQ18HiIiIiIitZOj2
f5rkwNYy9HWAiIiIiNhKhm7/p8n6ga1l6OsAEREREbGVDN3+R5ShrwNERERE
xFYydPs/TfqFtpahrwNERERExFYydPs/TXJgaxn6OkBEREREbCVDt//TJAe2
lqGvA0RERETEVjJ0+z9N1g9sLUNfB4iIiIiIrWTo9n+azBfaWoa+DhARERER
W8nQ7f80qQe2lqGvA0RERETEVjJ0+z9Nxge2lqtWrQ1+LSAiIiIitoJqe4du
/yPK1avXB78eEBERERFbQbW9Q7f/02R8YGu5fn1v8OsBEREREbEVVNs7dPs/
zd7exj02HBypCSIiIiIiDq6NXAvE1rWnZ13wawMRERERsRlVWzt0e7+czBPT
ulIXRERERESsrUOlDsj4wNZWfZZ1rjKPKCIiIiJidaotrTZ1I48HdKUeiIiI
iIiIiIiIiIiIiNi8Ug9ERERERERERERERERERERERERERGwO6ReKiIiIiIiI
iIiIiIiI2Lxu2hT+GBAREREREbF+9vZuDH4MiIiIiIiIWD+3bHkp+DEgIiIi
IiJi/dywoTf4MSAiIiIiIiIiIiIiIiLi4Mj4QERERERExNaS9QMRERERERFb
S+qBiIiIiIiIrSX1QERERERExNaSHIiIiIiIiNhasn4gIiIiIiIiIiIiIiIi
YvNKv1BERERERMTWkhyIiIiIiIjYWpIDERERERERW0vWD0RERERERGwtmS8U
ERERERGxtaQeiIkPPTTGHP6NI8z73vdR8+/v/JB598EfRURERKyban+oHaL2
iNolodtGiM0s4wNRn7Mf+eingn/2IyIiItqqfUIeRESsvccee2Lwz3hERETE
LNVeCd1mQmw2GR/YuqrPRejPdURERMQ8qt0Suu2E2Ez29vYGPwasv9QBERER
cahJXRARsXrVzz705zgiIiJiNTJeELE2Mk/M/2fvXoOnKO+8/6cqz3zog5RV
VvkgVamyUmVZrrdltIyu3miMq3FVVKLGQ/B8DBpBPKCoqIgKMQRQEcQTigdA
BAUVPCAqaGKM5rRJzB7u3Xv3n917T4wUPui/n85ew3f6193TM7+e+c5Fvx+8
Splfd8813T1Xf79znZqHOWEAAECsFMd4x1LA7oDxgc1CWyAAAIgdbYLA+NEe
2CzMDQMAAGLHnDEA0ButzepddwMAAIyH4hnvmAqIHe2BzXLAX3zTve4GAAAY
D8Uz3jEVAMTEu94GAACog3dMBQAx8a6zAQAA6uAdUwGxo19os3jX2QAAAHXw
jqkAICbedTYAAEAdvGMqIHY7dviXAcPjXWcDAADUwTumAmLXan3mXgYMj3ed
DQAAUAfvmAqI3c6dn7uXAcPjXWcDAADUwTumAmK3fXvLvQwYHu86GwAAoA7e
MRUAxMS7zgYAAKiDd0wFxI7xgc3iXWcDAADUwTumAmLH+oHN4l1nAwAA1ME7
pgJiR3tgs3jX2QAAAHXwjqmA2NEe2CzedXZwyy1zkltvuy/XpZdNTSYcfVLh
vkf97xML980686yLC49z+BF/ldxxx4+SFc+sTV5/fWvyzrsfJevWvZEsfWRF
Mvn8q0rLf8aZF6bHv/Gmu7p+Vr1PKM9fHnlCx99+MOXGSp/jlpn3JAd/Y8KY
Yx/2zW8n1/zw5mTRoseSV17Zkry95cNk+fIX0n1OOvnsMdt/69iJlc+dfe9u
n7HO4+pz/vDaW5Innlz1xWd6O3nvvV+kn+3JJ1cn06bdmnse+qFz/+f32JK8
+8W1f/75l5M777w/Oefcyyvdezr3obwzZ97b8+cP93jY9/rr7+ha5gsunNLe
X2UJr98+a17ym9/8fbJy5YaO99CxL7hgSrus3Yzn3Ks8Dz74RFoO3Y+2HDNu
vjv57hkXFO6v13U/aNu/PumsruW8/PLr0m2vuHJ61+vTD5VHx9Dnn379rNxt
vnf2JT1f8ylX39RzWcd7TcJ7nHDCd7t+7unTb0+3PfucSztenzTp/EqfT/eb
LU+o3y6+5IeFxzvk0GO6XovwHVE9U6Vc2l71or7L3e6D8TxPyupvvX+Vc47x
8Y6pgNiRBzaLd50tyoUUK3azdevHyXdOPGPM/pdfcV2l/WXZo8/mlmH23T9J
fv3rvyvdd/PmnyXfPu603P2XLl3R3q7b51VOGba98KJrOv72zjs/r/xZjvnW
KR37Ks/TOSrbR3mu3UdxY9X3s2zOkaeu4+pc/fznf1O6j/5+8cU/7Hrei5x8
yjnJtm2/LH2PNWtey41P7b0XYmXdI/189quuuiGNcbdt+6T9WjZetpQ3/vKX
f0y3070bYsyq36cNGzaXxsTjPfdVvpcqt747eZ8tbHPX7Pldr+HGTe+l2775
5vtdr08/9FuULXdervX44yt7vubvvfdxT2Wt85qorun2G0q4v5Rj2tcffOiJ
yp/R5j6hflu/fnPh8bLvlaVnQNhWeWqv5dI999TTa8bkkL3ct0H2eVKl/v74
40+Ta665ue97EeW8Yyogdqwf2CzedbZk49aPfvH7tmxu9tFHv0tOO31y6XP7
V7/620KLHnhszPurva/zOf2H5IUXXktWrFj7RVz5wZgYK69dbRB5YNnnUHxm
2xKVy4SYLXyGl15+M3n++fUdeYX8eP6S9n5qP8k7ftn51PuoTbPsM9ZxXP1+
no2hFD8qhlu//q0x94Zyz17vPbUffPLJpx3HURuL2gKzObXaCLOxY17srlxW
n6WXzy7hXtB/w3a6dkWxuq5t2G7ejxZ3/T4p/syeT93fedeyjnOf/V6Gctj7
tCj2H7U8UPeDLa9txwseWry89JrnXXf1O6ha1kFck4eXPF36uavmgWV1lf29
qkoeKPpNpKhMveSBRdch1JHZ+jfvHPXyPLH1t32O5ZXhphmz+74fUcw7pgKA
mHjX2WLj1nvuWTjm7+oXpvaYsI36ahY9t3uN9dSfzD6b9VzPtvso77S5lGLn
7HHqzgOzcVI38+cvbR/zqafWjPkM199wRzumU1zSrR2gKD4fr6rHVR5g8xZd
82z7p7ax94U+X3abMjoH6jdrr+tfHT+pY5uJE89N87+wjX4b6PfeC7mEfsvo
VrZnn12Xm+MFNldUv0B7Pcu+T7ovzvv+FcnmzT9tb5Ntj6vr3JedG+We6vdq
27amTLmp4/ijkgeqrNkc68UXN1XaV7/PtHOWgv6kVco6iGsSqG9xUZmq5IG9
9MuumgfqO5LtMx9UzQNtudTurf7QP7p/cUddrs+X7eMxnnumrP7W70PqH23z
y7r6tGMX75gKiB39QpvFu86Wbnmg6Hm55X9i9uzzczzPbdsfULF30XbZ9rZs
/OGdB6p/mfZT21ZRbLFg4bJKsZ9454GPPfZ8e1vlYUX9F5XXbDG5XC/lVW68
q23g08I+v3qPn/701+l2ygds39VB5YH6ToS4X+9p81Nd33C9JTt2tcr3Sduo
HNpG7Z6DOPdVzo1i87DNEtM2NUp54IwZs9vHCPeBdOsbLXXlgYO4JvYzFR3P
Kw8sy7X7yQMt5cb2OqrfRF33TJX62/YfLhuvjv54x1RA7MgDm8W7zpYqcavY
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
5XrZ1+aBgdaxD3/X/4fXlS8VHceuhdDt3OheCv2CRXlc3nY6Tjaft+vxqY1S
fSzt30Mum80D1Yao9RPDvurPaf+uOVjz8sAwhlTs2NLwOUJfYbn33nvd7wUA
uwfvmAqI3Y4d/mXA8HjX2TGybVxlMX6ZqnlgVq/zxIQxcyH+z/7drtOWN76r
DsplNY5ylNYalDPPPLPvHDibB2bHFuozh7+VrQ/ZSx5o++9qDGTV9kv7OdX+
mLdfUR6osYBh37y+pnl5oHLQ8JraGfPGAWbXpqSfJ4A6eMdUQOxarc/cy4Dh
8a6zY2T7ASq/6ecYw8oDFV+/+eabubme4vPQVrd+/Xr38zpsJ510UqV+s3ls
Hqj+nXnbhL+r32XRcXrJA5WHhW17GWdp2+a+//3v526Tlweqv2Zo91b/zbx8
Li8PtH1XbT/lrCeffLK9ndodve8HAPHzjqmA2O3c+bl7GTA83nV2bOza6sqh
+m3HGFYeKOorGt7LrgNo11Ro4rrctk+srmUv+9o8sKids1v/TeklD7T9go88
8sjKZbVzwxSNxcvLA9WnN+z3yCOP5O6XlwfaPrEaD1hUrjlz5rS3mzhxovv9
ACB+3jEVELvt21vuZcDweNfZsbH9/ew6db0aZh6oPCWsBy96b70e5hNV371R
67M5DLb/YpU8zKqyfmDdeaDWeAjbFq0LkWV/t9A4v6Ltwr1g88Cw5oZoHZS8
/eyafiEPtL8vXHPNNYXvqWOG7fRe3vcDgPh5x1QAEBPvOjtGdh7E7HwbVY03
D+x1XhObb2jOEPUPDf/WnJHe59TLyy+/3D4P559/fuX9PPJAtcn1mjcpvw/7
qF0wbxutQxG2sXmgHY+otUvy9lWf12weqPVEwmvZdR+sxYsXt7frZQ1NACji
HVMBsWN8YLN419kx0nwrIX6166v3ot88MMy5XxTTF1E7pp330VLfPu9z6kVr
fYTzoDaxqvt55IG2rFqfompZw5oQeX1Y9Z6axzX8XfPLhr9pftnw+sMPPzzm
uNk1BUMeqGOG11577bXcMmXbqMvWlAeAqrxjKiB2rB/YLN51doyUt9lxZf2M
beo3D1y+fHl7v17n1rDr0AfPPffcQM+V4n2tNaC8Zfr06SM3L6Tac21+XNT/
McsjD7T5lVRdi1Fzi4Z97LymGito5zwS5Wbh77q/wuuaL0ZzfIa/6Z7P3kt2
3Qjbzqo5a7NlsjmtHbMKAOPhHVMBsaM9sFm86+xYaZ0BGwOrb+XZZ5+dzq2h
Pntz585N2+yK1mKweaByirPOOis1adKk0ve18bPabnR8jXNTvzrlMHqtKNfa
Z599OtqGRGsKDPI8ZduMzjnnHPdrl2Xn0ZF58+al50p/07nUOVafzHPPPbe9
zyDyQF3bcB+EMZxZ1157bUdZdeyLLroo3f7kk09Oc0O1a+pYYR/16czmj8rZ
7Pwxln0/u16h2vY0n5Bda8SyOaZtSxStcX/IIYek4wnVV9T+rd85dwEgyzum
AmJHe2CzeNfZMbNjo4qceuqpufvaPDCrrI+c2q/CnB5FytrcbAyu9SQG3T6n
/oS2bFXb24bNrskQaB6govauQeSBVlm/z6J9LLvWn9pki3I+UTutze1su6Sd
KybrrbfeSqZMmdL+d3ZOmLvvvrtrOcvmEwWAXnnHVEDsyAObxbvOjplyqNtu
u61jnFOguPuJJ55I20Dy9rVrFlhV5u5Uf76nn346d99u69pfccUVue03g5LN
IyZMmOB+3Yqcd955hTm2zq3a3cK2IW8qmzM25F7KGYu2ybZFBlojoqysKott
q7PlVF/fbLvrfvvtl6xdu7ZjW/Xd1Jwu+rtttz3qqKM69p08efKYdmS1h+s3
Cdvul7f2iK7/G2+8MaacalssaisHgH55x1RA7Fg/sFm86+zdgfJBjaU64YQT
0n6hoU/hMN73iCOOSGPxww47rGvbnv6ufqOKw5W7DmutCJVR65cfdNBB7teq
Cq3Np5xQuZH6+lZdo8GD8jut23788ccn++67b9ft9Vl0v/R6LXTv6Lwod7Nz
5No8tmwOU30ndI/q94+iNQwBYLy8YyoAiIl3nY3hset233DDDe7lwWhTvleW
26n/svqG5vUnBQAP3jEVEDv6hTaLd52NwVH7kNpx1AZkx3+pT14T141HbzRf
je4X9ZW95JJL0vlcdN+obU/5YWhbrtKPFQCGwTumAmJHHtgs3nU2BkP9GfPG
nWmdC+ZnRBUhD+xG+aBdUwIAvHjHVEDsyAObxbvOxmDk5YGag1JjvLzLhjho
HJ/We9i0aVPh3DlaL2VY42EBoBvvmAqIHesHNot3nY3BUAx/+umnp2vUa83v
XtecByyN/dMcMZo/R/eV5nuhbzGAUeMdUwGxY77QZvGuswEAAOrgHVMBsaM9
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
YHfAfKHNQlsgAACIHW2CwPjRHtgszA0DAABix5wxwPgxPrBZtDard90NAAAw
HopnvGMqAIjJAX/xTfe6GwAAYDwUz3jHVEDsGB/YLN71NgAAQB28Yyogdq1W
y70MGB7vOhsAAKAO3jEVAMTEu84GAACog3dMBcSOeWKaxbvOBgAAqIN3TAXE
jvGBzeJdZwMAANTBO6YCYkd7YLN419kAAAB18I6pACAm3nU2AABAHbxjKiB2
tAc2i3edDQAAUAfvmAoAYuJdZwMAANTBO6YCgJh419kAAAB18I6pgNjRL7RZ
vOtsAACAOnjHVAAQE+86GwAAoA7eMRUQux07/MuA4fGus4NbbpmT3Hrbfbku
vWxqMuHokwr3Pep/n1i4b9aZZ12cewy9fscdP0pWrFibvPPOz5P16zcn83/y
SHLVVTckB39jQu4+P5hyY7rt22//bMz7aL+yMmed9/0rkiVLnk7WrXsjeefd
j5LX39iWPPvsuuSu2fOTvzzyhErn7oILpnR9n3PPuzzdduq0Wwu30fmeO++h
5IUXXkve/aIsq1a9ksy5Z2Ey+fyr+rp+1jU/vLnyOdH5rXLMadfdVtu9VPd1
ue2L99R/e/kuzJx5b7rfzT3ul72fHzblfunlN5N5P1qcXHzJD5NDDj2m63U8
6eSz26997+xLKn+/gilX35Tuq/+G18reV75z4hntbSdNOn/kvme3z5qX/OY3
f5+sXLmhowy6XvruHfbNbxfue801N6fbXnjRNV3LOHHiuem2edc/7/r0Q9d0
8eLlySuvbMn93N86dmLP1/yWmff0VVbvuq+X58e3jzutvZ/uUb1204zZQy/X
9Otnpcc+5lundD1+1XpU188+68Lny3P9DXckp50+ufDZ6Mk7pgJi12p95l4G
DI93nS161iu+6mbr1o/TWDG7/+VXXFdpf1n26LNj9l+06LHSfRSX5D1vFZt2
e79t2z5JTj3tvMLPruO++eYHpcf49a//Lrn33kVdz92vfvW3uefHUp6rbX/+
878Z8zfFsYrFysry1FNrxjz7q14/+eCDX1e+L6qcX/n4409ru5cGcV3knHMv
r/SZlWvb/Q4/4q96+i7pGq5f/1Zpud977xe5n92W+Z4v8v7w+uOPr6x8fXe9
x8d/vt+eWdt+beHCR0vLbs+34txR/Z6V2bBhc24+qPLp72vXbup6De//8ZL2
8eyxiq5PPzZv/mn7WHff/ZMxf5/2RU7S6zUX5S5VyzoqdV8vzw/lP2G/Bx96
ov26rROHXS79Zjl5cvFvdFXrUbHPOfv5yq7PogceG9e9WDfvmAqI3c6dn7uX
AcPjXWdnn5vy0S9+36bnTMffPvpd+jtk2fNSz94i2WdWeAYHemY+99zL6e/k
v/zlHzveN/vbtH2+hvJ+/PEfxjwr9Xq2zKL4QM9+u63iM5VJbXHaz/5N8Xi3
c/fmm++X/kZbFHNoH+VG9vm+cdN76e/y2Vht48Z3S8tQdv43b/5Z5fvCnt+y
YyrGruteGtR1UT5U5TOrrcnu10seqJwhG/OpDU33s+4L+/k/+eTTtG2wqMw2
dn9o8fIx5zx7j2f//vrrW9vHDN8Jvf9fn3RWbtnVphaO9corb4/892xXOT4d
Uw59X7LXbZTywJNPOaejvPpdILvNFVdOz/2ulV1z1Zfhc3cr6yjVfb08P0I7
t1TJAwdRruz9Fsyd++C46lFdP/uMs59Pfw/3vH0uBk8+ubrv+7Fu3jEVELvt
21vuZcDweNfZVWIGxY5r1rzW3kZtVkXPy7PPubTy+yrGCvt9+MUzONtnS79t
qz9d2Ob22+fmPl/1e6x9Xc98ldnG9Mqxsu+/adPW9t8/+OBXyXfPuKDj7+pH
t2DBso7nrfrBFZ27YP78pT3HHBdcOKW9v2L4vzp+UsffzzjzwnYsK7btpc52
iirnd5D30iCvS7c+burfmN2nlzzw0Uef68jzsn3SdCz72X/6018XlrnbdbS5
hG27yzPj5rsLc7zwviGfUq6YbT8Zte9Z9txof/VttG1sS5eu6NhmlPLABQuX
jbnPsuekSNW4v1tZR6nu6/f5UTUPrLtcei+dL41jeO21dzveJ6/ffT/1aNnn
E92XN9x4Z8fvIHpG9HtP1sk7pgKAmHjX2VVihvDs27Llw/Zvk/a51O9zXOMm
wn533nl/YdnCb7ChjaOX56vi3vAedhzTtVNntl/X8cv6tKkv5q6YqTh2tzT+
J+9YRTGHxueEfe3YLEvtR2GbH89f0tP168cg8sBu99Igr0te/ztLv+f3mwee
cMJ3O/abMuWmwm1XrdqVN6ndp5/r2EseKGpDDttnx0HZ86gcqJ/7YJjfs6Jz
o23UxpyXj45SHvjh/7TD/exnv2kfT2NJq+xbRx44anXfMPLAQZVL72t/q1R7
XXYc7iDywMD2H57dpX4bFu+YCogd4wObxbvOzj43y+Ib/aYatrP9v/p9jmss
f9hPsUnRdppz4+KLfzgmXqnyfFU/ovAe9vfs1S+82n59WsmcLeFZr75FYXv7
27k9d7a/juLQvHk5imKO559/ub1v2dwDOg9it4ktDyy7lwZxXXbFsb8qPZ6N
y3vNAzWnRthH/TjLttW8HWFbtQ/2cx17zQPt9spDQn6jOTLC6xpTmBdvjtr3
rOzcLH1kRXu7MFZORiUPtO3+06ffnqx5cWP6/+pnW2XOjzrywFGr+waZBw6j
XDqmxrCHbW3f1arfn14+X/a9wza6rv3ck3XzjqmA2LF+YLN419nZ52ZZfKN5
JsJ2iivH+xxXTBH207yYmiOvl3JXeb4qZwrvceNNd6Wv6Zkaxmrp9/Aq76W5
3MJx7rvvgdxzp99j7bwceWNqimIOm0esXv1qT/PAxZgH5t1Lg7ouGqMX/j87
Ji9Qu1zYJrRV9pIH6hzlfTeK6F7X3Ie27WyQeWD2nIf2p7fNZy2aW3HUvmdl
58b2ZbT9W0clD3z66RfT/XVedGz1IwzHtG3DRcabB45i3TfIPHBY5dI8yGFb
Ha/X708vn89S/RS2ef759X3dk3XzjqmA2NEe2CzedXb2uVkU3+h3R41nyouP
7PNSc3grxi1ij6lnm22DUXyieVHUnlBlPu4qz1cb04X2RDsOTOM7qpwjzTcZ
9rFzntpzp1xO50X9p4piu6KYQ3PV23lE9He1K2n+yrL58LNl0Bi1svPfS345
qDyw6F4a1HVRHBvmNVH7S95xQt8u9evSmhG95oHvv//LrjFbHecu6CcPVLm2
bdtVTtufTflJLN+zsnPz6qtb0m3UDmRfH4U8UMcK3/EQs+u7EPq9a32YbscY
bx44inXfIPPAYZVLz6uwrcZe5n1/9PtSWd2cbauskgfeedeP29uUjYEcJu+Y
Cogd7YHN4l1nZ5+bjzzyTBorBBr3pLzMthtk517sZd7v7FpWOn5efzxRPzX9
/qxt8srdLT7V3BEh7rJxoXKu8B7d+vAF9ndXzadXFHPoNbv2gGILOz9J2boR
Gi+ZnVPTxmzKsfPykl7WjehlTTw7z53mcyli1/Qaz700qOuiteM0T234d/b3
CDu2T2tW2jE3VfPAcN3Url3H93AQeaBceunUMfeEcuSyOXRG7XtWdG7U9hO2
UZu6/dso5IG6TmF/23fWtld1m8tovHngKNZ99vmhOr+onsmOXa2aB9ZRrir5
aZhj9cPMcaquG6F5hYs+n+ZjCvWock7NCaM6zT4viuYCHjbvmAqIHXlgs3jX
2dnnZjdaGy0bq/SSB+b1mdM4HsUqdj7MrLyYxT5f7Rq7P7p/cXvcTaD+YmE/
2x913ryHKp0jxRlhH7WjlMUc2We4jZ3K8kBRnKY+e3nz8oue+8pr+r1+vayp
XjV+0fjNOu6lQV0XnS+b69k5dsSuX6mctp88MGxftY2l2/dwUHmgqC3KXofQ
j7PKfTAK3zNbDs0hrOtnx7BJtv/vKOSBtq3S5i22T2F2Lfii+6zfPHAU676q
zw/73tn36ZYHjrdcVfJArf8Rrm/R96eMxogXfb5uNAdtr/fjoHjHVEDsWD+w
Wbzr7Oxzs4zaSvL2t8/LOV/EHIo1inQri+YMUSykZ2J2rabsOthVn6/ZHFJr
MoS/qR9qlXOksUZhHzv+oyjmUFxix6XNmDG7NObI0v5qZ5kzZ0G6lmL2M9k4
15ZBn6fs/OfNk1AknF9dB7XtFSka49brvTSo6xLy5tAPUuc+xI36b7bPaD95
YDiG5nGv43s4yDxQv7uEfTW/RdX7YFS+Z91k5+kQ7zxQvy+EfdUnWm03gdp2
wt+09kXZccJ2/eaBo1j32eeH5p0tqmeyv2H1mgeOp1zd8kCbK7+T6RMQvj+6
B8vqZluPZj9fEf0uWLaGvQfvmAoAYuJdZ2efm+qbovm1A/t7v9ZLytu/3/Ed
3ShnWfxFbBmOnX1O561vHah9QG0Tmr8ie1zbz0njuqqUResAhH0eeODxrjGH
KFa3/eUUg1XNA7PUl7FoPNeozhPT6700qOsS8sDLL79uzGs25wu5dT954ObN
u+LLbDzXz7kbZB4o4b7UugBV74NR+Z7llUP9BvWbSdEaCCEPVJtctzLofevO
A++9d1HlPLasf99488BRrPsGPT5wGOXS75dh2+yaqHXME6O6KdSjdt2PDz/8
bU+/7Q2Dd0wFxI5+oc3iXWeXxQyimCT8TW0eeXHxoPLAwM7BYcei9ft8FdsH
1c4vX8Tmo3b9tbKYQ2abeUC1hpvGLfWTB4r9Ld+OQRnVPLCfe2kQ18X2ow3z
04R8QGtSZmPifvJAzUMY9lG+2W17fU80/4ad03LU88BR+Z71c4+HPD27XmWe
jZve65pf9FqGsj7vWWXzfYw3DxzUNRlP3TfMPHBQ5bJ5/rwfLa7l+1M2T0zI
XfPez5t3TAXEjjywWbzr7OxzMy++eeyx59t/zxun1+9zXPOqaR/FJWXbaR69
cHzb1jKe+NSuX6dxamXb2jW/srlBt5hDNmzY3LF/Nuaw8wg+8eSq0rKE7TTv
Y9Xr169BzBfa7V4axHWxeaDKFF6/1cwLaq9dP3mgHeOlnLJsjlc7Z4Xtm7c7
5oGDuJ793OO2DilaT1x03cJ2WpO+l3u7iMbP2nNg504K1N4fttG8WUXHqiMP
HKW6T4adB9ZdLrvmjGTnQhtEHqj7xbZr9tsHYRC8YyogduSBzeJdZ2efm3nx
jZ4xYayenj1ql6rjOW77XxXNj6D5PT755NN0Gz1P63i+ij6DnWutaO48PW/D
PHB58VeVmEPzu2ncWFnMEdorVKaivm1TTX5iyxtTHtjtXhrEdbF5oNo/snOy
6t92vpp+8sA/r8mwq52laH0KlduOUSqaY2d3yQMHcT37ucc1167N0/PWKlX/
Oo1PC9vZNRLGUwaNbcu73ll2viL9VpC3TR154KjVfR55YB3l0nuq7d+OY1+5
ckNt359u60Y8ZNppu/1+OEzeMRUQO9YPbBbvOjv73CyKb+xvyKtWdT7r7PNS
zyON5y+iORHCfjaWDce98qrr0zzo3PMuT8f76LfO8Pfs3CLjiU9ljmkbEs0h
oXYdtRdo3L7+rtjAxgnZvKBKzCE2h8uLOexazYrRNCf4hRddk84fqrEhy5Y9
27G//pZXBs0pU3b+8+bQKDKo9QPL7qVBXJfs/Kpqg7PHX778hY6/95MHil1L
XV577Z30ftZ9rrhe58Pez+p/2Ou5y/vujHIeOIjr2U8eqBzPrlei9eTmzn0w
be9S/1yNV7VzjqotMPsbRS/fs5A3/Hkeok//5z1/VVrGSZPOL7wngzrywEFc
k/HUfR55YK/lss81nU+NAczOY6Z7Kq++CN8fHb/snplx890dn6NbHqj3Cr+R
ip4V/Xw/6+YdUwGxY77QZvGus6vEDKL+Uva3YcVOec/LbrK/sd8+a17hmnmd
OeIrY8bDjzc+FbuuXBm1IeTN31A15hCbf2RjDj3nFdtVKUt2vvde5lJUrFL1
3AwqDyy7lwZxXbJ5oF0XW7JtNP3mgaL1GauUW3P+ZNdf2V3zwLqvZ79t3rqW
YTxoGc290a0M3Tz19J/Pq9YJDK9l17/Ls3Xrx+m2yjHy5v8IxxpvHlj3NRlP
3eeVB/ZSrm7y1lPKfn+qUDtlt89n2X7u2XU1vHjHVEDsaA9sFu86WxSXh982
lZcVbTfri7+FZ86jjz7Xfv2CC6ZUfs49+OATY46r3581VjAvH9Q4OP1un1ee
ML5w9Quvjuvz63fwvLUZRPOZaD7EonzAnrtua/Np2zBPieK9vG2uv+GO9jpU
Weo7qvalsjJ0s2XLh5XPSz/nd7z30iCui46T/XuIzXROs38Lsbva7vqZi09t
Ki++uCm33LruZflxlXMnds4gzefYaxk//J+2HvVZHMR9MMjr2e3clNH1XLLk
6XRu/2wZ9N3UPLx2Lqp+v2dqv9c+WusmvJa3dmqW6rqwve07EYQ2uqVLV9Ty
PRyFus8+PzTvZtVrGdb3UHurzZMGUa4sfX80x4y+P2XjTe33p5ts//Siz5e9
n/W7RThGXn/nYfOOqYDYMT6wWbzr7FGiZ53mT1T8ozaasrk2BkFjx9Q3S++t
fnwqS7e5BQdFz3fFRCqL+vt4lWMUjNJ16YViulBuj/t5VI3K9dT1CP0gR2me
jSZfE8TPO6YCgJh419kAAAB18I6pgNgxPrBZvOtsAACAOnjHVEDsWq2Wexkw
PN51NgAAQB28YyoAiIl3nQ0AAFAH75gKiB3zxDSLd50NAABQB++YCogd4wOb
xbvOBgAAqIN3TAXEjvbAZvGuswEAAOrgHVMBQEy862wAAIA6eMdUQOxoD2wW
7zobAACgDt4xFQDExLvOBgAAqIN3TAUAMfGuswEAAOrgHVMBsaNfaLN419kA
AAB18I6pACAm3nU2AABAHbxjKiB2O3b4lwHD411nAwAA1ME7pgJi12p95l4G
DI93nQ0AAFAH75gKiN3OnZ+7lwHD411nAwAA1ME7pgJit317y70MGB7vOhsA
AKAO3jEVAMTEu84GAACog3dMBcSO8YHN4l1nAwAA1ME7pgJix/qBzeJdZwMA
ANTBO6YCYkd7YLN419kAAAB18I6pgNjRHtgs3nU2AABAHbxjKiB25IHN8qUv
fQkAACB63jEVEDvWD2wW7zobAACgDt4xFQDExLvOBgAAqIN3TAXEjn6hzeJd
ZwMAANTBO6YCYkce2CzedTYAAEAdvGMqIHbkgc3iXWcDAADUwTumAmLH+oHN
4l1nAwAA1ME7pgJix3yhzeJdZwMAANTBO6YCYkd7YLN419kAAAB18I6pgNgx
PrBZvOtsAACAOnjHVAAQE+86GwAAoA7eMRUQO8YHNot3nQ0AAFAH75gKiF2r
1XIvA4bHu84GAACog3dMBQAx8a6zAQAA6uAdUwGxY56YZvGuswEAAOrgHVMB
sWN8YLN419kAAAB18I6pgNjRHtgs3nU2AABAHbxjKgCIiXedDQAAUAfvmAqI
He2BzeJdZwMAANTBO6YCgJh419kAAAB18I6pACAm3nU2AABAHbxjKiB29Att
Fu86GwAAoA7eMRUAxMS7zgYAAKiDd0wFxG7HDv8yYHi862wAAIA6eMdUQOxa
rc/cy4Dh8a6zAQAA6uAdUwGx27nzc/cyYHi862wAAIA6eMdUQOy2b2+5lwHD
411nAwAA1ME7pgKAmHjX2QAAAHXwjqmA2DE+sFm862wAAIA6eMdUQOxYP7BZ
vOtsAACAOnjHVEDsaA9sFu86GwAAoA7eMRUQO9oDm8W7zgYAAKiDd0wFxI48
sFm862wAAIA6eMdUQOxYP7BZvOtsAACAOnjHVAAQE+86GwAAoA7eMRUQO/qF
Not3nQ0AAFAH75gKiB15YLN419kAAAB18I6pgNiRBzaLd52dZ5999kkOOeSQ
5Nhjj032339/9/JUseeeeyZHHnlkcvjhhyd777136bZf+cpXkoMOOij9fEcc
cUSy3377JXvssUdP76d9+jk/em+VUWXV/3uft1hdeeWVyQ9+8IMxDj74YPey
AUBTecdUQOxYP7BZvOvsQDnNnDlzkrfeeit5//33O2zdujVZsmRJmmtl97v7
7ruTJ554orKvfe1rpeU4++yz29uecsopXcs9Y8aM5KWXXhpT5i1btiR33XVX
x7bf//73kxdeeGHMtvLuu+8m8+bN65qbXX311em2dt/33nsvue+++0r3U965
YsWKMe+7YcOGNCf0vv4xUZ6fdw3l+uuvdy8fADSVd0wFxI75QpvFu86Wr3/9
64VxtbV+/foxbW3r1q2rtG9w2GGHFZZj3333Td555532tsq5irZVTqpcsey9
lLvafRYvXty1fCtXrix8zwceeKB03+XLl+fud+ihh6a5dNF++tvxxx/vfh/E
Qtde+fNrr72Wsnk5eSAA+PGOqYDY0R7YLN51toQ88I033khmzpyZHHfccelr
aiOcNWtWRw4zefLkjn2ff/75nvLAsn6U2faysjxw7dq17e2UC1xxxRVpvnXg
gQcmZ511VvL444+PaaN78MEHk40bNybTp09PjjrqqDTvVDvdrbfe2vG+559/
/pj3mzhxYvvvmzZtSqZOnZrmbtnzk5fn2lxZuempp56atk0q5wyvL1u2zP0+
iNUBBxxAHggAI8A7pgJix/jAZvGuswPlfEV/u+qqq9px9oIFC3o6rtpu3n77
7XRftfUVbTdlypQxOWNRHqi+ozYnUz5XpSxlYwBvvvnm9jHvv//+MX+/4447
2n/P9ldV39jwt2uuuabjb+oHG/6m3NX+7atf/Wqybdu2dt9S73sgVuSBADAa
vGMqAIiJd51dhfKeshypjG1rUxta3jaK4/P6TRblgXY8oOZcqeMzKg8u6k8q
akssatO0eWn2M6p9MvxNx8geV+2T+pvywV7nqsGu+4c8EAD8ecdUQOwYH9gs
3nV2Fcr9Qpx9xhlnVN7v6KOPbrd3rV69unA7/S0cX305y/JA9VmtMpavV8of
wnHV/pn9+yWXXNL+u+bTsX+z4w5POumkMfuGuXc0jk39bcPrmtsy7LdmzZpa
PofyTl0vUX6k11QmjV1Um6M8+eSTaR/aomMoH9XnXbVqVbp9KJ/aRPPmCrL7
TZs2LR23qTZgXXvtp2uqcuVtr7l5VNbTTz89fU39dNXmHNqQdW+cc845pZ+5
3zxQ8+KqHVjjXlVWfVb1Tc67/gCA7rxjKiB2rVbLvQwYHu86u5uTTz65Yz6T
qmsdaD4ZjTcMfR6LxgXeeOON7eMvWrQoHV9XlgdeeumlpeP4+nHaaad1tEeG
/Mmy/TtF+Yte11jD8JrGAeYd3+a2b775ZvoZdTzNddJPfl1m0qRJ7WOqnVLl
LJqb5oQTTsg9xqOPPlo4vlNlzuuHq/y2aC7WcA9cdNFFHfsoDwt/19yu+nvR
fDqaF7boM/eTB+q9Q1tsHp0D2mcBoDfeMRUAxMS7zi6jthk7f+dll11WeV+1
P4X9lLvlbaN8KLQXKmdUjtktD7T9TNWepjF2F198cTrPyubNm9O2rmuvvbYw
71Rsr7XnNI5P4/rsPDcqi/Yt+kx2jGCWzlNRG5typJATh/ex+y5cuLC2a2bz
QEvta7omdm5NtYNl97c5q86n8iqty/fyyy+X9m/VscLfNWZTeZuuX3ZOVzsv
qs0DLZ0ftcvpODZvtW2pVq95oO4BtXWGfTRuU+NTta/WGwmv677y/g4CQEy8
YyogdswT0yzedXYRtVe9/vrr7Zi4l3GBN9xwQ3u/pUuX5m6jWNyO81O7o17v
lgc+9NBDHW1oof9glvId9UvN7l+2RsY999zT9bPp8+TtW7Yehiinztvv4Ycf
rvW65eWBypHDeh829xb1sw37qv9leF3XXnla+Jud70dsnq282uZUdj/RHLTh
77bNNC8PVD6pc6W/63cBm18WtQn2mgfafs6PPfZYR7vfhAkT2n9Te6H39xAA
YuIdUwGxY3xgs3jX2XkUn9s+ixr/VnXfI444YkwbX952tm3N5pjd8kC71oKd
a1PHUJ5g157Q69n8LHw2tXXl5WUvvvhi4Vr36g+Zt2a9qM2s7LzY8YWW8qKi
9+tHNg/U+Lxs/8b58+e3/37hhRe2X7dz4aivbPbYdj87Zs/2ryzqa/rqq6+2
twlz02bzQLWpZttxtb5G+HtRu2mveWDIZ9XGmM1Zxf7+UXUuWgAAeSAwXrQH
Not3nZ2ldiOb6xS15+VRvvHKK6+0982urxAcc8wxHW0udu6Rbnlgdo1B5Zrq
H2q3sTnm7NmzS8urOF/tl7atS7lmNnfKjidTe6Pt6ynqs5r3PrZ9VLTeof23
jlvU57FXNg9UrpuXx2gcXthG86SE1zV20eaHWofRUttl+HuYF1XnybYhFpVL
24ftQn/LbB6odRWz+9kcr2heoF7yQOWZ9j2zn1Hs/a91Jr2/kwAQC++YCgBi
4l1nW9lxU3nrJ5SxsX7ZmDfbNqT3U1taYPvsKecLr5955pnpvppL0sbxeXNJ
6nOE9r7smn1FlEvYsXOhn2pgxxEqX9L2yl+zealtXxOta2H/HuYa1Rwutn+m
+j/WMS+JzQPVXzNvG9vGFvLAsv6yee699950P7suxlNPPVVYLvXhDdspT9dr
Ng8s+r3BlquOPPDcc8/t6XPWNX8PADSBd0wFxI72wGbxrrMtO09kL+2Aov6f
dr34snlFi+aELKN5SrSvnSdGeVTRe2i+mLBd1fzqpptuys0ntO5CeF19Te18
ojr2c88915HP2WPaOTSzYyxtbiRh7YTxsHlgXvua2PbJMPeP5rixZVF+W0bz
qmT3e/zxxwvLNXHixDE5ZHa+0Lz97LqORWMpe8kDtSZEL59Tbdfe30sAiIV3
TAUAMfGuswO7HoPGyPXaNmXX3yuK6QPlRuobmSesVxeE1zXXifa9/PLLO9rl
it5D4+JCrlj1s6hPYDh2WBdCZs2a1X5dY+Sy+2nOUtuWqH/rdbUX2s+S1/dT
5yr8vco8Nd1UyQPtHJ7f+c532p8hvKb1Dqu+n/oRZ3P1bvdX6O9bJQ+0bcya
byZvm17yQJt71zlPKwCAPBAAeuFdZ4tty1NbXT/zlth5NA855JC+y9JtfGB2
fFfeuuZ2zFrRmn55bM6htsHwul0nPvRPzXr66afb22jOSb1m5whVLpu3n+Y0
DdtoXYfxXstueaAdm6l2W5sjh/XuJW8NxSJ2bOV+++2Xu41dRyT0ue2WB9r7
UtTHNu/YveSBth+rxnfW8f0BAPyZd0wFxI5+oc3iXWeL5oYMsfEjjzzS1zHs
+nJ5uVlV3fJAeeaZZ9rbaB367N9vu+22MX0QpayvqnISO4doyOXEtgdqzcHs
vvq8ds6Y0B6o97P9SfPya61jGLYJYwfHoywPVA5t12GwuW72c6o9teg6ak5Y
O8/m3Llz2/stWrRozPZamyL8XXlduA5leaDeW/ei7b9Z9Jl7nS9U7d1h+7L1
ULTWIWvJA0B13jEVAMTEu84W2w6mdbQ1Bq9IXt4lYc4TtSeOpyxV8kDNsRK2
0ftqO8Xr6qN43XXXtf+mvprZPprKIdWmF9bTE+UpNj/KzkeicXu2DVL9E0OO
pPYlm5dmxwfa42oeyjD/pMp7xRVXdMwVU8ecJDYPVB9W5fgam6c1NdT+F/6W
N/5Tn0ntp2GbZ599Nj1X6s+qNt7zzz8/Wb16dfo3OweN8jl7bI3jU9ud2kPV
H9T29dX4PLuffS9d1xNPPDGdF8iuW6J5hcpyeJsHalyonftT1ye7vcY02n68
Ok9a70Jzqx555JHp9yHMDTuetm0AaBrvmAqI3Y4d/mXA8HjX2WJzpyqybSS2
H2ZR/8eqquSBorF03cqpHCRsnx2rF9rosnPWqF0v5I6WHVNn98++pjzC7mf7
fQZ6T5v/idYzr+Na5q0jn6Vcr6itT22Wdv28Itm5SJVz5Z0PK5t75q0jn6V8
LS+Xs2wemFXUxqq8L3sN8pAHAkB13jEVELtW6zP3MmB4vOtsyc6hWEbthXnH
CO1B6k84nrLYmN7mcXnURzMvltc4t7z1zO28nlk6jtYzKMqP1B6lPqZF+6vd
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
2637DmVjo7/+7kXJJVfPSO64Z4F72bzx/OkNeWAzqT/BldfOTA2z3rj2xjs7
vqMTTjgrufCK69P66z//67/73rZOw7j/1J6pdk6df/3Xu1//f//39vS5GT63
+pl4lkdefvXN3N8782i7dRtedy9zL/S9C99BfR+9y1MnnsMYNPqFwrLP7WDD
xjfdyzUIavu0n/P+hY+4l2mU8PzpDXlgMz321EqX637Caee33/fM86eU/l7X
y7Z1Gsb9p7pp1Ooq9bs87pTzkhMnXZi8tukt17Ko32f2mX7YMaclJ595SXL5
NTcnp5x1afrv7DYPLl3ufh6r0vculFvfR+/y1GnU7m3sfsgDEfzD//mn3N8H
L7h8unvZBuGd9z7o+Jz/8H/+r3uZRgnPn96MWh6oWJ88cPA88kBd228cdXL7
fZ96dk0t29ZdxqbmgaPin//lTx3X/htHnZQseviJ3G1/vGhZ+vdd256cxgTe
n6EK8kCgf+SBCOYtWNoRz9jnwb8OcAyJF42NH6W+O6OG509vyAObySMP/Pd/
/8/Mb1jF8Xov29ZpaHng32bywL+lrgqWPvZMx7l56ZU3SrdXO6bd/oElcbQJ
NjkPbI1AGRG33XnsF3pjx8ppbjf772VPPtfTsbT+whtvv5f2tbz97vnJMyvX
Jb/69e9qv990zCeeXp3cPe+BZOadP0r7sqgfTtG4fL2/5nVU2bRP+Hwaz6HX
Ao2p76Ucv/ntH9r72nbFjz7+dfo76133LSqck02/2b748sZ07jZtp3wib4zL
//enf2u/x+Z33+9aJn1W+5nUD7aXz1Q1D9z6/oft9/jphx+3X9fcZuF1Xafw
uuarV7yhOYgUG+p66RxULZfGM2n8ysLFTyQ33zEvPW9q4/j9H/62cB97HsqO
G7Z5d+tPC7fTtcn7vL3mgb/45DdpzDJrzk9Sjy1fmd4vvVyj3/3+j+n9r/Ex
s+cuSlau2ZD8/T/8Y/v69xKH67o8u+ql5L4fL06/S48/1Vke3dfhc//mb/5Q
eqx//4//TK/x/AceTW6eNTf9r+5/vd7L56vin/7vv6Tl/tGCpWm5lz+zJv0+
lu2jOf3DZ+mWN+jeD9vae0z9CfTajNvn7upvd/SpHfda2bH7uY8//OiX6XH1
nbHfT9Uf4T0/+Nkvet62X3Xef6obN775brrdrXfdn45V//Vvf1+4/ce//G36
GZ5/4eWOz6d/h89X9n0a5D2q89K+BzJ156DqxTx23lKN++s2X42u2dEnfq+9
j8Zblm3f7znUGL5wDsL41PBsVj9WHWvBQ4+ndWpRme33Ut+7UGZ9H6s+J1/f
/G76fqo39P1b8fza9v1bpOj6aY0QxU26d1UH/S5nvh2t16J7fOHix9PtVG91
e7+857DGoL7x1ntp267O1aKHn0yP2+v9Uefn1+dd8tgz6fl/5PFnx/0dwvAw
XyhEMYOtbxTr3nv/4va/NX9KleNorjStwZDXv1QO/9bpad0+3vK+s+1n6fiG
ovdRXqd4NrufYtmifaxzL762p/KcdcHV7X113vQ8s3MF2Gdx6Jel555yxENM
vx3r6um3d7zHxte3dPxdcVBZmVTH2+17nQeuSh6ovNVup/kowt8Uy4TXFQ/q
niq6ZjoH3Z4devYpRiqb70Dvkz0vet8q5y37W3hRP2Hla2EbxUzh9ap5oGLv
sntXf7P5ZR49iydfOq3wGDfdfl/6uavG4cpDiu7Dsy+6Jvn0j3+fxgnhNd3v
ecdRzKacoOga6XX9vY7fg3QONM9J0TnQe+l+yXuvKdfd1t7uuhmzS9/HxtKa
hyLv+1Ek79j93sdy1PFndn1PxcS9btvPua/r/lPcecbkHxQe65D/PTGNc7P7
2TGPRY49aey8z8O4R+19qTjd/q3uerHM9Fvm7KqTjp1UaR/lMz//xa9S//hP
/zyQ77ndT78jKl/Ttco7lupS5Sdj6qxZc3O3z8rLSfW7dNn348Krbkh/X8or
e/b66bvw7ZPPyz2O8it937WffvOxa1NZWmdIvwPkvZ/dTs/htes3FZZ9wne+
17XNt+7Pr9+tsp+L+dbjQnsgRPFK+A6fe/EP09ey/W30G3rZMRS3VIk9RO0f
/ZY1O6dpGcWrth1sGHmgzqX9fTKP5m9T7N2tHDav0nfV5pZqZy0r0zXTZ7W3
VczU63nOPn+yf58z78GObabffHfH3+3zQvORS7fPqxw6ryxqCy3LnSzFTjq/
dn89Z8Pf82JKUd5tj1PUBm5jPPuZq+SBeoYX5VvdPkOg72WV79mk865KTj+n
exyu36W7HUsx5M2zdt2veXmg+gDoPatcI8X9vbZPZ+sa2xes23tl10bwygPH
ex+PQh5Y5/2n37aqzmOZzaf6yQOHdY9WzQPHWy928/wL6zuO89qmt/v+ztV5
Du01X7zs6UrHun/Rso5j9JsHKj+tsp9ym7w2vez102/k3e5b5YDd3k9rFuf1
A7LbVD1XZWt11vn5VZfl5e/kgXFhfCD0257NW9SvJvxN852F17uth5utD6Z+
kcOojUWx74233ftFvdIZt/UzjkP9fPKe9Tr+jxY+kpzx/avGxNk2VlcfFPU3
UV12mXlW67mk14Je53izeWC7Hv0iVlIfCR3v+5dd1/E3+xxUm9JNt92X9mlV
P5xs+W3fC20XXv//2Tvzp8mKKn//WRMz35kIh9DQMTBUAgVBhlVkGQRZWloQ
ZLXZaZBFaHZsQBAEBkRGaFQUBEFWgWYVkLXZhO4h8If69nOZrD513sy8eW9l
Le9bnx+e6LerbuXNmzeX88k8eZLY76n8eM3YJ/bbyLtyOtCuFQPznv73drwI
8GyUFf7C+MP5cuH7mF8KMe59+TFfgR/Sqh+sacrCp2Prlx37WK+OPa+f02S9
o+06u7bdpgNZj/XvlvZF3tD0tq2FZ4itSfozwD4tiyOasjh41XEj539aYna4
3dsW7ontftZ5lw6O2Wq/pOa5YzrwkO+dMHIN9Q97mHztf8jRS9bHaRt9+ivs
Sq9DSJvYh6ydsG7p60OY2wrU0IHMJ1Cmdl2M8rP9CL6jNesxc2Cky/ux1+Hj
Hu7JenXXa7tQs/75c3vQF4wz1Evaha8z9jyDm2/7nyZN2o69hv+H57Nj2TTr
aKkOHLdfbIM1HX8vzo8fZw6mRhmmtD+64rS1FzV9j68bxLDBzyakwTpieM+2
X6U9hs8pS7vWwbqiL1e0Kj7ltD/rEwvMNfi1ktj743noGxhnmX/1/Xz4P3YW
Yzy+mN8/7rQlbSU2TsfKCeinyfeRW+0b329AzJ9gUs8P9MnUA+o7fXDf+iWE
mD7oNNsv2POk6JeG7TwTS4U+x/YJsZh0+Jv8P+fH3zWvdl0H8K/31zDn7m36
mJ+djROT01QleB3IHKE/l4s5Ot93YvewZ8Be5/fz2H3vTz71bGtfD/ju2+v6
7DOxv7c60NuV7AuK/d6PF9QtbxeDH5vOdfO+Vl8B2iRmxzDm2+t22/ew4XfY
DNZu8b9Fo8XGdj8GUodTbaVNB9q1EYid0eXXuvc7+OiR79l/Zb9nDsSXxZYt
o2vBAW+H+7qEjcLz+TzF5rK9DsSvy9d/X69ZR/C6Mrf/K8UJp5w7kga2h7+G
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
pQPtPem/uvTB9syOWerA1JmyllS/Me3nF0LMP/4cZnxDUvjY011jWKNTVrm5
xlh/nsPG32rbVwE+xqH/fjnrQLD7L4JvqJ3PLdnzlcOWXRhbfQw0v2/JUsPe
Qbvb+5XEJrP+Td5ndsPvtvmAMtdt14x9PL5wllI4Z8L6uL0bOe83pwNtufVd
x/Lr221lQR7t9d4OtzHh/D5ID3FL7PqhrZPEpLP3qXFWdQprW0EsfnoJth0y
f5671sb57KsDa9fjWejA2vXP7vkiBgp1LJaObVd9deA06yjMgw5kPzwxSBjn
oDSeh9+DG35XswytJrHn+6aw59rF2mvR/kDjdxw777aUWepA4i205c/2G9Zv
atrPL5YPWg9cTPz5crFYzB5iVZX0azmsPdwWN9FjffUae6blTDx7ZnMsv8td
B9o9RyH/1ic0FT+9lJhthU3APlL7XWq/aC17xz4TazO5dHzc2ptvG42VamMe
YjvYmG4hLmfAxuoj5nf4O7U3PqcD7TmcJbFuU9gxvs1+8me5eDvct6fUOZDk
1Z996OukfUdtcSTHgRgiNh/XXL/0nFL/TnguYrMTdyR8bs8eb4vDSN8Rrm3V
gWbfqadmPZ7VuRG16l9brCuLXY8t0YGp8zimVUdhHnSgn3vgzJuS3zG3Z/uq
SZSh1YFtMd98XYnFSrE60J93F7DnY+VidbcxSx3YNnfu9/rYuZppP78QYr6x
mg6/uJLf2HgaYGOFEL+BPgpCrI0YdlzzY0wbflxjP3TKX8efdxw7x2K560Cw
a1RW07AvZ9w6YsvPakriQ1h7kPf46ONPLfl9LXvH71lJ7ZXnTHe7xuDPeQ9Y
H000Xfjbn0Nn/YrtdSn7J6cD/VpK6vwVYN8ldZtyAHvOk223kDq7irl7H7/X
60BijNsYcoA/nl1jo43b+ZRUnbRnD1PuuThC+IuHZ2NNu2u9tO8Yuyl2FjLg
t2jXMM8x/ZLdX8s1qfM+/Z6omA608ZRzfVrNejwrHVir/vn4qU8+9Ww0Heb6
rI0fs5PxWbNppfabTbOOzoMOBNu+0SJt80/sEbTlzdkykyhDf35g6hwVxnc/
BxWb37TPmTqzyp9Jn9PFaLOQd/wsbWy7WepA8GfIBHy/ATae8rSfXwgxv2Dv
jpzHU+g/SJ+cmtM+67xLR/qYa29YOk9P3HEbp8OPMSX4c1KJ4eB99Fi7sc/H
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
c9Y176EthkDNtGJ9DDHoaAPEYzp+zbnN/WK/pV4Qg3zt+Zc14zQxe4k/mbon
9cv2BYw1qXzZsQOsjUGbDJ/7PTapsmH8IX+0F+bJvd8WsK+ZtkT95Tr6iLb3
Ok677GrjeLATqOPklz4aGwVbpS2fKR3IOFJy34AdB2O+94uG1gMXk133+W7j
9wT0h7lrsZ9zOvAr3/j28PsDWzQl/bX1k8JGs9/TB4V8tcVpp0+1dpbt84MO
ZE8jY0z4fBo60KafgnWHcL236xiv9z3o+9HfoWmxw9ryQB/r91Fa2JdE/NS+
z4h/8NC+3eOgphzZC5q6H+sibffD/mXszsXT4F72fVrsu6Wc+OzK9Tcm4zOy
Hh3zOQ7lF67DZzqXb+zIcG3Ml7BEB2ID5Z6b8c/rd7+XLQW2Q/iNXTfkfaWe
ifNjcvWHdoXdkPq9fRY0ee75eKfYIeO2u/se/PMSP3YLfRf7c/zv/HxSigsv
Wd8pP9iY9vcl8awC6O3Ub2v1F9RFe20qL7QRO2/o4UyEthju1IHPfumb2TTQ
TLk0sHVTsahDfUZPUZ/CZ6l9DOP2NSWUlC9zNOyVz9VZ3ve4baNP/xJgz0W4
Do1GWyV+QKq+oTFT+rVmWr6P4X36NJiTtL9B26TaSrgn8dG9HrTjAaAzU2XN
2GrTs+Vq53f8e/VlQ3uI7RvmuUMsMMoGjZiKqUdshkm0y5L+0to4AfS330Nk
YcyhrFP5TelA/NTC5/QRbe3BjhPUh3Hb13JHOlC0ccj3tvkpsdZgv0PX2XZc
YivZsyDw7eybL9a2bH9rv6O/J26335u/HHQgfXfb75nLTd2fufqSPOCjy7xY
n2cc0YG7H5S1z2wfn9JBrMnkbHg/VrO+59PwOtDH60ulxZy4T2taOpBxvKTs
wpjM/Eas3uToqgNXH3tqUbrA/HEsDWujcQ5CWzpo9b7niwJrHKV5xt6yZ9dM
Sgfafq7rOX9oO+rVbb/a0GDnUGr1FyU6BX1XErcZUraxnUdsI6Un0W0l/QPv
tk0H1uhrSmgrXzRmbq6lpGzbGKd/CVh9wpqp1TIpuGdszaxmWraPScWCszqQ
NSOesaQseC/PurHR70OJzRGwFmmvwf/Jfl+qA7EPcufLAPWSMmx7ltR5N+O0
y5LfeB3IPH3ufDILvhyxPKd0IOuJts3m7DrO7/Hl2KdtrSR0fqDIwRys72/t
98RisW0Km6UtTTsf12Zj57BjOf1DyW+moQOxF7E/7LhB38RnAesnlLLn0dz0
h+uuuG7JniHAZ8/f22rjcF/i87A2seoHawaf+/JuI99Tbn18j6wOtDDOMp/K
94zffg7azyPE6gTwO37/459c2eTbz1nyXN7/w79be21Ii7x5W4Dx1u+PnZYO
xP9pxP7YOk6SR3xXWSv3c+Xb77j38LfMM4f6RAzQcA1/27pmy6lNB14aOTuP
dkb8FGzR2HmesXXB2NoDdQ/b4PKrb2jS8u8hta+4DR+PPbyzo084o7F18O/0
WgatG36PvRfKys4rU9a2HLuuDdl74udQq3+p1V+06RQfSyy8Q/w0WK+k/vj3
jH+lTYM66tv1Xgce2axhUA9WbbVR/buJxaQ+0NTb0GbxMTj/4qubecqUfRnT
gTX6mhLaypc6ar+nLGhLjKHUXf9MffIwTv8SsPrEgk8A9gC+fTFdTZ8xybRi
fQzvirVryu/wo04erqMzzvvypP9hDzDzhfsdfPSStTdiNllfcvwx7TV+boe5
JavzOKvY57lUBw7f19bxhHKhHtNufL217ZJ5b94p79e3Ke/7OG677GrjMI/j
bY8wHjBPiI3i7xfTZykdyPqt/W1uTZEyCtfxPrU3Tog89JO2nXvfEdq6bX8l
tpKN9Ulf3Cdf+K3Z+5boT5iGDgz0iROT68fw4bDX+HOJWU+xc4j8Hdvn4tcP
sOm6PltMBxIb3V/H2Gg1Ctx826+zz8/1dr0m4M+69ONsTAdia8XSIq/2Oj93
OS0daMsmdS7LVdfcNJJG7JrSODE5Hciakx2L+Tu2v+bBhx4dyQ9jqZ+v9zYa
vm9+vKW+2ufnN33amdemMT93dL63A2NnQtg4MWipvm2fOtdm0/SlVn/RplOs
vz/gY+2v4R3acvX1H21v61Nsry1jhq13tCf7vfeRRSfE9nr6GNLgdWCtvqaE
XPnyzPa72JmfjLW2P/dzsCXU6F9i+iTWxugrfP/h7YWaafk+Bv2XOtfKr5uh
EWPXeV3MPIP93p8Fb/e12H0RvLfY3tQuOpD25/2ZaIO+/Djry/e/7Ie21/iY
KjXaZVN3Cm0c+h6bn1i8LOad7DslPT9m5OLEWP/qnG+onWf4/nH95h5XGvIL
FSkuc2sDayO+Regve02JrrJrDt6fswTsN9s/MZdU+tvloAOJfZC61s6LM2bZ
72wMHsoHez2WBjaUjStCv9j12bwOpH9O7Z3H99T2776PtvOcXMdZlKn7Mm9r
78t6derdklYq3gN5Ze7bjtt2zJmWDmTfDj4tkIvbYtfOYpqihg5kHcnmlVgB
qXS8bW59T8G+b+zPVN3w9op9nyV4fwTWAVLX4hdm+43Y/pVaOvA5FyMmtQ+1
D7X6i5xO8TGgc/uMiLVgr7XnAfF3qN82dpPHtmvWNex3do2WfjQWJyPg7Xiv
A2v1NSXkytf2GRDToqHOhvKjnLvWlRr9i9cnOduZOT57LWttk0rL9jH00bnY
LX4dj/Wp2HXoSLseHOv77Txqs1a8tVx5T7n+cFjOhTqQZ0vFrLG+xNw/VXes
3vFztDXaJZTaOHauKLcXaMNv7hspR1/nczrQ2qIp31DvE9oWA25RkA4UMfy8
Fz4Ssb7T7ssp1XT4vqTGxzbwjfHnC3bZ47YcdGDu7Gprf9O32u+I/RO+4+9c
3ry/UJfYYuB1YFsMSXsuG/Uk1CU0qbXN/ZqFh/UHe1/mslPvFn+TXFp+Ldv6
sUw7TkwbNk5HzNethg5kn2f4riS2pfVr8/e0NlpOm/n9xfc/8HCncmF/oq1X
qZigAavzYm2ylg6kPdjn8nuNxqFWf5HTKXb+nnLN2dhw9z1/aHzSoU8dt3Gi
7Vmw2OU2jz6umIe4I/Z621Zq9jUl5MrXzxOk9kNNi1z/4vVJWxvzsYsnlZbt
Y9gTn0qDPmWkn3/wz9l7ev3p5wqIRWR1DfPQdk4xFyuvVAeyxzWVho2zktpn
AXafd+x85RJS7TJQYuN4jdwWI9r6j/p5gpwOpC7Z9fOYj4T1CR1nT9JKQzpQ
ePx6G7orFUuMNQPbxr0fQwz8z62NUZovfLu8j/ndv22PNWyZdx3YZstib4Vr
6fPsd3Zswo+Jeb4UXgd2iWUIXge22Yl+/jvsdXn5ldF9CjHfE4+du7b+Jf7d
Ula5dHj3KTtvVjqQNUnmLNnPgS5lPsbHQJmUDrT1J6fdAnau2O+VsTYadS2X
jh27mQ/uUg/teldsb5PHr2P6tlZLB/r1tJxW60qt/iKnU/YfKde9quUd6Mcp
H/wVWJfAL9D269be9HsUS+YJbH2ybaVmX1NCm9+t34/GujnxbLGTJ7VnqU//
YvVJ7PxgD/tHU+NezbRsH5OzA/xZVan1swC6z16Pz4K/xmvLYR631pdcvKtS
HcjZIak07N7fmE9DgJijsTZVo10GSmwcv4eHssvZJvae3neo7fxAq31jvqF2
jZS9kJNoY8sR7ZEUFvys7DhKX5tbOyf2gG3jJWex2PjOpfsDsdn9PiDi/HV9
vnnXgW1nJtry9nZdaVy/GNaXqwSrA/Gjabve22DBF8XvNeO6trTYDxGut3Ov
/t2WnIthtQ/jZvh8mjqQNQ/uzRpcyTuclA609/Zx7mJgsw6f2601+ZjuuXSs
rd1VB6bqQoq2+lZLB/o5hhqx/wO1+oucTrFrwyXl2gb+ifiDtcVA9PYm9r39
rs2Gh9TaVs2+poQ2HYjPW6q9h9g1+BemfBhLGbd/sfqkpE34/QmTSqu0j8n1
UylK+kJ7bvKw/4rEnrZ0OTcilUZNHdi3XQZKbJySeNEp/Pximw60a4/eN5T9
mjZt5kPGaVcrCcULFQHGLWuT0Y7afCjQfbZtlcRDsOfrMAfadj3joI0FDm3+
QSlWsg7s29dCaj9DCqsDsbvarme+yd4v6E4fZ7tkXsrGLrJzfv7dljyH3XtE
nInw+bR0IOsdufObSuw0qKED7T3a1lLBzvP6ujgtHWjnhjiDuu16zpOxz+nX
wWvpQLC2ZOzcwr5MQwem2kVX2OOUihGZwtqbfp6x7Vx4YP0y1lZq9jUllJzL
gTbFdyNXHry3rvN0gRr9i31/JWfX2jVo/9w10yrtY2z8oJI1SLDzg35fYsDr
ili8LM+86MBx22WgxMaJxW8qxY+9bToQsCnDNdY31J4twfxOn/a0UtF6oAD2
3tvxAhvmnnvbfS59XLwSfdblzE/qJ/HB7T04A6Hvc65kHWjHRfps/G9zEAst
/J3y+01hdWBbnsHH8wh+cn7vANe1pWV9O4iRnXq3JWeTW98se8ZaFx1o96d3
0YHUPT8/T3w/non9QrQl4ggyt2LzOSkdaOsPY2Zb2XH2Q+q5p6UD7Z7YkrNI
6dNseXtdUVMHWj3SJxZTimnoQGsjdtU/Fn/+PO+acxvwe6P/Ya2FvQX2jDtr
bxLnyf6+zZeTOUN7vW0rNfuaEkp0YIDxl7McKJvUGXcx/8QctfoXWxfYm9Z2
X2tv+xjANdMq7WPw/wvX8Zxt98TP2pYZfrOx67xdEutTPfOiA8dtl4ESG+cc
d05hm11CveS987dv7yU60J6LaPsu25Zz50osItofKPAbsfucu445dk6es5xy
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
rb+8a3Da2osGa868cPDfd9zdeb2b/od6w+9Jh7/Zfzzt+pvKW6ibTz393PBz
9nrz3MevObfx8bhrw+8Gb761qTjdPm0F3zXyceMtd4zUAf4f8tj2/mqXE200
3Bt/jZAn/g6fg42bndKBr7/xVvMsjDHUy2eff2midbFGeXom2U/37V+Be4V8
hTlixlhiDFMfeCf4ENGH5GJwU+9Ly+YdUzeI7e2/76IDu75b5l65r40tgD1h
66SNJUDbDZ+XnB2BbxPzucTJYw7+ivU/L3qfsfcA2FHYbaR3zfW3RstLzC8f
fzz7PIjps+s+323WnYCYw7lr1xqNMgkdaH3G2tYC6V/smBf285fqQNt3rzr6
RxMt459ed3PT10JbLFCrA2PrgfiubltH2av13nb/46ln/2Ti6bXBOOF1LnvE
YvFTm3Xnnb7V+BO2pUsc1lic0wD1Avssl8ZHH21u7GG/V9PCem1qfK35bKVa
iN97n20L3+GXPMn6DV11ILaXzaf1tZ7ms2Pj5mLcMO+BjZlLA12FP30qDdY7
n9n4wsTrbw40nq3D2LapsqPuXn71DRNrK7bvTUF5TrOcbJ3LwRlK4TdeB2LP
/8cOe0Z/Rx+AfppEXRynPFNMop8et38F+1vKi34j1fboO5gfSNWj0rJBs4Zr
Y2NyiQ7s+25L6iT+RuF6u25IvlLPxHx0rh0RAwK9WvoesHFS75V3iv7t23eJ
6ZHzVRMC7NoR86Q102bstmuBuXMaqKs2PrL10yzRge+9/8FIP8Van/0e/YnO
fO75l8Y+168rdi6a9Vf/Pf2tzXtuDhz71F7L3OOk02vD2xfMHbaNc1y34Xf3
JdOMxbmJgW/vc4m5edaic5rC5ydm09V8thItxNmTbXFYcvmtSVcdiE+3zaPd
IzitZ7fzWm2kzgUj36X5SNlVNepvG1YH0sfYfibFGeesm0hb6atbJllO4+pA
9iSkNKAtC9ZPatfFaejAcfvpGv0rWK1BP1OSHnOrPp1p6sBx3m3Jb7rqwNXH
nlqcH9Yt294DZy23pcP8wSKcQb3c+eSTf8w8D2J+wd/Atv0+PoE57LoUc2P4
paSutWdcMGbYuaYSHej3ub32+puNXYofT2yODJsJu3PSZezPlbj7t0vjtVAu
dp8mNk9sTx/rINaHE5/P2FxP7fTasPaFH/uJTfrjn1zZxDz354AwjsT2rjLf
69PhnBL2Pa76wZomn/Z7xsZYvokRa6+jrof8kE4sHqY/26Pms7VpIXzNvP5g
zy628omn/rj52+dhknF9uupAfDlt/rqsB9Z4duY7/PsmNjFxcFkLw0fA38PH
SCYNHzsJ7XTXht83/gm8a9tnxmzIWvW3DasD7b04Axs7mT6V5/ffx+aFxm0r
aGfyw7uy1/F/Pgd8GqdZTjxnuLfVc/wdPgf7HFYH2rJg3wC6iev9mUnk249t
49bFPuU57X66Rv8KqTUnNCaahXfCWpb/3q+1TUsHjvtumQ/n/dmY61xv6yT2
TLi+TQdeetX18bI7+6LGp551Xf99bP4q9h5og2hSnou0fN0gBnut8UZMhmmv
e4jlxUGH/7DVPugLNprtCy+67Jrktd72Yhyx35foQPo12y+z9ldyhmCtGKk8
A3YvoC8b29X1v7l9hOTX+sJQHmhV+mDw8648Y84/rnZ6OWL2Bff2cVrBx0+1
857A/KL1U+Lv2B4Tf64IeyDs934tANsvlh9/xiZngUzq2dq00E67j8awxVbx
11z381Hbeb+Dj67WZj1ddaCPT9Rlf2CNZ8cmsfU9tkcI/zTb1/j7+PoQq3u+
btl1jlr1twSvA3kuaz8GvN7y58PUaitQGtdkmuUEfeLEhH4xNofGGGWv82d7
16iLXcqzhEn1ZePWGa8/KJOnNz6/5Dr2uPi82++npQNrvdvSODE5Heh9rvg7
5q/+4EOPjpQde3T83IV/D8x9+HkX2q2dU+E3feujEGK2XObmkNZG/CzGwcbT
bFsLtPNi7GfzfU+JDiSOhB0DvAak30v5+OT8VUuJzSMHsHFj44CHeRvmP1Pp
BFhj3JSIATvJ9FJ4+4KxIRUfgHpg/X+x/+z7vvq6X4yMaYxfqWezfnDoWvu9
XQchP7mzd9ETNv82pkbNZ8tpIR/rNjdvsuaMC0bKKGZ/1aCLDsS/2Noj3l6Z
xrOzZkdcCbBxMHLv+wcnnDnyXeneWrRfuJe1u2rV3xK8DsztBbdzUv7smlpt
pXmXhbplmuUEfXVgyueTdm3HGD+G1KiLXcqzhJp9Wc064/WH9dP1eP9HfBDC
d9PSgbXebQ0d6P1oc/s6mEPJlbN9D6y/pmw24k7l3qeYL7Q/UMTAhrHtGHuH
/d610ieenk2f/jJ1rZ9XjO1LL9GB5yT89fFdsXOL7CPEXvJ+Gzfe8quxnjmn
A/Gt4Hvunfo9fS5zpyVrmKSH7s2t99dOL4e3L9hbkLve+/DaNQxiHIXP+TuX
jo+l987/+d7wHPb9Ersulw5znDYdymISz5bTQqzRWLsqdw98tOw9JuXf3KYD
qWPMexMjz7enm28btTHm6dlPOevC4e/xobTf+fkxbL4uadeov6V4HZiLV3X0
CWcMr2NeKnxes61AqW6ZZjlBHx3YVhetnf9fhx3bOU9tdbFLeZZQqy+rXWes
/mg7vwk7xd4b38fw3bTjxIz7bmvoQOtHYdt1Cusj5NuBfQ/0F6k0iLVg3+f9
Dzzcu06KyaPzA4UH3z/bj7JOVtMfFKwvT24tkP7E6hTvexIo0YHWlrRjc2ou
hHne3PpFV9DWRxz9owZiwTCHTdna/NDXp86ysHZKgDk5bA20bCwuGXswUvmp
nV4Ob1/4GD0e7NWUXWDrAz5EzLem8PZhmBv28xAla7F23wNxzyfxbDktZH20
GY9zzw32Hm1nsfTF1xHyZfH1J0AMQp/WrJ4d3bjxuReb9SY0HXNAdt+Zt8+Y
M/LPQ1tmf0xuzaNm/S3F6sC282Gsf549J7ZmW4FS3TLNcoI+OpDzl3Jp2nOK
9tjviNY8dK2LXcqzhFp9We06Y/sSyrQtLeatY+9yljqwz7utoQNtO8ppt4Cd
u8BHIPUe2vaeWp/uDb9Jx3sTs0frgcKCjWPbL+2+9nlk2Ep2jMj5k1kfLzRT
ap63RAdie9r7lpyBYefroLYeZt6U9QWrN2P+FsShsPnA94mzwXx6jL/WVwdi
a62102vD2xclMd7t+GVjGJbEaUwR1m78XoiS896Yhw7XH2hsi5rPltNC9v5d
4WyWmvU2kIuJniK1f2uaz068XHzNU/HwLTH7LDanNMz7Vnv2u0eekPQHq1F/
S/HnRuSuRceGa60OrNlWoFS3TLOcYBLnyHPGTrg2pQPHrYuT1IF9+7Ladcbq
D7RcW1oHmndp6/20deC477aGDrTtCF/rtrI789xttgHvNvUecv6uYHW9dOB8
o/VAEWD8sG23iSng9rbXwM7tc7+UvykxwG0/Gc4KjFGiA4mvZtMrWd8jpov9
TduZYn3BR87ex64RMVdj+3LGlTZ/Tzumer1bO70SvH1R8hsb/9Ha8n1tQwj7
HbAT7ecl82G23hLzbhLPltNCsZhupaTW0cclFu/Pg+3A3MbhR52cXOue1rOz
xxV7q8vvY/YZYFO25Qtb05+hVaP+llJDB9ZsK1CqW6ZZTjBtHVirLk5SB5b8
JtaX1a4zVn/YGMMp7DqsXdOalg6s9W5r6EB7j7b1XSBWXbge/Zp6D9KBKwfp
QAFvvrlpxKbDfrvn3qXnF4zLs07bEc84dS1z6vba4FMZw85JYnPyW7BrjX6M
2/+Q9jiKaCD7m65xuLtg415b/0v8dG0eSsZBO4aB9VernV4JvuxLzpe1PrP2
LCg7FjF2Yr/mOP/iq4d/h/VcYqXa/MRiz3ls/FRip0/i2XJayMaipwy6PHfb
Wc996RovNMc0nh0/PvuusFXwgSZ2L79hvpw4CtihOfvMQt1hHYS5kpgvLPew
sfBr1N9SaujAmm0FSnXLNMsJpq0Da9XFSerAvn1Z7Tpj60LMp9xj48rRd4TP
u+hA9hWHa7vqwFrvtoYOtGVX4svD2Q+p55YOXJno/EDBuTXe9494T5O4F9rL
9mu52DN2ja8v9tx7vw5Wsm/fj2el2pjYiPTNkIon5yEGc7iP3Qvv432VzK0S
b8b+xvrS1E6vBG9fpM7WDvhYH/Y8DXvWY19/R3xgbfol+t769jCeT+LZcloI
22hop7t9G7NiWjqwxrPjU27L/fg15ybXwa2t36YDLbQlztRGc9l72VjLNepv
KTV0YM22AsX7A6dYTjBNHVizLk5SB/bty2rXGas/iAfalpbdd8c6Y/jc6kDv
8+ix42QXHVjz3VbZH2jaET4ZbWVntelXvvHt5HuQDhRiZcB6l425DZOKLYg2
sve5LLMWCLV1IFj/xrZxAHyM0ZL5UWDOL/yG+dKSOJu2v7bnnvkz0dr6X/Dx
Xu35ZbXTK8HbF2371e1Zj0DMyfCd1cv+/XbBzmN//7j8WbfeR9nGuqz5bDkt
xFkJ4TvmM+bh7Ndp6cAaz37TrXcO0/D+Th4bZ6KLDgw0ZwaY9mzXJGrV3xJq
6ECo1VbA65aUb8E0ywmsDsyduVlDB9asi6XlWULNvqxmnbH6gznrXFr4Ntm0
iH8Uvrv7t/eP9CO5dOy5Vl10YM13O6IDt+qqVDo5HejP3Mrlh3l5+t5wvd9P
IB24MpFf6OKCrcLYZPtM+rBJ3c+eJ0Rf02bLsdf8mutvLcL2p2i98Llfi7O+
HuDPo7cwntq+DJu39Fl9zELOae5yvY0dQpwe+x36OLeGR19uY66D9UurnV4J
sfOJU+ukr73+5ogN4fW6PyvYrqfFyhWbFvA7suvP+BOX5IeYtbZ+YT/w2SSe
LaeFOHPd3sP7TlmYp6cdhGePnb1GeuPud52WDqzx7MRsKLHPvN+0t89oL+g6
2kQuDqKdx7I6plb9LaGWDqzVVgCfTZtWyi99muUE+IfE3penhg6sVRe7lGcJ
NfuymnXG+1unzqFgHLPnJDRjlVkf9edTpPQJ65nWd6iLDqz5bm1aOd2a04Gc
d1VSdmC1b6wuSQeuTKQDFxfrawVtWiUFWor+A7AlYtd47ZGKGdgXqzFTcWIC
dh9eyn5tYuaYeTHwZ1czFxqeO+a35M+kJw5XLD/Er7FjDn/72J12L35j020d
65j39GlhL/trd9lr6XlLtdNrI2ZfMEYyFvr72X0i4M+wIla5HWOA+WOvZRl7
rJ3iY7z7Okl+8AO216Ap/Pka3i+p5rPltBDYuV3A58ifEU9scvvOGLvfdXF2
2SdibZzcuXI5pqUDazy715LMtfg6Q3wLH6fS22fWp4Brn3zq2SV59WfOrP7h
tvWQWvW3hFo6sFZbAZ7TXrPPQaubuBr+ummWE9h9UTEbOFBDB9aqi13Ks4Sa
fVnNOhPbd4uPp51Lpp3bMzAhdtagHdfZI+j3kjL/iz+kTaeLDqz5btmHYq/B
zyg2x5HTgfSR3pZhjsWWHX5hdkwA7Jfce5AOXDlIBy4mnK3q+1V/9lcK7DWb
lvXrT83TW59z5g1r+7R10YGxsY5+kryzL8GPAbDq6B9FnmnbWmpsnOBMXT9+
Ya8wNjHWYdfGznBnDjCWZ28Thb6adQf8mOz5r/adxuzU2um14cvcjoHkgzEw
dj90Rmzc8/HoQt7Qs9SFWFr2vPaAPZfE58eO87aeeM1U89natBA2Rswmos5S
n2J1Fy3g0/HvviT2Qoxp6sAaz+7ngEiP37Jv2fpx5uwz7yMN6CbOPENL+DiB
1AfvT16r/rZRSwfWaiuxehNAV3j/wWmVE/j1R6B/ptysDqoVJ6ZGXexanm3U
7qdr1Rnb7v2cKXXBa9IA80I+rVVunZK0OZ+SuHKsA8fOK+kaJ6bWu2XNNVr/
t9ZJe8+cDgT2LPt0QtmlnjkW21k6cGWi8wMXExt/ryv4GYR0vJ9FzK/U+z/0
tTlzdNGBwFyvnyNLYefyLSPxPSM6EYiP6seEFPSxuZgyrBGmxrsY9MMPPPzY
1NLLYe0LxhzvnxsDG+z5F/6aTBO/39K8p/Yz0v/5OeQU2Dq8z0k+W5sWCu3J
rn/kOPn086NpeLsRG7jPe52mDqzx7KxHtP2eGBMnnHLu8P8x+4y0S/LAe/Zr
KTXrbxs1dWCNthKwe6gssRiO0ygnYG4ypnHAnkNRSwfWqotdyzNH7X66Vp2x
+gP/mbbz+Mi7n68OoFd9HKcYa8+/bNszdtSBNd+t160Bu3evTQcC66clZ3Lm
yk46cGWieKGLSdezbVJjInOv9rvYOe/W72MSa4Fg9+LgL1byG/LqfVIsjDU5
X3rbp+b2CRFrkz47pwd5Hzm7KUDZrTnzwqyGZcxiHrbE1692eim8fcFn2Mcx
Hcr3lFfsXHsPaeAHlRrPDlt9UlH8PN6fj/UdYDzn+WN1u/azMV7mbI8Aa2NH
HXd6dH0MWHOO7QkMMJcTfsuccJ/9VGDrdMonvJRpPTt+YFwTs4lYp3/zrU1N
fM/wWer877AnLbp+sLWfY30hVWdq198UF16yfpiejVUTw9qS1N1JtBULMan9
/vSYL9o0yinA+stpay9a4qdh42YyvoTPv3PEcdn08AkM1zJXOam62LU8U0yq
nx63znj9QR/g97VsK6PDl/ifehiT2Q8aG/d4Vp7ZzkvFYgNY/3PmKib1btkr
yXnCfn+G9Z+1cyWxOZwAvro2Zrt/n5RpbA01YPV3an4rYMu2NGa6mA1aDxTj
wNresP+Zk1j2XWFNkzhizP8xP8ccOuNWzjbGz8v2oaUaCT981tTYiwn0jyU2
UwzirzL/fe0NtzYxFPj7mY0v9C6H2ulZYvZFgOdnfRYfMK7ze75KYFxnjOOc
XPRE1zg2AcZm3g82Fb40zHO39ZGTfrYc1FHeEenz3LzDUk2HffH6G+023Lwy
zrMHiG/Iu8Zu9LEpusCeIvoQ3jV1sevva9XfadKnraSeHQ338iuvtb6DaZYT
WoM8leicGtSqi13K0zPpvqxvnUmtQzGeUl5oNj5/u8e+SN4zdYlnI3/z/G55
PvQl73cc2x175fEnn2naEfmi7xwnX2J5o/2BYhyOOXGbjwxzerPOz7Swe4Ry
c+fiU3L2xXJnJT+bEGJxmNe+rIs/ohBCiOlh/UsXqX+2+27sGQ8izrzaF3o2
IYT4lHnty6QDhZgc2h8oxiHEiaCfXiQf40NXnzgcl9r2Ioj5tS/0bEII8Snz
2pdJBwoxObZsqR+zQywG9tyiPQ9YNfP8TJOwbz53TqzYxrzaF3o2IYT4lHnt
y6QDhRBi/mA/Omd2EZ8qdl7ESoa4Wjw35w3OOi/LAfbiEy8PUmdMLldW8rMJ
IRaHee3LDj/q5GG+/FmcQojxUJwYIYQQQgghhFgstD9QCCGEEEIIIRYLrQcK
IYQQQgghhBBCCCGEEEIIsXLReqAQQgghhBBCCCGEEEIIIYQQQgghhBBCCCHE
ykB+oUIIIYQQQgghhBBCCCGEEEKsXD7+ePZ5EEIIIYQQQggxPbZs+d+Z50EI
IYQQQgghxPT45JN/zDwPQgghhBBCCCGmx+bNW2aeByGEEEIIIYQQQgghhBBC
CCHEZND+QCGEEEIIIYRYLHR+oBBCCCGEEEIsFloPFEIIIYQQQojFQuuBQggh
hBBCCLFYSAcKIYQQQgghxGKh8wOFEEIIIYQQQgghhBBCCCGEWLnIL1QIIYQQ
QgghFgvpQCGEEEIIIYRYLKQDhRBCCCGEEGKx0PmBQgghhBBCCLFYKF6osGx6
573BBx98uOTzF158efDyK6/NPH9CCCG2ob5ZCCFEX7QeKH52422DnfY4aPCv
n/va4J/+/asNRx13+vB7/g6frznjgpnnV4iunHnuusG/fHbHhu8fd9rM8yNE
DdQ3CyHmme2233U49j6z8YWZ50csRfsDF5vLrrp+aEdYjjj6R833rA/az/95
ux0GmzdvmXm+hejCsSedNazD+x96zMzzI8S4qG9eOXzlG98e2srXXH/rzPMj
RC3ol0If9ejjT808P0KIbbz51qYl+m+XvQ4eHLjVTmaNkGs++mjz4N8+//Xh
99t9cZeZ51uIrkgHiuXEtTfcOvjOEcc18HfsGvXNK4fPfumbw/e47orrZp4f
IWohHTj/aH/g4nLn3feOaMCHH3kiet2tv7xr8B877Dn48k7fGty14Xczz7cQ
XZEOFMsJ6mhJfVXfvDKQDhQrFenA+WfLFvmRLCqnnX3Rtrnk7XedeX6EmBTS
gWI5UaoDxcpAOlCsVKQDhZhfjjzmlGH7POjwH848P0JMCulAsZyQDlwspAPF
SkU6cP5RnJjF4u1N7w5+8/s/Nuyx3+Ej+wLD5/Da628Nf/Pc8y8NP3/p5Vez
6XPtT6+7uYldBzfecsfIb556+rnoPYD458P7/DV/H9IM1z7/wl9HviPd8B33
s3m79KrrB8eceNbg8qtviKb7/gd/b3ytfvyTKxvtwL+33P7r5vPSMiZWAz62
3OvYk88eXLH+54MHHn5s8PcPP6r6Lknv9jvvGVyw7qfNfS6+/NrBQ39+vNk3
VJrGm29uGtz92/sH51101eD4NecMrvv5bYOnNz6f/c2HH24elu8Df3pkyees
M8PNt/1P805r12HeKXXslLMuHJx8+vnN+3r1b29kf5PSga+/8VZTR3n2q669
afDs1jrSJS8vvvRKc//T1l40WHPmhYP/vuPu1ryk6uemrW2TtI5fc27zPvDz
Yw9vaV7GaXuTaAdd3+epZ/9kcNyP1g4uuuya5tlTMU9o7+E5nvjLxtb0bXnT
DlPXPf7kM00dOOm08xquuuamwWNPPN3rXZb0NZ53331/mNbX/vPAYX3lb9s3
Ex/G3ifVN6fyxhkTV66/sanzxCR5LlLnacv0Cxesu7q57oZf/HLwyqvdzqa4
5977mz6Jd3r6ORc3e867plGDGv2x72t5HvZt+rGnL+PqwFSfTP/Ou6MN0ydw
Xa2631ZGfcYjuPf+PzXx60445dymfw/vq+13xKIMZWD7YJ7j3AuvaPpn+jDK
xP+Wfpa+m/fKdeyZeWdre0zda5Ztq2/fnCofbK2rr/tF885oI5R/l7bx4EOP
Di658mdNOz/ngsubsnvXlJ104Pyj/YGLBX1TLD6o58JL1g9/Y+em6Xdi6dKP
Wl3p4Xfvvf9Bcz5F+Axb16bx3SNPGH7HWmXuOWy8dGIp2O9IN3zH/RiriaFg
8/P5r+w+8htsBcYc4rXF8s/nfN92zgraJFeu9JPjvkPyyphuz/nw8C7QFak0
GHd22fuQ5O/pu20dsNCX2+v4bNUP1iTTWv3D06roB2yKHXc7MHmfz3xh58FN
t94Z/a3XgYyD7KuKpUO53vHr32bzgq1lbbdYXu79wwPR3/r6ib2xw677J99D
m46o0fZqt4MS7nvwz8nnBmKgcN6H/x22ky3ntvtwTki4PhZLhXqVywffpfZO
9+lrUvj92imw+cJvcn2zzxu2a6rOY8MFex1b3j9DgH2IuX4Frr/p9mafQSr/
+x58VDP/Mm79KWHc/pgyYV4m1R5C2ZbMR+QYVwf6PhmtYdt7wM4hjFv3bZ8x
7ngE66+/JVtvaEfon9Tvv/mtQ4fXnnHOuqb/tXGUbB8WYi/Rj6ERrVaxHLr6
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
3/zWoYONz70487IUdXj11U0TixMK09CBIW4ozzLr8uyLdKDoy3IfF1NMeywU
Qsw/0oGfIh24ssa7wDzrQLEyCedFvPfeZHwqp6EDyftyPz9COlD0ZaWOi9KB
QgiPbNZPkQ5cWeNdQDpQTJuwt+7DDzdPJP1p6EDyvtxjxej8QAGvv/FWE09s
7fmXDY770drBNdff2hoLLjUuvv/B3wd3bfj9YM0ZFzT+Jw8/8kTnenbPvfcP
Lr782iYvp59z8eBnN942eOXVbu3s7x9+1MQWu2DdTwfHnnx2k95DW/uCjz7K
9zmlY+EDf3pk8Jvf/7GBZwyfv/nWpuHnPkY3fUb4jt/7z087+6KGm2/7n077
Cjdv3tLspz//4qsHx5501uCiy65p4tvxeSiL4X0r7G16881Ng7t/e//gvIuu
Ghy/5pzBdT+/bfD0xufHTjdVPuxVufm2Xzf3WnfFdcln4D1csf7nTb25/Oob
Bk8+9Wyn+z/19HODn1538+DUs3/SpEE53rXhd8NyTEFc2ZBv0gifP/f8S4NL
r7p+cMyJZzX5if2W9nLrL+8a/PgnVzbvjn9vuf3XzefjlidtOOTr1b+90XxG
W6QdnHXepU27uPueP0R/S3u7/qbbm/ZHWdB+aJdd8xDK9JSzLmz2A/GsIS+l
9M0L9SQ8P20gfI5+oW864ZRzm77ukcf+Ev097T/8nvjBoV/gfYbP773/T2O9
I94zdf2yrfWE93HJlT9r3k+bbTTus6V48KFHmzxQzudccHnTz9t4/TV1IO2K
PpL+g/xyvw2/u691bxrPFJ590zvvZa99/Mlnhte+vWmb/9l9f3yo+Yx3GZ6H
dxyuhZf+uq3/n+R4Rx3i/VMGtBH6sJJ+OlYHOMuM/Jx02nlb+8tzh+N4alzi
bz678ZY7RsY+/h+uZ49erfrbp01RpuE7Wxftu3rv/Q9ay4t8hetfez2+fjPJ
/thCfskHdf7EU3/c9G/0lV3qDuNOsNsov3MvvGJw0613NueD5H6HbRGr423v
6/kX/rrk/n3HPXj66ZcbDbV5cz8dcu+9D2aftVQHksbvt9pLffJA3nmGjRuX
75qB4oUuNrTj/Q89ZqT/txAjm7Ek1jf5cZExfd+Dvh9NB9sBO7AtP/SF7ANI
5Wffg49qNGsuDfLBmGzHGA975lP9R4kOXHPmhSPXHXH0j4bf2fnlL319n5Hf
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
zvk9Eb/4llOnKquylnwq33yT8YGTiX1PrOd7LM5BbW57X7L9X/5zUX1Dse2d
a54JukfZz5YuWzXt3qDnX2gdeqdlYz71/tR+buPl83tMwX3arkdewH4Wehbq
Haf9v/opY+uu4wNDbS6Hveer3WM/8z2v3lvG1qOxb3bZJj5Q75SVm0MUtbvk
zcue/UX4xycWG6Nn6LRz74b5weWUK8cuZ98X6/ywnxX5VsXi2LaP/+z0n4f+
+/PYtSD/E3uHrTaBbeMUzXEdw/eBRXmPrC/T+5/Ycv65pxwB7jPN7VX1/Nb3
7LLWx6coi7DtDnmOWHtD71Bi54kjlQ/UewV3LWlMU2z8n3I52DL5eTBS7Jva
0fb+rms2th69m/N9RxMfqHdIbv+Lzkf7jPL7ervgA5s+79RvaNcTivVw2Ptp
aF9tfeg5XtSeTuUDU52/da6pmA8U1qfEYkPtewWdV7G6GuT9WPEx9njE2lx6
1rjj69/P7PbVbokde70LsNeIH9c7KB9Y9Nzz+8D1DiXVvBExLxjygSk9oBiH
eSPOnCnOgwfjh+8L/HuNj+5LitsUth/Efy76fSQW+zxTG89+pr4u95nf7+Xj
xxS5cQfyiLadXvSMFhpn7fbJf674z0J5LPu/sjwodXxgUeykfW64nDIOxXe5
z9SOK6tzm2ujnzwxZdh3q0224x8fmzPUon5Ou5yN37LoeRhrt2rMjT2+ZTlB
9byMtRft81DrirXH1O62bTfldyvapo2/Unu27vG0PtB/b2LRNW6PU1leHRuz
qXgw93/bj1d0HBwac+quQ9fuTFUWYY91kc9Xzgu7zZ1PPz9jmTZy3MfO3VT7
5veFxK4jhx8TMch5I2yOIV1f9rMu+MCmzzsbo1A2pk3Yflg/bseeA2W+JJUP
THX+ihQ+UO8o7XaOBHKj2JhQ+y57mPdj5TSw5SwaXx1C1+20a7XXjitaXvm1
7fI2//ggfGDZ/d6e9+5ZlHIe+ZAX9H1gag8oxmEeeZg87PNAVMm3HMI+F8va
0WrvxXyLffevcWBq+8fwfaAb++A/w/xYwjrY9fh5SspykvnHt8wHFo1n8ONI
7Gc27qNKW0JjB9zyqXygzhv1Eag9pDgbxYNYr5TCB8bOKfVTVz2HY3ktzq0Q
t2Tx383bstnnoeKKYuvQ+we7DsXrFJ3vtt1Rxe/7WB+oWPDYcsqd53uFonJZ
72XHDU+PBavvW1OWRdg2XtG7amH7xdTP6H8+SB+o9tPb77yfj1fVezn1Eanf
rKgdnWLfbO4MUZbvxt7HY237uqgtrhz+ileWD1Xfn5+7qWs+MNXzrkrsvMZ8
ueX92BV7DthYxxCD9IFNzt8611SRDxQ2ZtMfL+LHhNoY3GHfj/2xe+rHV+4l
vesqG2Ns46ZEWa4avz/WjhsZhA8seu75deje1x05cuIrD1WcA74qvhdcv37L
1N/6PbUHzM+hXtm1D9qXFOtrA/LETB72nb3/rrIOdebVte+d/ftn1byCIVws
md/HqWdS0/0q2l7RPEqOuvNGxJDHstu2n9kxWLpPl5Wp3346h+ZsU06HKjnP
+vWBRcfH94FF7deYD7TviM8NjI/18cfr2HPMz58dW4dy8zc910XdfCT+vBGx
5arkm4xh26b2nW+VYzrIsgg/r37Rdm0c4jB8oPL4/WbWDTPyGcUo8oFN983m
varyLNDYtqIyVUX99Nq2zpcq9/+u+cBUzzu17cuOlXxCrI7qnAOpfWC/52+d
a6rMBxbdf4v2e9j3Y3nk2PmuutR7LJ3PoXjPovMgRuxcG9S8EXXLcuLEqeRj
66wX/NvvnZf9xXd+kqPfU3tAobJrH7QvqdY5bBgfOHloLu5Yu6kOqZ6L/dyH
XRvAf09dFuNXRNH2dP8NxZ1YhuED7fhG5Tor2ycbY9rEn+l5V2WOC/+5Vnc7
w/SBNkeMromysvnvju08FFWfh3pv0c/5Xnd+gqo+sGx+jiLs2JNvffdHU/8P
5dKtQqqyiK76QN236r7/GoQPtMdadVel7EVlqoLy+1Sdc8AxTj7Q7peeW2XH
y/aP++tqywemOH/rXFNlPtB/P2Gf0cr57P6vMXf2e8O+Hwu9T1TcU9F6Vc9+
3rMm16rte1ZMkPt/Gz7Q7p/dN+ejTp78tPaxjGG9oPOBg/CAKvOo54gR9AdO
HvbabRLb4Ej1XLTPMrVblfOrCMVuuN/dPMN+PGFsrrgq+Pdkf64r3e+K3gMO
wwf+6LyLpv5fJabRzs3YxJ8pN6oti8quZ5nymSmHjmJxFBeq8RX9bGeYPtCO
Sy3KReJQX6jdpvLmha6pouehYmjtOnS8is51xSHr+a3fletgUP2Bfh6ksmtQ
OXfVptLvdoyr3Z4fo1mVVGURXfSBfn4cofc6mh9H7/w1f4Ly1vpt1EH4QHus
FbNWVnZ/XG5dH6jr1PcPiulTjIHGS6kulQNKsaE2hm6cfKCtN9+XhFCuLLe8
n1e3DR+Y6vytc02V+UChuWTcMi5HsfLl2jL486oP+35s0TNMx0r57WLzAdpY
TvtsrXKt6l24XZdird1ndXygYjjdsv34QHuuWk/6/vtnxwjqZ9NjGcJ6wUF4
wEGWHWDQKE+TvT+on6PJelI9F22MYdM+BN8XhJ73VbHrcc8mtVPs/0N57B3D
8IF2Lnutp6yPUuOy3fJN/JltSymWKzYftT0nuu4DbZ1qjFlZ2TS/R6w+qj4P
NQ5q+nN+e+l2+6GqD/Tzryq3SJPt2faF32atSqqyiC76QPt+Xe055VgNLafx
P0Xt6BT75o/FLLuPaK6zsrZ9EX7OxKJx3HZ+8yIfqH0o2qb1k13wgfZ5F8v7
b7HvIf0xWG34wFTnb51rqooP1DyobhnF/Ot/dkydn7dVDPt+XITyAfhzuMjb
us/9MbNl16qfX2Dz1q+ve3uf1tyDRev5wbm/mlq2Hx9or1m7Hp0n8lIHD76X
/JhedvmNUx5Qv6dev8p8ti9zdGNCBf2Bk4fvL8o8k+676g9Sbn47Fj3Vc1Hz
XrnP9F6x6X7Ztk5sTiOHchK4ffKfP6FnocbB++MgQnPNiWH4QH/OAx23WCys
3rPbZev6M99z6fkSW9a+O+y6D9S7eLuOopw9ws5L4scf1nke2nap/HzT870K
VX2gP/d7Wd7IGH4uHX8eZB+9X8+vw+vn5fn0UpZFDMoH+rko6qDcEG49oblD
HfJIRe3oFPvmtxVDc5VblNekrG1fhG3nFvUX+/04vg+046OV9ze2nqNevuBS
H+jNKWBJ9byzc/KW5VLSODF73vl9N4P0gTa/5CDO3zrXVBUfqGe0PR7q+7N9
hLF3DsO8H1fBvp+0z1C1WezxLMuFt9ibp0HPTPfZ5dfe9PXzqiTPnM1X248P
tPmO5Alte8XNH5Eib6jPP194VU7q9bo8oaM8XwRMNrZ/R/ea0LztQn7DtqMV
R+Q+S/VclJ+y96ui97t61ik2XqiPy46nth5ExOKF1L9gcwzad25iWjvWvBNV
XhCbd0/HJfRsG4YPFNY/C+VqtB5N5bVjy0PPlipoPfb7aqeHlpOPss/rrvtA
xXXadegdcizOZ+XaDdOW9XN+13keak49u49FuYcUN+TO9yp9Bz5VfaDw55s6
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
2f/9n/4i+3f/4X/kXHTpb1svV0q27Xg6+/f/8c9zvvWdv2+9PAAwnR+f9+up
a/Suex5svTzQLW6Yu2jq/PiXS69rtSyvvvZG9v/857/Mn5Xf+NPvZu++90Hr
x2fYcL0CjAdffPFl62WA9li8ZPmU97P88tdXtV62lGzYtG1q377xX/+q9fIA
wHT0LspdozcvWNJ6eaBbXHzF76bOj5/807+2WpbfzLph2vPyt3MWtn58hg3X
K8B4cPr0mdbLAO3w4Ucfz/B/f/2D87Jze89Y9RG2Xb4qPP38vux///LSnCt/
e0t0OXzgaKG6dPWqOm67PF3h6LET2XkXXJYfF/3U322XKRXDaFdWvV9A9xiG
D6x6fc1btHTac/PuZatbPz7DhusVAGC0sd5IPL/nhdbLVJcl962s5O/wgaOF
6sjVl+q47fJ0hTfffnfaNau/2y5TKobRrqx6v4DuMQwfWPX6kj+UN9E59PML
r8g+OfVp68dn2HC9AowHjA+cXK67ccHUPfZPvvk3rZenCfjA8QQfGAYf2B+0
K0eXLvlA4HoFGBeYP3By+dW/XjN1j/3ZLy5pvTxNwAeOJ/jAMOPcTqVdCUXg
A7sF1yvAeEB/4GRx5ONj2RPbd+V8/8e/mDYu0P1fvH/4o+D3Ff/y8IYt2bxF
d2cXX3ljPj7+vhVrs0Ovv1W43VOnTk+t++ln90z9/8MPP85WrFqfP+Ovvn5e
vlyV/Xhq13P5uv718q/bBsp3avfhzbe+fobHfOCJk59kGzdvz7etMR+Kja17
TWzZtjNbeMd92aVXzc6Ph8ZWvvPu+33X1Suvvj61LzYf3b4XDmRz59+ZXX3D
/GzNw4/nx9D/rsZ+PvTIprw8Wk77X2csWdN69jl+4mRe/jnz7sguv/ambPnK
h7OXD7wWPMZqc7n9tblrVcfu/9t2Pltr+9qOcsVW/a6WyZftfccvo8aquHK4
ODC3ftW/zuFbFi7Nj3XqcdcvvPRqvt0H1zwyrZ2qv12ZdF4Muj774bVDb+bj
qDTO55rfzc9Wrt0w7Tqp06584813srXrN2bXzV6Qn98614tyNta9X/ionDp3
ddx0nau+dd2nOC6DPK90remYX3vjrXm5Fyy+t3e/21q6nti9R+eh1nfZ1XOy
6+csys+/j3vPlKJ17dn30tS6NC9R0bL7X3xlatkj3nrr+EDdEzc9uTM/j1TW
ZQ+syw68eijZ9WXvKzq3BlUPeg677Wsd7v865jr/L7t6br6PWpfu+Vyvzeof
YJKhP3CyuHf52mB+UJ/5t90z7XuaK0nPHOWIjn1HzwU9T0Pb3bv/5anl/q8/
+Xbu9+xzxFHWTnBU2Qf1d7rlfR+o5++PfvYvwe+pfHrulZVB7ULF08a2/6Pz
LsoOfxD201X4X3//T1PrUptL7Q6Xq9yiOlGbXt9R+0QeUfsQKtM/XXh54Tb7
rWeH6vHv/vGC6Dq0H6oT+x3bzitC3r3qMVR7oOp3te92Wb+dYo+J3mXIM/7p
//hesIw6x1LmWvqzvzyn9LioLIOqz35QW/aH//jP0e0r9+KxYycqtSt13P/j
n/2v6LqUw1/XSb/3C1v2n5z/6+h3dP3rPtDP8RnEefXUM7uzb//NTwqvP83D
UPXeo3b893/8y+j9ctY1c6Pvz2x96b1VUbm/+ec/mFpWz6rY/SHmA+VT/vqH
50f3W2X1n21Nri+/33BQ9aDrwF6nepcXW5/27Y6lKyb6em1a/wCTDD5wsmji
A/VetuhZ5t9nH3n8yRnb9X3g//nVrOD3h+UD5YfKvq8+rNj29Y60Shn+5L/+
df5etUld2baY9sX2kYXQcVdfT1mZYnOCpKhnIU9R5I8tV1x389T3RskHLrpz
WaWyFp1DdWjiA1PVZz/onX2Vc+G7f3de9p3vFbcrZ/eOZZV9Eeq76Od+IdQn
puu3ynfVz9P0GKU+r9T3UfU46R5z8uSpwnuP7ik2TjuG4ktC8RzD8oGbtuwo
fN9h0br6ub6q+MAU9WB94F/8f+fmlK1Lvn0Sr9d+6h9gkmH+wMniYM+T6J4t
vvXdH03dF7/55z+c+r+w/QN+v5nutXrm33TrXdkFv7l6xvs+tSn9mA3rAy16
H/q3P/p53tb4xUVXVs67Jp+qctr3ltqu3Qcbr+PnRrXPVrXh1P4KedNQLKHe
x/v7q3eQs29ZnB+P//Stv532udoYTeKvbVvMoWe0YmW0fz8491cz6sX9rjLo
va3ij5T/3O8ftDFGKetZ+H0ZF/R8p2KC1j26Ofv1rOtntK3dOvTu2NWdLa/q
2P1fcY11juWgfKBFXkvxTmpb/Of/PrMfJ/S+uy6r1z2W779ia+269bc7Noph
G0R99sOf/+250TLovFR/QOiY+u1Kvef316PzX33f6gPROeaf48dMHHTd+4XO
Bf861t9qe/7u5tvz693fXlMfnfK8Uuyiv5yuR113apcr/t8v94UXX1vp3iNU
Dt1/FB8beseg3GP+uoblA/1jJK+ieH+NMdN7Oz+WQnHSTa+vMh+Yqh6sD7Tn
repH7wJ0P/SfA/q86biEUb1e+61/AIBJxOaJkQcKLeP7p//y7b8LvrfU88gu
J29nPw/5wBTv5JrkiXGE4rnkRewy/vzA6q+0/XL6PTTGyu9vvPOeB2rvm98W
++9/9Q8zfPJd9zw4Y7/0/PPfy2v8iF3Gz72Sqp71/sB+7uJVLWoj+OP//GVS
5YkZpA9UuyQ05kTjXf32X6prtmoei1T12Q96x+8fh1AZlHe/rF154SXXTTvu
obGQOvds2zLUzqt6v9B1P+1edeWNM5Z58eWD084Jra/J+56U59W3vvP305bR
d/xl1E/sv4vx5wwK+cDQutRnao95yIMMwwdqvJkta2g+P137tizyZE2vrzIf
mKoefB+o4xsaj+i/m5TfmqTrNVX9A0wixIVOLlV8oH3XqPbK62+8HV3fj8+b
Po7Gjlv3faD6/lLsQ1MfqPeEsWXP7bUx3HIaE2M/W7ps1bTn2zPP7Q2uQ+MP
bQyP3p3X3TfbFtOxj+VjsHE8KlPo2S3s+3s9ywdRz3qW289iZVHuCOXAEBrz
738+Cj6wqE2rd/t2WeW/SHG+V22npqrPfpCntGWIxUfrnYUfl+e3K5XLyZ0v
Ns9U0b6oP9z/vOr9wrbP1ScRW27zE09NK3foXC4j1Xkl72g/K2rn6vqzbXA/
xs73gf9y6XXRda1e9/i0ZZVvy34+DB+o4+DOj6Jt6H2cW4diYJpeX0U+MGU9
+D4w5Ccd1nuWjQMft+s1Vf0DTCL4wMmlzAfKy9hnlN835qO+MvtsWHLv1+13
3wc2aS+FaOoD/feuFvusUHvQfvY35/yfqc/0e1HZ/NxzdfJ1CtsW05j82HI2
j4W8Z2w524bUugdRz2o72M+ajpvqug9Un2vRdrUue0xD8XJNqNJOTVmfTam7
/8qZWdSurIryO4XOcUeV+4Xa5rYs+rtomzZ+tMgvxUh1XimG1P1fy5TlorT3
f/9Y+O+gytZl33n596Bh5okpQ3H+dr/8z1P4wJT14PvAovuX/ObU8+J78edF
3fMqRJeu15T1DzCJ4AMnlzIf+PY702P8q8TT2/EDNpbK94F67qTYhyY+sOzZ
rPHmblnFL9rPbD+B3p/qXWcM3wfW7ROybTGNU4ktZ8c1hnKoOZQ/IPTMTVnP
wh+HoXEbyomn9nTVuLmu+0DlIi/btm3T2nar4ubUN1sF/x15lXZqyvpsWlbl
l6xTBvUx1G1XKq7u1dfeyPvk1f+gvhLryZq2K+9ZvmZaWXY+/XzhdW63qbFU
dc/RVOeVjWOo0tdh33cJe0+09x6NIy9b10WX/jZ6XNvygZqzRjH7euenOQQ0
BtA+8wblA1PWg/WBOs+K1mNjvKvUmWWUr9eU9Q8wiTB/4ORS5gN1v7b3erUv
y9ap99lu+XPNs9rPF5pqHwYxj7x9Z+j7wNh8DFXQs6/Ovvm522PL9esDU9az
UF9v7Di5vANqDxa9C+i6D6wyV4BtD9r+XI0rq3rO+O25Ku3UlPXZtKz+ONsq
ZbB+Idau1LgfxWmW5c7tp12pPDBNr3HF5tU9R1OdV0XXZIii88Tee2JjBix+
vHysXgftAzWno/KZVMl5OSgfmLIe/Hkjitaj/Cux+0YZo3y9pqx/gEmEfKGT
S5kPlG+x980q7wx+9otLppa378bHxQc2bR9WaQP5DMsHpqxnh9o2drxJCB3b
mDfuug+sMie9+nZC/mDQPjBlfTYta5My2FyFfrtSY2NjOSxTtys1z3fTa7xJ
TqBU55UdH1alX1Hnty27jVewx7rKXKo2hkLYz4bhA3V+acx3nboalA9MWQ/D
8oGjfL2mrH+ASYT+wMmlzAf642RCOex8bC4SvZdz/x8XH2jbbHpu6dlbxC0L
l079XjeX97B8YMp69pEPu+2u+/M5DGI5x5XL1P9eGz7Qj3Uq8oHK01q2bZvz
XPMMuP8r7qsoztCiOCq7zirt1JT12bSsisWqWwZb53670s9nr3NJ55TipXWN
qT9KOQPlYfttV87x5j0ru8Y1N4vyU+j3JrnoU51XduxyUW4bh/pO7H5q/nD3
mb33aPxx2bq0/7H29TB8oB1n5p4xeg+lXMSqT8VeKi5QeTSLfEAKH5iyHobl
A0f5ek1Z/wCTCOMDJ5cyH6jnkb23+vOThbDxH3ZM27j4QBtvon6DQdbPsHxg
ynouQ7nCNXeU3Z5tyzoG5QN9b2dRDvyqPjA015ePHfui/rYU50SVduow6zOG
38dRVgbNHWaXt+3Ko95nl109Nzq+13qFpu1KzXVit1d1TtOmpDqv5N/d/8vG
kgl/zhD7mb33aM6RsnUp/7Nb3s+tZX2gxl4WrceOLa7jA61/VI4U5T4Krd8+
BwblA1PWw7B84ChfrynrHwBgkqgyb4R9LpflwvNzRSqfuPtsKD7wT78bXS6V
D/y7f7xg6rOi3JwpGJYPTFnPVbFtpdDz2PrAJnMvOvxYT+X8iC2rvoqqPrAs
/4PvP9XWS3FO+O3P2HwQw67PENZblvkbf74R266085r516OPbQ+Wtisj9ws/
FjY0X1tKUp1Xtk9OlM3/of4Zt6wfz2rvPbpfl61LXtEt78eJa95T95lyacbW
4fuHqj7QPyZ61xTbhq6FOj4wdn0V+cCU9TAsHyhG9XpNWf8AkwjjAyeXKj7w
l17fTWy+B70zt/d0tR3se/RB+UCNQ6+y3lQ+0J/Luej9tmLl9DwWirurmyN1
mD4wVT1rjgL174nZ8+6IlsW2WUL1ZvOyNp17wqF8pW5dejcdW071VNUHith8
DIq11ztpu2ysX6Euii22642NJ0tVn/3w059fPK0Min8LLff+4Q9n5Ji17Up7
jRe1K/3YtlC7sur9wvZhqW1eNOeL5uJ01/ntS5bXPk6pziu/H1j5SmLjPvw5
w/1rzB/bJQ8SW5edJ0H4c3hf8JurK/kTf1xmVR/o58eVjw+tX37Mvl8K+YCq
11eRD0xZD8P0gaN6vaasf6H7/rYdT9c+fgCjypkzxXPbwPhSxQfue+HAtHus
7uv+fFrKB/0Tk8NO+O8TB+UD/bEVGnsQ8lupfKDGl/nj3NR/4j/nNb+0fVZq
vETdfRumD0xVz36uRcXY+eVQjnLrzUJxZ3a8mtrkRfOgl2HLrGe/3yeo/OI2
rs1R5gOF8jvamCfFS9l5vFw7MNX5rvPMrvucn12Y52QY1HXbD34OwlAZ3LwU
/nG17Uo/Zk3nsX+9Kc+Fn6M21K6ser/QmD+7nPr+1e9gl1HsmebrruIbikh5
Xul8sMtoPodjnodVG9ceK/3uv6cI5fjw16Xy+e/FVMe+Z7Z9OiLklTWG2N9e
nbhQG6+v8Xn+OGDdP/wckiEfUPX6KvKBKethmD5wlK/XVPVv+3K1fNF4cgCA
UaeKDxShPFzyQrpv/9lfnjPzs57P8u+fg/KBejfpb1/3dz0z7biyVD5Q+LnV
prb5vZ9lPzj3V3n/gf95k9iyYfrAVPWsd67+812eTz5L/QZqv/mfh8ai+O1r
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
dhYu/9prb2UbNmzPli1bn6PfX3vtzcLv6Fjs3v1yj5eyF1446P3/peyBBzbk
PPnks9n7739UbUd7OnXqdJ4HVX7vvvsezh57bEf2+utvT32e2gfKU6tvdc2a
Tfn2dKwUM5BCL730Wn4shMvjqnNJfy9f/ki2atXGfNs6Zr7effeDXll25fWx
evXGbP/+V/PvVpXOgc2bd00dR+VZff75l2qV/9ixE9mOHbt7ZX00r0v9/uGH
R4f2/RR1o2t45869vXVszu69d13vOGzJ9uw5kP9fUr24OlJ9lUnHUMdS5dGx
VR3pWCOEEEKoPSk/4nvvfZi9/PLrQe/36qtvZEeOHOs9s48G+wIVMzosdc0H
fvvb3xvYmL7vfPecqfWOSg7Rro0PtD5Q4wSrSO3lgwffyInlDn355UPZLbfc
E801o890PYWk9dplpSVL1kTXdffda3vliJ/TOtbLlj0c/b48n7xRKh+otrs8
dVGunYce2tJ4/ZLmtvh6nObB3M/Ecvo4D6L4hTvvXBUtk3xxkeS9NF409v3Z
s+/K/WGR1H88Z86S6Do0FrUoB1G/309VNxs37sxjqGPHfO/eA3m9uP+pvmLS
MdOxi5VH1+Xx48N7hiCEEEKTLsVxfvjhx1Hvp3auvKFrB8vr+f2C7neNHxyW
OuUDvzE9H0zqsXw2PlTjBkdBXRsfeNddq6e1VQ8fPtL3Ordv313YzrZorgpf
vg9U/1bZeubNuzdYFh1Xebqy76tNf889D/XtA595Zv80j1aE+pCaym5D/WFF
23H1evPNd5eWSX1QIclbzZ59Z6X9WrHi0eA61H9b9bzYtu255N9PVTc6Z6us
Q/2DZT7w/vvLz22hY693FQghhBAajOT9jhw5nvfvhbyf3u9a7+fke0DbL5gq
DqyqOuMDjQeMkWL+B9cnOCo+sGvzB27Z8vQMzxDKE1NVipn227DyH2rvKg4x
5EXUl27l+0CH+hC1jvXrn8yWLp3ZP7h9+/MzyqO4wdB65J3k+2LzJTb1gf76
lHNVPlbxsDoGvg956qmZPriKQn5Gx1Z9mto3/zjb5d3+K3bU98ghv6Jz1N8v
/a06WLny8WD/mu/v/XhiobIqT5H61jQvpS2j+sdSfj9V3YTOTfVBqr9Z5dH7
iND5FDqu8tz+cjqWOqbq//bLq+3o/oEQQgihNIrN82C9n9q2iqkKyfeA+lvt
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
ihOV99NYQfHkE0/mcwqKJ7Y8kW3evDlb/8gjed/gPffcky1cuDD3lK+88koe
Myy5epQvdH874QsBAAAAAMaPJr4P/9dMsWOmerC/Hzp0KHuk593uvvvufMyf
Gwv4zDPP5B5Q/YGuL1Be8KmndmQ7duzIc4jKK27Zsjnb+uTWbMvmLdnmng/c
tHFTtnnj5uyRRx/J5xe8f/nybPHixdmtty7I7u15Q21Lc03IU77++uvZhx9+
mJ04cSI7efLkDK/oyur6mENSXlq3Lw63Dvt9hz2nnBfVT23bLe/W45a33/WP
Ldtn+2yf7bN9ts/22T7bZ/tsP5u2nF2fld2ePrNl98tv12tl1+m+58tfn18+
95n/XVv+0HpHZfuffnoq91cffPBB9s4772QHDhzIx/ppDnj10ym/y3333Zs9
/PDDuZdTvKfzgHt278me63nA3bufz+cMlG/br/7Arduyrdu2Zdt6HlAxoXl/
4Natvf8/mW3u+UD1KWr9GjP42GOP5axbt663vTV5Xpm7ly7N7rzzzuz2xbfn
/YXz5s3Pbp0/P7vpprnZ3Lk95szJf86ZMzu74Xc3ZHPmzsluuOF3eR4a5SX9
7W9/m13X4/obbuj9fl3+t36/4frrs+uuO/v3tddek1199dXZNddck/99Te/3
a6+9NueqK6+c+kw/r+z9fc1XP6+44orsyh5XXXVVjyuzWZfPyq66+qrs8svP
/u+KK6/ILrv0suyyWbOyy3vLXd77fNZXv19xxeXZZZddlq9DP4U+c3/PmnV5
dnmPSy+9NP//rK++e2lvfZdfrv9fkn926SWXfPX9S7NLLrk4X07/13cvm3VZ
dvHFF2cX95a5tLeM+47KM6v32SW9/2ud+inctvJlLust02Nq/bPOlvGSS9wy
bJ/ts322z/bHcfu//OUF2QUXXJA/89yzUOhvPTftM3HqWdl75rnP9NP9zy3j
vqPP7HL6qeXcZ255+zvbZ/tsn+0Pa/vOG0y1v2fNmro3qv3t2uv6qb/Ptskv
zdvvrh1vl3N/C3kHbU+/5z7hq8+u/Mpr6O+f/vSn2W9+85v8vpz7jN5nznNo
X9yyrqzX9/yMyn9Dz9vo9zk9X3TjjTf2/r4+90LOI9100009DzUvu+WWW7Kb
b745W7Dg1t7v8/L/aXze7YsXZ4sWLcruuOOO3O8tWbIku2/Zsnz83uo1a3Jv
pr6/zT3y/r2dO3OPqP4/eUH1/2mOwH37z84XuGfP7rw/UMsKxYduz9mRPfHk
2Xwx6hPc8sTZ+FD1E27atDl7bMOG7LGNj+XjBTc8tiHfruJG16xdm49BXLlq
Zd4PKV/64AMPZitXPpgtX748W9H7XblKxbJeuTVHhcp/333L8tjVe++9t8c9
2X33Lsv7MpcuFUuzpb3fl/R+3n137/clPc/Z2/87l9yZe8+lvf/peOT0/l7c
+7m4d5z0mVh8e+/3u+7Ij9/ixXfkfwsdx9tvvz3//6JFt331c1HvZ49FZ/3s
ggULs4Wi93/9vWhR7/eFi7L5PY+7YOGC7NZbb82/p58LFvT+7jG/9/v8W+fn
f2tZfbaw972z3+mt89YF+bryvxecXYf6VfV7/r/8u2c/l5/Wz1vzdd6anw9a
dl7v/Ji/YH5+Xpz13fPy5bTMPH1v/ryvyrSw58dvzcuqZVS+/O8FX/391Xrn
f/U/ts/22T7bZ/ujsf28fdFrB+nZp2ed2gTuuefaB/qpZ6iW8f/W7+477jP3
Pf3PrteuT89X/dTnbl1sn+2zfbbf7/b1U5+7/7v/uf/rp1uXPpdPcPfIs232
BV+1vRfm7Xn9rp/6XD/PtvFvm/q/W+7r9v9t+f65ZYX+llfQT23bLSf/l9/3
e+TrWXh2fVrWP2b6qbJqbN1Zr3NP7n+cD5KHUw5Pzee3ctXZuRtWPrgy91Py
VmL9+ofz8X0PrX0o29DzYEJ+77GeB1M/3eZNm/O/t23bmu3atWuq/08e0PlA
4WJC5f30u/oExf8PAy7twA==
    "], {{0, 676.}, {449., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{320.00189208984375`, Automatic},
  ImageSizeRaw->{449., 676.},
  PlotRange->{{0, 449.}, {0, 676.}}]], "Input",
 CellID->476559101,ExpressionUUID->"ba484bc5-c335-4eec-955c-0d91b77c8bb6"],

Cell["\<\
View the requests it made, as well as the responses from the plugin:\
\>", "ExampleText",
 CellChangeTimes->{{3.889474429132718*^9, 3.889474451697926*^9}},
 CellID->655976286,ExpressionUUID->"a4df7a33-1800-4b31-ab52-f7b767e9cd8a"],

Cell[CellGroupData[{

Cell[BoxData["requests"], "Input",
 CellChangeTimes->{{3.889474432473838*^9, 3.8894744330325747`*^9}},
 CellLabel->"In[5]:=",
 CellID->972899323,ExpressionUUID->"3285e59e-fd52-4594-a1ca-7aade8c1ea7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"HTTPRequest\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPRequest",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/.well-known/ai-plugin.json\"", 
                    Short], 
                    "http://localhost:18000/.well-known/ai-plugin.json"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/.well-known/ai-plugin.json\"", 
                    Short], 
                    "http://localhost:18000/.well-known/ai-plugin.json"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPRequest[<|
        "Scheme" -> "http", "User" -> None, "Domain" -> "localhost", "Port" -> 
         18000, "Path" -> {"", ".well-known", "ai-plugin.json"}, 
         "Query" -> {}, "Fragment" -> None|>, <|
        "Method" -> "GET", 
         "Headers" -> {
          "Host" -> "localhost:18000", "User-Agent" -> 
           "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) \
Gecko/20100101 Firefox/111.0", "Accept" -> "*/*", "Accept-Language" -> 
           "en-US,en;q=0.5", "Accept-Encoding" -> "gzip, deflate, br", 
           "Origin" -> "https://chat.openai.com", "Connection" -> 
           "keep-alive", "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> 
           "cors", "Sec-Fetch-Site" -> "cross-site"}, "Body" -> {}, 
         "HTTPVersion" -> "1.1"|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"\<\"HTTPResponse\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPResponse",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPResponse[
        ByteArray[CompressedData["
1:eJx9Ub1OwzAQDmzJUwTPJWk3lAkJCVbEwhLJcp1LYrB9ln1pqFDfHTuU0kqI
ydL3e3e+2eLL9irLsvw6yz6LnAU5ghF8Bz4otKxhuw1bRdwKA7xHz8fJiIQ/
KNo/o5u0oCh8VLYDf6k02IH+T9lBkF65hF5EPwGVNELpTqZQYl9KRQpC9af1
p2shxUQja+I2OaO9gwhbtMCK/LCwTl2S6MAmcJWwyaeYkcg1bd3WGqXQIwZq
Nnfr9bqtqxm0vn23ONu2PjqrtxBPtdhV4FMAz9MIYElJQdCxphc6wLFf44D8
tyYsPfM8VzPq3gsjO1tJNG2tjBggxFfGA7T16zddOTssW0aUhCQev0ulsDA5
h57u4UMYpyFlLDoNg9Bc2f689VR6po7bJikrDl+iX7C3
         "]], <|
        "Headers" -> <|
          "Access-Control-Allow-Origin" -> "*", "Access-Control-Allow-Method" -> 
           "*", "Access-Control-Allow-Headers" -> "Accept, *", 
           "Content-Disposition" -> "inline"|>, "ContentType" -> 
         "application/json", "Cookies" -> {}|>, CharacterEncoding -> "UTF-8"],
       
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"HTTPRequest\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPRequest",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/.well-known/openapi.json\"", 
                    Short], 
                    "http://localhost:18000/.well-known/openapi.json"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/.well-known/openapi.json\"", 
                    Short], 
                    "http://localhost:18000/.well-known/openapi.json"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPRequest[<|
        "Scheme" -> "http", "User" -> None, "Domain" -> "localhost", "Port" -> 
         18000, "Path" -> {"", ".well-known", "openapi.json"}, "Query" -> {}, 
         "Fragment" -> None|>, <|
        "Method" -> "GET", 
         "Headers" -> {
          "Host" -> "localhost:18000", "User-Agent" -> 
           "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) \
Gecko/20100101 Firefox/111.0", "Accept" -> "*/*", "Accept-Language" -> 
           "en-US,en;q=0.5", "Accept-Encoding" -> "gzip, deflate, br", 
           "Origin" -> "https://chat.openai.com", "Connection" -> 
           "keep-alive", "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> 
           "cors", "Sec-Fetch-Site" -> "cross-site"}, "Body" -> {}, 
         "HTTPVersion" -> "1.1"|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"\<\"HTTPResponse\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPResponse",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPResponse[
        ByteArray[CompressedData["
1:eJxlUclOwzAQDZxwviL4XGWBC8oVCYQ4gLiSHtxk2lhKY3c8qRSh/DvjxC1L
D5Htt/i9iW835mNzFUXRzXUUfcVCGgu9slqW8j7N00KuGNP91siSWSFJUwdM
Pmoa340dOkXa9E+6bwC9VsgGXI3aeph1z0AJtZDYs9YlZpvUmjS4dHEcAd2i
PhYyFpOPdIAeluUnK3yykAN2LGmJbFllVdaZWnWtcVQWD3mes1FMsVh7s1XU
ulC4ynZAf9suDMvYHPbz3DizLw2nXHpWiwzBWZ4B3Mko5B2Hnw7/x397lQsx
zcsUbrEK1R7oPKAIM3quZ4ad/IfGECr8CzB0GAB/YQiHQSNwXcIBzrCrW9ir
n0b8ZqP1NzpC3e9Cn1AoLOs4bPmb4ukbbNKHKQ==
         "]], <|
        "Headers" -> <|
          "Access-Control-Allow-Origin" -> "*", "Access-Control-Allow-Method" -> 
           "*", "Access-Control-Allow-Headers" -> "Accept, *", 
           "Content-Disposition" -> "inline"|>, "ContentType" -> 
         "application/json", "Cookies" -> {}|>, CharacterEncoding -> "UTF-8"],
       
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"HTTPRequest\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPRequest",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   GrayLevel[0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"OPTION\"", 
                    Directive[7, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/getCityPopulation?city=Chicago\"\
", Short], "http://localhost:18000/getCityPopulation?city=Chicago"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   GrayLevel[0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"OPTION\"", 
                    Directive[7, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/getCityPopulation?city=Chicago\"\
", Short], "http://localhost:18000/getCityPopulation?city=Chicago"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"application/x-www-form-urlencoded\"", 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPRequest[<|
        "Scheme" -> "http", "User" -> None, "Domain" -> "localhost", "Port" -> 
         18000, "Path" -> {"", "getCityPopulation"}, 
         "Query" -> {"city" -> "Chicago"}, "Fragment" -> None|>, <|
        "Method" -> "OPTIONS", 
         "Headers" -> {
          "Host" -> "localhost:18000", "User-Agent" -> 
           "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) \
Gecko/20100101 Firefox/111.0", "Accept" -> "*/*", "Accept-Language" -> 
           "en-US,en;q=0.5", "Accept-Encoding" -> "gzip, deflate, br", 
           "Access-Control-Request-Method" -> "POST", 
           "Access-Control-Request-Headers" -> "content-type", "Origin" -> 
           "https://chat.openai.com", "Connection" -> "keep-alive", 
           "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> "cors", 
           "Sec-Fetch-Site" -> "cross-site"}, "Body" -> {}, "HTTPVersion" -> 
         "1.1"|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"\<\"HTTPResponse\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPResponse",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPResponse[
        ByteArray[{}], <|
        "Headers" -> <|
          "Access-Control-Allow-Origin" -> "*", "Access-Control-Allow-Method" -> 
           "*", "Access-Control-Allow-Headers" -> "Accept, *", 
           "Content-Disposition" -> "inline"|>, "ContentType" -> 
         "text/html;charset=utf-8", "Cookies" -> {}|>, CharacterEncoding -> 
        "UTF-8"],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"HTTPRequest\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPRequest",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[1, 0.5, 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"POST\"", 
                    Directive[9, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/getCityPopulation?city=Chicago\"\
", Short], "http://localhost:18000/getCityPopulation?city=Chicago"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[1, 0.5, 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"POST\"", 
                    Directive[9, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    "\"http://localhost:18000/getCityPopulation?city=Chicago\"\
", Short], "http://localhost:18000/getCityPopulation?city=Chicago"}, 
                    "HyperlinkURL"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"application/json\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPRequest[<|
        "Scheme" -> "http", "User" -> None, "Domain" -> "localhost", "Port" -> 
         18000, "Path" -> {"", "getCityPopulation"}, 
         "Query" -> {"city" -> "Chicago"}, "Fragment" -> None|>, <|
        "Method" -> "POST", 
         "Headers" -> {
          "Host" -> "localhost:18000", "User-Agent" -> 
           "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) \
Gecko/20100101 Firefox/111.0", "Accept" -> "*/*", "Accept-Language" -> 
           "en-US,en;q=0.5", "Accept-Encoding" -> "gzip, deflate, br", 
           "content-type" -> "application/json", "Content-Length" -> "2", 
           "Origin" -> "https://chat.openai.com", "Connection" -> 
           "keep-alive", "Sec-Fetch-Dest" -> "empty", "Sec-Fetch-Mode" -> 
           "cors", "Sec-Fetch-Site" -> "cross-site"}, 
         "Body" -> {123, 125, 10, 10}, "HTTPVersion" -> "1.1"|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"\<\"HTTPResponse\"\>", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["HTTPResponse",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                   DiskBox[{0, 0}], 
                   InsetBox[
                    FormBox[
                    StyleBox["\"200\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                  Dynamic[{
                    Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                  None], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"OK\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       HTTPResponse[
        ByteArray[{50, 55, 52, 54, 51, 56, 56, 32, 112, 101, 111, 112, 108, 
         101}], <|"Headers" -> <|
          "Access-Control-Allow-Origin" -> "*", "Access-Control-Allow-Method" -> 
           "*", "Access-Control-Allow-Headers" -> "Accept, *", 
           "Content-Disposition" -> "inline"|>, "ContentType" -> 
         "text/html;charset=utf-8", "Cookies" -> {}|>, CharacterEncoding -> 
        "UTF-8"],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.889474433333481*^9},
 CellLabel->"Out[5]=",
 CellID->570947987,ExpressionUUID->"1e98b6c3-ad49-4e4b-bfe3-b41da3de006d"]
}, Open  ]],

Cell["Stop the web server:", "ExampleText",
 CellChangeTimes->{{3.889473069685279*^9, 3.889473074177333*^9}},
 CellID->1820825470,ExpressionUUID->"ee35cb36-d580-4ea9-8e8c-3fecd6c5ade2"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 CellChangeTimes->{{3.889473081013341*^9, 3.889473083050357*^9}},
 CellLabel->"In[5]:=",
 CellID->971704540,ExpressionUUID->"a29047ac-c603-49ae-a6f7-a1de767a57f0"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "339624e7-5b68-4cb9-8424-e7618efe642c"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2088663764,ExpressionUUID->"97378e9e-619d-4649-8b5b-9910e6455c36"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "1c147c4c-5d92-4bb1-b1cc-79b0b40d600f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1404187686,ExpressionUUID->"0a61a72c-dfe1-4a89-b435-d55a8accc5c0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "a32c96c0-7698-4fa5-82fa-416b072fa628"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1484641719,ExpressionUUID->"406a0834-353c-454c-a6ff-4c60e9cecd26"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "2ba646c4-1d7a-493a-896b-6e6b2dd48f26"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->760876740,ExpressionUUID->"c6befcac-5957-4f91-8cf7-8393bab90f78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "303a2ba6-b563-4a72-9068-40b916eec4aa"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1937734942,ExpressionUUID->"ad9b81e7-d822-4ad7-9437-bfb4bf8953f1"],

Cell["Implement a TODO list plugin:", "ExampleText",
 CellChangeTimes->{{3.889474467787005*^9, 3.8894744730264378`*^9}},
 CellID->1274307077,ExpressionUUID->"3bb7e803-af35-4b11-aa10-6c815b785c85"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"todos", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\n", 
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "@", 
   RowBox[{"ChatGPTPlugin", "[", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "->", "\"\<TODOList\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Prompt\>\"", "->", 
       "\"\<Plugin for managing a TODO list, you can add, remove and view \
your TODOs.\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Description\>\"", "->", 
       "\"\<Plugin for managing a TODO list, you can add, remove and view \
your TODOs.\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Endpoints\>\"", "->", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<getTodos\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{"\"\<username\>\"", ",", 
            RowBox[{
             RowBox[{"Lookup", "[", 
              RowBox[{"todos", ",", "#username", ",", 
               RowBox[{"{", "}"}]}], "]"}], "&"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<addTodo\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<username\>\"", ",", "\"\<todo\>\""}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"todos", "[", "#username", "]"}], "=", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"Lookup", "[", 
                  RowBox[{"todos", ",", "#username", ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", "#todo"}], "]"}]}], 
              ")"}], "&"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<deleteTodo\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<username\>\"", ",", 
              RowBox[{"\"\<todo_idx\>\"", "->", "\"\<Integer\>\""}]}], "}"}], 
            ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"todos", "[", "#username", "]"}], "=", 
               RowBox[{"Delete", "[", 
                RowBox[{
                 RowBox[{"todos", "[", "#username", "]"}], ",", 
                 RowBox[{"#\"todo_idx\"", "-", "1"}]}], "]"}]}], ")"}], 
             "&"}]}], "]"}]}]}], "\[IndentingNewLine]", "|>"}]}]}], 
     "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8892965279564943`*^9, 3.889296531899847*^9}, {
   3.8892967426239843`*^9, 3.8892967723501663`*^9}, {3.8892968593944063`*^9, 
   3.889296921140484*^9}, {3.889321382514422*^9, 3.889321408323019*^9}, {
   3.889321477310009*^9, 3.8893214804463463`*^9}, {3.889321896319826*^9, 
   3.889321910054644*^9}, {3.889325811363647*^9, 3.8893258117232656`*^9}, {
   3.88941170940053*^9, 3.889411712451518*^9}, 3.889450158192483*^9, 
   3.8894503830116034`*^9, {3.889450484885947*^9, 3.889450491289304*^9}, {
   3.889454945124021*^9, 3.8894549453458643`*^9}, {3.889474478392243*^9, 
   3.889474499492263*^9}, {3.890398932592304*^9, 3.890398937697775*^9}},
 CellLabel->"In[2]:=",
 CellID->41348088,ExpressionUUID->"4da1c156-9ede-43e7-825f-4a813266e782"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931385254114781], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931385254114781], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TODOList\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TODOList\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getTodos\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getTodos\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}, {
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"addTodo\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"addTodo\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]}, {
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"deleteTodo\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"deleteTodo\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|"Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931385254114781], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931385254114781], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-369769d2-0265-46c1-9d90-d63c913437fb\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-369769d2-0265-46c1-9d90-d63c913437fb\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-369769d2-0265-46c1-9d90-d63c913437fb"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3611931385254114781], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3611931385254114781], "URL" -> 
    "localhost:18000", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "TODOList", "Description" -> 
       "Plugin for managing a TODO list, you can add, remove and view your \
TODOs.", "Prompt" -> 
       "Plugin for managing a TODO list, you can add, remove and view your \
TODOs.", "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getTodos", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Lookup[$CellContext`todos, 
             Slot["username"], {}]& ), "APIFunctionOptions" -> {}|>, {}], 
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "addTodo", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>, 
             "todo" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, "Function" -> (($CellContext`todos[
              Slot["username"]] = Append[
              Lookup[$CellContext`todos, 
               Slot["username"], {}], 
              Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "deleteTodo", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>, 
             "todo_idx" -> <|
              "Interpreter" -> "Integer", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, "Function" -> (($CellContext`todos[
              Slot["username"]] = Delete[
              $CellContext`todos[
               Slot["username"]], Slot["todo_idx"] - 1])& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8894744842485857`*^9, 3.889474500147913*^9}, 
   3.890324342991529*^9, 3.890925418957933*^9},
 CellLabel->"Out[3]=",
 CellID->2066586559,ExpressionUUID->"3e51b7bc-14cd-4148-92c4-c09df08d0c43"]
}, Open  ]],

Cell["Install and use the plugin:", "ExampleText",
 CellChangeTimes->{{3.889474674038274*^9, 3.8894746785243177`*^9}},
 CellID->1668834681,ExpressionUUID->"f5d36ea9-bfc7-4d39-82b9-b3597439e9dd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
rza3llkO6KZNW/xr/a/XK1eu8bFE+eZ8n037fuGFBV2OU4hiXvLok+/Lec+j
TxpVsh8O3x/3XIe7YvBznfvbvawnfrhYmfqjH1adK7auff/2vS1Z8mqX6yUO
1Q2ts2DB0tj3o374lVeWudmzX4qtG8X8sHJJwtyJfOja0Oe2eprUD2s7u650
Lel53OLFr8SuG73+dY7CcxcSvc6in0n3GTvHWi+859g1bddgtJw63pw5C9z8
+UsKXm/6LnXeC32XxWjPetjlpx7nNk943G3L+lvFfLc+PdNtHvew63jmKffy
l7/k1t5yo3vzjTf8/68cflhn/+Ixo932Oc9lt3nebZ/7vN9e+9H+0rw2AKA2
0b3y8MMOc4d+/vPkSwNAapgflhfW/3F9g9UuDNeJ+mG1ddXf1d63GNjYsZlu
+1K/QWu/Guo3GeeHtV/lJob71bHVvg73GeeHtc8HH5xQ9PMX8sMPPPBEl/zI
OD+svsRaFu33af0v6+q69jUcOfKxXOzZcrJ1TqL7vfvuUX6Z4lF6LU9uMXw7
pnHPPfd1+ezy0A0ND3fLxR016vGCvzeFfOSoqeu95zz2zEfcz84e6/++t21d
j/2w8Y3jRvh9NWVWl+yHk5RpT/XDqnNaVzFj1ZHwe4zWaz0bGTx4ZLfvW/1d
w/XMi44ZM7lLHdL1NWTI/V363+bzwypPeP1q2zjPLM8Xrad6pmbP1Yr5Ye1X
TJkys9t95bHHWgte/8r10GvleoTr6dlVXH6HjhG9J+kcRe9Jup9F82isnCpT
WE5d49OnP9vlOCpPuI4YPHhUl2da+vveex91LS2FY/jt73m7W7Tv3q5j3ly3
7qZr3UvveLtbuM973c5XlrqdSxe7+X/5v9ySzx7sJP0/73+/0y/f8forbuGH
3ufXX3fzdX577Uf7S/PaAIDaRONLHyY/fOihqZcFAGoX88PWhoxrq8tbhuuE
flgxDmv3qq0q/2dteaF2ta370kuLc8u1jdrR1k/WsLan2ua33trol6ldqnXN
u6pNqfa27TfaHlbc1PY3bdozBT9/IT98332P59qsel3IDyveHW4b54ftPJrH
1rg8N974ltdJ4oetra1tw77PKqttO2LE2N3fxzC/XN7Y2uEaKyzfuSjkI8+9
fpr3m9cMn+uuq3/R/33OdVN75YfHPLM1F9t97PmOnB/+2rGN3t+GhHHkUsq0
p/thqxeq//rfloXPhGzstc7r76Eu24ae0PywXUN6jiKsboR1Nc4Pt7fPCnzc
SL8/e7YTjrsl32nXpN0Tbr+9uct1nsQP27rR6z+8LuKuf7tPRX1znB9WnNb2
qftNff3D3Xx8MT9s6+l70HUZ9rWw2PGMGbNz66l8I0eOy5X77rvv63Y/FoXy
sjvzpd/hlma9ruK+a66+1C0/6US3beY098bWLW7zQ/dl/e4N7s033/T/b3pw
lHtj+za3fc5st/KsM7Lr/9Fvp+21H/KlASANlCMtP/z5z38+9bIAQO1i7S/F
fcybLlr0cpd1rN2mfrRRP6xYlbUxwzxCxTesTWjLrE0cHZ/VvF/Y9jTvqDZq
GPtsbh67uw05qlv5bL1Vq9b6mJrapcXGCMvnh+XH1Za3WJGW9cYPa3/2GeUr
bD21ec3nJPHDOp/hsew8hd+JnY8wb1b+ST5JMeJ856KQj7Q4rvKcx2W9q/7W
GFal+GHzvsf//nH3k9PHdMZ8s69/fs6jXfKlzft2IcYPJylTufyw8mAffbSl
y3OYUjE/rO9Q9S6KYrS2rnlaLQ/jtnfdNbKL/9R78qbyVGHevtULe5YjQj8c
jp+ufHpbrr+1LM4Pm/cL669yrm350qWv+WU2DnP0nqDzV6of1vUV5jSMHv1E
ziPnu/5L8cP2zK25ues42rpHleKH7713XGz5p059psv+9L3YOooF6/vRMwlb
ppiy3fcKnR/vh9+X5QPvcst+eoyPA2+fO8ePL73y9FPdq987yvtd+WHFgJef
9FO39rqr/PvbZ8107s03/HbaXvvBDwNAGoTxYfoPA0BahH5Y7Uf9rXlZ7P2n
n34hF/vQ66j3Unsu2kY2zCta29viJtF+c2oXRtue5genT5/dZV1r0xZqD5eC
+WF5BZvzJoyZyVe//vpKv25v/LD6deZr55aSLz1kyOgu29ozinDMb2vj63OU
4t/yeci6CStyPlWxW2Gvh41fXrIf1nri2yeOdKdf2eImvLir5P7DSctUDj8s
TxPGVXvqiYuNL626ZuuaH47m/Cq+H/W5caiM0WvV/HB4fRuqp6GHjPphq2dx
c43ZPE4TJkzbfU/o9OxxcyrZtZrUD6s/b773zGv3xg/bvqL9CHSPKsUPR/tL
6NrT8rFjp/jXyoG27yPa3yNKkj50XeLDzz3j1t/1Z7d+8O1u+7Oz3OKPf8Qt
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
nD8f9vl6o61bt7kvfekoXy9nzHiq1/vra02e3OrPxa9OPSuV40frWrk0Y+bT
fr9JmD79ydh9PP30s+72O4a6iy+5yl1yydXuzjuHuWeeeS7vMZcvXxG7f22j
90rJz9I1N3RYk7viyj/5On3zzXe6J56YXPLzwLjvV/tVff3FcaeWtC+EEEJo
T1ZLpqXf+uE17Xt1m4M4957Fj9v/quvrfuqHm0eMznk2tcd7onPPu8RvrzZL
Un35sG/4bV58cV7RdeWzte5Pjj3Jv5b/1usLL7oydv36hpG5zxRF7axMS3vi
cvZEbW3TuxxP5VY8DsVLcR87X4WWFVKpdSSql16a759hyJNUWvIa//WVb+et
o/fd91C3bb525Pf8e0/Pmt3r4y9d+kruWMOGN/doH/JMOl+LFy/tdXlK1aPj
nvBl/9nPf9nnx5aida1csmcUSYg+J1q0aIn71rd/nHd9PX/U9x7VXYPrCh5H
9VT+utCz0s2bt7jTfnte3n3oc8njJlXc93vmWX/I3U970odKzzBUX8eOfbzk
bRFCCKE0pOfJPj7c1FSRXNOcHy7ii6M+1bzwmql/6dZMe1eOtdnXnd539/xN
Lf838MO7l2U9c3/0w9/7/s9z7ZbTz7igR/uotB8e/cAYv+5JJ/3Wv77hhlv9
6yuvur7buuPGTejiRfWZBt9d72MNem3v3X1PXfIPWKKuvfamXHtu165dFTtO
tagcfriUOhKn2267p1fXQFLNfHJWF68gT6UYnupM6GcUYwtVTj8s6XzpM2/Z
sqVH26tuqzwjRjxQlvKUorT9cLSulUuqq7/93Xk5dM+y+qC/w/cuvPCK3HYv
vPBil3ub6pHq09VX3+C+8c0fdrkfRvNxzA/Ls4bHtfuzoRybOMkLh3kw2k5x
6UE33u5++tNTuuzjwQfHJjoPcd/v668vc3+6/pa8cfFi0nVjnxMhhBDaU2Tj
aVVC3fzwbu8bzXfOedTMvm79lI+4tZmPZL3tvm5V+wfdqqnvdSunvcet9n74
7TlPvLbtg50xYb2WJ1bsWH9Pe1v2OO/uV344jBMZPWkfV9oPW/voN785x782
76L2UahZu9s84vfn/7FbTEPeVPuwdVavXpO4vKXI2rF19fdWZP/VpnL44aR1
JJ/6wg93dHTk4sKK773++vIu76u+ykfY5w6vjXL74d6qlv1wtK5VSroXW11Y
v35D7DrKOzE/Kr8bdz+d/dycLnHi8Bmz+eG4zyIPGtZH5VxEJV9u76t/SlQq
9xFHHJ0r37JlK4p+7kp8v/hhhBBCe6IGDx7srrrqqoqML53Ph+aND2f/3tC+
t1s/7YNZX/s+t3rq3llPvJdnZdtfu1Wt73Hrp3+ga/6098D/y60T0//Krcl6
43Wtf51obK2+krV1lFOqfln5cjVNigU89tgEHytQDGDMI4/5NnwhP6w+aGoz
K99t4DU3uqeeesYvL8UPK9dO6559zkX+9ZAhjf71rbfe3WU98wzf+e5P8/bX
Vb9Uy0u8/oZbY98f/8Rkd/nl1/o+eMqvS+qbp06b6X2VeZ5Tf322f63y9uQY
ivtoe/UzXblytc/TPPvsi9w99yR7TqTzduNNd3iPp3jRo4+OT9R/euHCxf64
apdGNXp0Z1wxmicr/+o/69CudUCfQW1ufXeXXjrA5yxG28Sl+mH1kdSxbr99
iD+X9lmT1JGolEepfZm/UzxNrztjp13PlfzB/fc/7J+16Hyqf0Ep/dG1rX2m
9vbpedezuFoYkwv9sGJ8ym/QNXVL9vMp5hyV+m3qM8ybt8Cvr5xXxf6sr0Bj
433+/bWRMYoWLV7i6urudef9/lJ/javO6RyZ5K3COq5nP3odHTtA921d26oP
Kqdi4OpvG833Wbduvf8eGxpG+de6PwwYOMhvo/vGihUru3220C9t27bd54Rc
lr2WdB9T/cw37pK8o/Lhr7vuZn9udf+KW7fYdReta9HPo+/5j5dd4++L+p6S
jJEQpyR++OEx43LrPP74xLz7CtdT3TAV8sMmnS/bNsx71ndjy3Uvyyflclv8
Opr3EKc4P6xzqO9k/PhJ3dbXuBB6T/c5/cbos4b9U/S9qW6YJ7fru7+OLYAQ
QgiZBt99t7viiiuKr9gDbci8vwvF/PCWaR9x26Z+Irtsf7cic2DW2/5D1u9+
3K1q+7Bb3f53bk3rfm75+E+61S0fyXrg/5P1wx/Kvv8et3b6u92GGdr/fm7l
Ewe4VZkPxs7flIYfVnvVPKnaEw88+Ij/+5gfnxi7vtq20Viy+NExJ/h2dpwf
Vns2bhu1WUrxw/KZ5tsl6/Mc+sIFCxbl9q/2bCE9//xcv628fSj5m7jyCp2f
YrI+q1HUBuvJMWwMGXkOi7GIYnmaajvb840oyqUs5u8tnhSNpegZg+0nGne1
9ra8nEm+Jt/5CMf4KcUPK1/SlofPGZLUkTjJH+X7PlauXJVbT88V8n2WpH7n
5FNOTxRXVF/mQYNu83n+JvPDFseOEs3//+Uvz/DL5RPD9ex82DMhXTcmPQuL
27di2Tq/0k15zoP8sUlexJ4vRNHzhjAHxe4ruh+oTsVtE407ml9Srvlxx/86
tiyrVq3uso2+y3z9c6Meq9h1F61rJvn9fMeIPhNLoiR+2HJRkuRu23MWeXtT
Ej8saTw3rRfmT+i5iV0DxfqF6LmUfc/FFOeH7bckLKfqmZ6x5bvP6fmVlO/6
1j0LIYQQ6q9SDGHSpMlu+PDhFdl/3vhwzBhZKzL/6NbP+Jbbuehc59be7N5c
d5fbseQyt3rmse7VzL+55e0fditbD3FvLrvSbX7mK27NtL/2/njt1L29J16V
+Zjb9vT3sw2ya/zf/cUPWz9Gtd/kjcO2l7UjTIohmX9Vbp7aQRqTOtoWCf2w
Yni2/IQTT/N9x4T+DrdJ4oflX1VOtcUlxYP0Wv34TGHsrSd9dnUMi2GobSlv
qniq2n+232LjjSlmqrG0rE+2/KBe2xi+pR7D2uXW5tT+1IZ7MiYeGMr6L2sb
7UP7VHvUvsO4uFYoxfzlgbSuxow1heOEqb0ZyvImzZdpvCVbV/GlTKbdxyTt
3ITt4qR+OPSu2leoJHUkToov63MpHqr9qnx6Lc9juSnhmHOK+ym+pmXmEXSc
JHmg5pWKxazjZH5Y6FmHcgpUhrD/f+jLzQ+bP9T41dpmyZKXu5TF/LCekdj6
yptQXFn1xjy89qF6ofqg82N9nZXfoNc6/5LOmdVn1SE9R9B3r/i01T/5Movf
RZ+z2b3ioYfG+WvEls8K8sTNL1kdV+xZcUvdj+z6Um6GSTF860erfGF5K8VS
bYwmYeWXil130boW/Y50zp599nn/zOea3ddi9FpKoiR+2M6pxnIuJrsvqJym
pH7YnlWE163uI/ZcopiUl2CfJcw3iFNSP2xjReg70rMc1WXVcfsedE1Lqp/h
d6rXgvnGEEII9Wd5Pzx5squvr6/MeFpxedJRL+z5uNv62p/crm11bufLZ7id
s37ktr94jNu65jLnto1yW5Ze41Y/9Um3esYXnesY7TbMOcGtmP7XbqXvU/ye
7H4/5F6b/Bm3es4fsutPzXrrg/tN/2HlfKptoFityfrW3hJpr1tMSG3AaFtG
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
HOf5wuva+uWW6oc1/5peh3MFFVJv8jJM8rI6nvU1iTtXSfZRzA/bs6jOeYXz
1yldf1aHwjEjkvhhlcOe5YR9dcN+3MXGrD//gsuSe+cS/HAoXTcaz8Lqduh9
8cMIIYT2RE2aNNHV1/dRvnTgh9e3ftRtaf+065j9A/fmxna3dMLhbqOfl+ld
bt3Ut7mNU/Z2mzJZzyzvPHVvt7z9QLdq6uFZ7zvFrZ57uVvZeqh7fepn3Jr2
T7k12b9XTfoPt/HZc7N+eLpb3g/iw5rDpVC7JBxb2OJ95kXi2odhbnTYf9ji
FnHtcZvbqZx+WLJxbeW3Ojo6YtcJ510Jx0cyjxY3r5LNr1Iothsqnxcp9Rg9
aZdrXB3bTzR/195L6oflY7WuxmnV/sK4ks3BKs9tHs+k+I8dJ+yfLoXPQpL6
YUl5s9ZfUW1z+f5yyvxwdN6asLxxea837O63Ho5nnE/h+NzRsblCWXxRHsJU
aT+s862c+Gi9UA6zrRvuy/xwtO+ojbuk8kbnANczAI0Hpvfr6jvjx6Efjrsu
LE/XcjmkUv2wPbu5KjLukpVJ+bvC/GRPrjvVeZ2/uPmoLX+mVH+dxA/PDPoE
F8o7sHu4PcMyFfPDuu6sP4wIxzDXZ7XYvfpk5Lun2Dhe0d+IfErqh3W+leMe
fQ4Q5mbbXAnmh5PkDyGEEEL9QWrHT5k8xY8vXYnfrkJ+eF3rh93G1k+4de1f
dW57u1s375du+ZS/cVsmv9dtnfJ+HxPWuNGr2z/kVkzb1y2TH56RbbPvmuA2
zD3bbWjTHMT7uG3te7lNbfu69ZM/4bbOPiXrh2f0i3xp82QahzWfLt8dPzVv
YONsiVH3PZz7TtRGC/vfhW0d24faH6En0t9hP9Zy+uHXX1+e2284/6RJbTmL
cyieF7ZdLa4VLa88kD0fKDZPkSmfFyn1GD1pl88L+oBbfqmkeXbssyf1w1on
/K40J65JY37ZcqH5fEzhMxWNvWXS+Q5z9Uvxw5JilrZfzctTav5pIdk4UPq8
0bxn8+Gq66EvsWcCQvO9JFH4+bVNWAd1XM0Na++rf6Sp0n7Y5svSc7LwWZJy
FawOhNeq5Qvo84R1SR7U1ldfThs/QPd0G/Mu/GyhH45eF3rP9nV5MFZYqX44
/J7CfrYqt82RbfNJST257mxMBpVXYzGY9P1a/UniBUMl8cOSfRdCY1mvCcYT
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
c6Sj42nJz4YxX6H1W3bHfuP8sHx1GHuuJT8sD2fLjZNPOTXnY42mrPf6jy99
ObfOpz79T95TRo8xd+5C961vHd1lf+pXe+ZZ5xb1w1F++7szc/u49dY7u72v
+Gt4nLh9n3HGObn3VS5bHvrhgQP/1GUbeel/+uw/596/6KI/5t770n8enlt+
yaWXdzuePKq9L29sfrYUP/yVr/53bl35dC1Tjvbvz78wNhZ98sm/8n5cudX5
4tV/+tONva5jpfhhed24/sRp+GGxdvQDef2wcpTNQ4beWdvY9q8NuaebH1aM
u1C547xq6LEn7j4vxfywLUt6jHzHDcm3/zemT+8S/97Z1oYfLhH5YV1zn87e
I/N5YnnhI4440q/3ne/8oCLlSLu9AAAAUI3ID7funn84DT9sHlZ9gaPvKRas
GG+4TF7Z4sWS/LS9Zx7a8qql6PbV7ocnTszkfNsVVw5w1153Q87vnfrr3+bW
Ux9UW++kk37lzjr7vJxfvOzyq3LrKS5r26sPrfzbj3/809y25fbDjz02oUt+
ctw+XnppcZf4sS0v5IfFsGEN3Xy04q+hx8w37lbYl1kxdy3rrR++4467u3wO
7UP/27LLLrvKLVy4NK8fHjToz72uY6X6Yb0u5In70g/f+4UveK8X54fFY9//
vl82+rDDcstm/f733XKly+GH1cfYn5Psuelvflio77C9t7y+Dj/cA4YMqcvr
iUMvfMQRX/OvK1GGtNsLAAAA1ciWLVtdS9YPpzH/sPlby48u5l0V8zWvq22i
64f9j5VbXSguXK1+WGMj6/Vdg4fklikurHjjr3/zu9wyxYK1nvynLVMs0pZr
PCstU+6wXh/+X0f4eKatq7GvCsVw81HMD19zzfW593/1q9Py7if0jZZfXMwP
P/nks9189JQpbbll8rz5jmfPAMSdd97jl/XWD4fjd1n+tuLYGntLfl0537Z9
mv2Ho364kCeutB+WLwx931PnnpvXDy/+859z623PZPyy+//zPzvL/bOfdTme
+WGNP6X+wiHP//GP3XzpwkGD/D7VH/fp3R5bLMguT+KH23/1Szf116fmeOHK
KxP54WH/eFC38mkcrSR+W88A9N6zF12EH+4hcZ64r7ywSLu9AAAAUI0oPtye
bTtpvqW+nn/YsHmEJY0fHfYRtn7ASze9NQ61jacVjSVbbnV0+1ryw/KBne2y
I/Pm9Vl8Vf10o+9deNGl/j0bc0qxY72Om1PJcq3L6YfDXOiLL7ks737C/sA2
3nIxP6znAmF8VbFh5Zbba52zJOVW3FbLeuuH7dwKnUv1hdZ3Fje3U5p+WPML
x8VO4zyx+eGwz225/bBezzj99Nw66kMb54flCc1HLrrpJu9fbZuoXy80npb8
atSXxjHqP/7DdbS0JPLDcdsm8cNxvDJ4cCI/rPG+9J7GmsYP95zQE+t5Yl95
YZF2ewEAAKBaacm2E5ub08mXDj2xxYkl+d/ZQbw3bjytMMZs6yr/Oukxq9EP
z5+/uItX1PsaOzmcH1deN+wPGxL1fF/89y/519G5hoT5uXL6YcW17f1w7KoQ
+cXQ1y5d+ppfXswPP/HE5Nz7yv3WstnPzY3NvY5y1Ne/lVtPY19pWW/9sGLC
4TkPy6Gxs8OxrNP0w0JjE/txnSPLo5740aOP9usW21/oh+O8WzE/rDzpe3eP
76UYqY1rHfphofGjtPyJHx/jY7cWA34jMj61+eHM8ce7Hdn7YYjNlxT6Uvlv
xZot5qr+w+E+i/lhjXOlmLCx5PbbE/lh+fpo+Szvu5Af1mt7b3GBnGv8cDLM
E7/1LK3yXlik3VYAAACoRjS+tPoPNzY2VmT/pXhT+Vr52eicxNYnOG7OJPlj
88JhX+Jq8MM/OubYvLFZofxl87Thcot7ygdb/rOQp9L7oR8+99wLuiAPqrzq
hx5+1K9rMWD1Y40e/4QTTym7H54x4+nc++rPHBcrzZfjXMwPq1+0vS8vb8vD
3OvZs1/otp36FIfrKL6u5b31w0LjeivHPW6u5XCfafth871xedChJ1YsuVhs
WCjP2PzZyt3zDBlrR4/Ovae/4/yw2PDQw93iplE/LP9o/YVtDibr4xvnh0vt
P7zo5pu7xWmT+OG+7j8s/23v2XjU+OHeYZ64r7ywSLu9AAAAUI0oJjxw4EB3
1llnVWT/pfrTODTWlkned8zSuT6vOowfywtHc6j3dD+ssbDU3rr8iqtj3584
qcW/H46xHEVz64b+VznD6hucL186ivod5/O8irGW2w/L/4YxU43fFb6vMZft
uEKe394r5IcffPCRLl5T/aLtPflOWy7fGvaTFr/81W9y7+v5gi0vhx8OUQz+
pptv61JOfV69F/rhm/98W9na10n9sDyu4r5DDjwwdm7hR7/1Le+1FDNNuk8b
k/mBr3wl59+UO/3I17+e87BRrxf6YTH36qsL+mGNpRz1zC/feWfZ/LCwsbT0
f3/zw5vHjfP9n2255l5K8t30hberBorNv1Ru0m4vAAAAVCPqM3zNNQPdueee
m2q+dJJ86uci+dPWX1jjbPV0v5U6r+Vo+yif1uK/Gjc6fE9zBpsvvHrAtbnl
GoNJPrd96szcMnliGzva4hgWN5ZPDPd78cWXee9mfXLVp9X6ty5btiq33p13
vZXXXE4/LKJzDCtmrTzqa669vsv8UDov4TzCoR/WOVDOt/ojh9sIjZcdzj2l
+Hv4vsYO09jNt91+l/ve93/U5T0ts+1CP6z4ro4X5aGHxvp14/xwGLt/4IEx
/ntSvNiWKdddy7Su5oey5cphV8625i3ubR1L6l07vecA76nkicM4sS2/6yMf
6dafuBChT5PfG3HooV28azhPUj4/LMZ+85t5/bD36t/+du59nysd01857D+s
dULC8anjfKlynW3bBTfcUFE/rP+j5Zv2m9O67V/rRZ8DKKd8++TJ+OE9mLTb
CwAAANVKZsoUV5/S+NKlovxojRstwjmLq9EPC/lb80HqT6zxrn728+Nz/Ybl
s0JvZ+Np6X3ND6zxms2LaTxjWy/0gFqunF1bT97O4pLKvbbxYrT8N6ednoun
VmK+JUPzP0Xzh6NEjxv64Xyob3VcX+hwjuF8aP6qcJvQD+dD8zRr3Tg/fOWV
Awtue8EFF+eOFcb4jb6afzjOE5vvfezoo3d75E/4uHGx+YmjvDTwGr9t6NsU
F1Z+b5fYZ2NDXj+8beLEXD/eOD9s/YaFcqbjylFoPC31T4760rC/rxj5xS/6
5XWf/lSX8nrvu7v/cdyyQn44rk9xHK0nndRt/6EvVvxdY2htGT8+8fectu+D
eNJuKwAAAFQrGl+6qanJdXTsKPu+y+2Hy02lzmk520DyuBbfDWOjvzjuxJxv
NZRvLA8c9nfVur/97Rnd5tZVjDH0aRaLfWHu/C7raQ4g9WUO85gVRzavnq9/
cxxJ/bDiooqJxo03JU97/+iHu20TxlBDdO6OP+Fkd+ttd/nxxvIds76+udt5
FjqXcf2R5ceL+WHrs23PFEI/LHQO7NlGGBe+8cZbuh1PcfOwfGHOd08p1Q8L
5U4/dMQROc+lMbTUb9jeL9UTC3m114bc4+fJ7UmZoLyk7fsgnrTbCgAAANWI
xtPKZDJ+/mH8cPmoRFtI8wMrJvnUU7MTr58kp1aeWnP4KhZcaD31q02yXjmR
h1dOtOKjyu3WHMKVPJ58uMb0Uv6yPHdb2/Q++bwar0zHiotdR9Ezj7hxxnrC
rqef7rFn0lhSIu4988Rp+zooHdWJvrq+oTTSbi8AAABUI8qR1vjSmn+4EvnS
e9dfmrrnzYfKVqnzmna7CSAJ2+bOTd1/Qf9CdSLtegl5rtd+0GYAAACoNuSB
W1pafL50Jfzw95+oS9335kNlq9R5TbvdBJCE9a8sT91/Qf9CdSLtegnxpN1e
AAAAqEaUI93W3u7nH66EH168ZrX3nf0pTqyyqEwqW6XOa9rtJoCkbJ63IHUP
Bv0D1YW06yPkJ+32AgAAQDVi/YcbGyrjh2uVtNtNAKWAJwa8cP8n7d81AACA
asTypRsrNL50rZJ2uwmgVJQnq76jvRljC/Ys9F3rOydHes8g7d81AACAakXj
aWl86bTLUU2k3W4CAIDqIu3fNQAAgGpEMeF233+4wedOp12eaiHtdhMAAFQX
af+uAQAAVCuKD2s8rY4O+g+Xi7TbTQAAUF2k/bsGAABQjSg+3JJp2e2H6T9c
LtJuNwEAQHWR9u8aAABANaIcaR8fbmoiX7qMpN1uAgCA6iLt3zUAAIBqRONL
M55W+Um73QQAANVF2r9rAAAA1YjPl25pcc3NzamXpZpIu90EAADVRdq/awAA
ANVIGB+m/3D5SLvdBAAA1UXav2sAAADViPoMd46nhR8uJ2m3mwAAoLpI+3cN
AACgGvF+uLXVNTc1M55WGUm73QQAANVF2r9rAAAA1Yj1H1a+tHKn0y5PtZB2
uwkAAKqLtH/XAAAAqhHFhNvb21xTU5PbsWNn6uWpFtasSb/tBAAA1YF+U9L+
XQMAAKhGFB/OZDKuvr6e+HAZWb9+U+rtJwAAqA70m5L27xoAAEC1onzpxqam
1MtRTWzevDX19hMAAFQH+k1J+3cNAACgGlFMWH5Y+dLEh8vLxo1bUm9DAQDA
no1+S9L+PQMAAKhW1H947G3XuVvPOCH1slQjeqavPDf6EwMAQFL0m6HfDuLC
AAAAlUVjaNUdf5S78JD3ER8GAAAAAACAmkF+uOGEo9ylh+yFHwYAAAAAAICa
YcuWra7u+CPdxf+MHwYAAAAAAIDaQfHhxhO/7i46ZC/mHwYAAAAAAICaov74
I90l5EsDAAAAAABADaHxpetPOMrnS6ddFgAAAAAAAIC+QjHhuhOOdBcfgh8G
AAAAAACA2sGPL33iUe6PjKcFAAAAAAAANUbdcUe6i/DDAAAAAAAAUGM0nfh1
P55WR8eO1MsCAAAAAAAA0BdoPK3hfv7h9+OHAQAAAAAAoGZQjrTGl76I+ZYA
AAAAAACghjA/fMkh78cPAwAAAAAAQM2gHGmNL30J8WEAAAAAAACoIXz/4eOO
dJd8Fj8MAAAAAAAAtYM8cN0JjKcFAAAAAAAAtYf6D1/8z3ulXg4AAAAAAACA
vqKz//DX3cWH7OVzp9MuDwAAAAAAAEBf0RkfVr40/YcBAAAAAACgNlB8uP74
zvmW6D8MAAAAAAAAtYJypBtOONLPt0S+NAAAAAAAANQKGl9a8WH1H067LAAA
AAAAAAB9RS5f+l/wwwAAAAAAAFA7+Pjw7vmW6D8MAAAAAAAAtYL6DNcf/w38
MAAAAAAAANQU8sN1xx/pLj3k/YynBQAAAAAAADWDYsJ1fjyt9/vc6bTLA/2D
LVu2uo2bNqdeDgCA/obujcuWr0y9HABJWbFytVu/YWPq5QCIQt2E/oBiwo0n
HuXnW9qxY2fq5akm1GZ6+NEJ7qGxT/jXK1as9n9PmNSWd5tNm7a45lEPu4uv
uMGdfNoF7o9X3+hGP/y4e/mV1/ukzK3tM9yR3znOHXrY0Z5HHpuU+nnsz3zj
e8e7Lxz+HTelbXrBZeWsI8WO358458KrffmuHXRn6mXpryx5+VV/jv7jv3+Q
eJsR9z3it/nFL8+uWLn++39+7o/x1KznUj9HUfS87v6HxrlLrszeJ3/3B3+f
1HWUz6OW8zpZs3a9+39f/b6/P457IpP6uSiV+x96zJ+LHx33u1SOH73nlYuZ
Tz3r95mU1WvWddvH3BcXuD/dNNid8fvLfb265KpBbuTosW7z5i2xx9Q+4vY9
YVKLmzN3fknPlEs9dj5eX7bSf79f/Mr3cstU71VftUy/MWnWPztnfX3t9Pff
ymqh1PtLf6qbPYF61Z2JmWn+Gn992YrE25x1/pX+PP75juGpldvHh4870s+3
RHy4vDwz+4Wcr9TrUQ886v/+8lHHxK4/acrUXDsrjquuu7WiOe2vvrbc10c7
3jd/cCLXeBEOP+rH/lzp+i+0rFx1JMnx+xO/OesSX77LB96celn6Ky/NW+TP
ka69pNsMHjbCb/PDX5xWsXLJn+sYM558pui68iJ3Dmlyj09srfj5mtw6zX35
az/Ke59UOaLblPM6ef6FebljXX/z4B7tQ20FlXP28y/2eX1rGPGgL/v/HHNK
nx9bRO955ULPhvLViTiefub53LaKT/3kxDPyrqvfZT2Xjh5Tz48LHUPXtO6B
+m3NV+6eHjsfr7z6erfze/vdjbllulZ7cn51z1GdVXl78z3ZOQv9erkodF31
99/KPY189aHU+0s56maaUK+6o2tb5yRpXEcc/+vf+230TDDNsmt86UsOeX/q
57DamLdgcZd27tjHJ/vXX/nmsd3W1f079KLf+cmv3IA/3eZjxKFH/uHPT6uY
J37wkSdy5e3tb16t0Fs/XEodSXr8/gR+uDjV4If1/WrdSsarheJuoVf49g9P
8s8Jf3/xQPfVb/80t1wxtnC7cl8ndw+/13/mVavX9mh7tRVVntsG1/d5fUvb
D0fveeXitsEN7tiTzuyC/aYqhhN9b+GipX47/dYd/o2f5OqO6r3uWxddfr37
9o9O7lLfhtSN7HLM0A+H+w73J1Q3435Te3PsfMT5YeU0qD3Rm/pm+3xuzku9
+p4q6YcLXVf9/bdyTyNffSj1/lKOupkm1KvuWNuhddqTibfpD35YMeG6EzSe
FvHhcmO/S3bf1/Wi18pHDtfTs2OLd+i3Me53U3EIu/8oh6oS5b3hlnv8/n98
fDp5dHsivfXDSetIKcfvT+CHi4MfTsa69Rty90ldL/JV4fvKoZaPsPtkWO7+
dp3Ush+O3vMqiT0jUR+kfOv86vQLc3VGsaro+8r5U76OXaPzFy7JvVfI2ylv
eXjj/bl9y5Or7V+uYxc7v6EfLgf4YUhSH9K+v/Q11Kv85yTMwSlGf/DDijU2
nNDZfzjtc1htqJ+MPfPV62kznu6Mafzo5C7rmWfQ7536EOXb3/d++uvc72r0
PY1FoFxF9Ts+4dTz3C131iXOxVP+n9qz9jxabQi9FvptLfUY8vdXXPNnd9Nt
Q93a7O9/XfNo96szL/ax7iTlmTr9KTfg+tv9MU47+1Kfk5OkHaDzreMOvOH2
bu+pr5I+z5hxE7u9d91Nd/n3wpy2Bdnjqfy/zpb7xNPO99eovr/otqX4Ye1T
5dOxrK2etI7kIzyW+nleM+iOrCc5x1024CYfS4vbRt+J4lvq2yv/ctmAmwv2
5VPOi8qsdc/NbjOs8b7E/eJCP6z6c+td9b5v3O/OvcznI8jj5NtW50ttRNUD
lVG5+/I8+daf8fRs/90fd+q57ubbh8W223R+VRb1PVVfpaH1o3zd/OXvLvTP
g6Lt1XLXVeWDXXntLf5cqu/ri/MWFvTDOs+quzrv+r1QPVy9em1BP6znaepf
rLp79h+u8t9toc+l86z2o+qNjjNxcrtfnsQPa1wDnU9rhyqvwe4dqyOxU33O
u4Y2+/uA4rnqQxrXhzMf2tbaYIXGNbD7mL7Tnl4neubor9NsndL6+s4U91Od
1fuqX9F7htBrlfO35/zRf186Ttj/Wl5A25mvVx87vY72mdLvss677k0qp2Lg
qv9xfUn1rFT7UH1WfdL9WfVL26j80fXD9qruBY0jH/LXo64D1avwnt/ba2zx
klf8Z9P6NoZA9J4XYuNnnH/JNZ3XyFWDYu/ZSSnmhxUjtjp1+nmX592Pcrwt
1hzmHiTxdupPacfQPbdcx85HnB/WPUG/PXFtzWL396aRD+eedwn189PrBx8Z
36PvpNA5e/a5uf4+rN9c/Xao7iQZOyXJddWT30qR5HcoaZun1HtzHEl/v0v5
rdP9X+vm8y96rqP3de6K1YdS7y9xdbOnv9MbNmzq/L28aID/vq698U6fw6P7
lPansic9z0m/q3ztvWK/BVGS3Fvz3R/02dQez1d/9b5+D8Llel537/2P+HuP
PqPqrMYyiW6vz6Xt4/pC6bvUezdm6324XGOP6Jzo9yjuvOp70Hepa/z/s/ce
YJKVZd73m773u3bf3TWyruvqGlZ211XfDZ/rqqtrRNe4CKKYkCAKiBIUBBEQ
JKskJfZ0D053V4+EITPdPbGquicRhzA4wAwMaXIOzDDyfPU/03fx9Olzqs6p
rqpT0/X7X9fvmulTp06qE57/ue/nfqbkpgXXUyv4YdXQUn3p0/7plcSH64x+
Y/2+1hdU93r9/aVvHjNqHsu117VbaXk6V9WmUPvHvx+r/R3X7ziJB7U+q1FY
eyrNOtSOs/aO2pA2X5L4l+7xUevQd9VvsNJ31ZaydkP4vYLyKqPirsuWryiv
Q/dSTdP16eeu+4TbrUn9sNo+9qz+6uHHldsbSc6RSti6/OeTj+7B4d/G4g1h
9PzQMbR5tY3yeFHzqp0pf1Nt+8wPqx0XtV6dU2ozh7+ndnDUevX7hT20ttn8
WJgTTvn5qHl1r7XfwO7ZPvqNktauS3uuxvVv1HUfdX0EuZQjv6+P7hc/+dkv
Iv2wfGLUOvQd1fcJb5PaQVHzq12cxA/rGRl379C1ZfPJo8Udq6T1utRXxH67
SvPpncNpZ/9y1HuxtNeJjqumqx036rca8XR2L/Tbj2onx90j7d6udyBRn+u8
86+7uPNZ7xvCOdp2r7r0iq7I76h95c9v7VXdE9UvJ2pbnnxqdLuolmtMnsS/
5u2eFr7nGXq+ffbAwyPXoWvH7s9pqOaHLSdKx9C/90Uh36F5fR+fNNZ56s8u
Kt/vrL/TeNcdR5QfVts6vJ1J7++qIxI1j/++KQ1xx0zvEuPuXepHVGmZSa6r
tPeAYLkJn0NJ2jxp781RpHl+p3nW2bNJnjO8Tu2n3WPUpql2PqS9v0Sdm7U8
p/08Sx9dc5Y3lDSfKs1vFdXeS/IsMNLcW6Ow4yf8Z65h57sfr9e76Kj1ic5Q
v4yTRto5p5x50djzseQP7Bj70+0+HvbXdp2E0fx23WTthxUfJl+6Mej+aOeh
PJHOG/+eo/cndk6k6Xtu6B2PXY9qK8kr6330SV5bXfeCSsvQfUTv4PWOyK4b
/S0U40m7jvA5r/u0nnWVctaE3r/ZdxQf0PtGvSezetdJ2gJqg2lev6aOxSMM
vwat5bNZW035aTaf7sV6j6X3Zv4zzvfaSfyw7lF2n9b76HCMp9o5UgnfL+nZ
o21VDNavEe77DZuu9o6OkX5H3XNtXv+46b2uPdM1XW1/Ld/WqXf41bbP/LAt
R3FBrVPxNvNbn9r/kFFjLSg+Yd+R59Q7Yj1D7Pmi38LvQ285h3pW6R2olm/t
T6FzyOa156zNr/ib3gdpX2x6kmOf9lyVN7P51QbVOnUd+X0H/baTPIPOSdtO
+UnV1NG/9v4s/Hz340g6d7un3hz8bsonCdoQpXaUrmWbX/X7bDnKPVH/RGF5
KEYlP6zl6T5hx0/7r7/VfrXfSOejLUvvyhV71bts2y79rknyP+z3lzdIe59M
e52YH7a2l+pX6zv2zj7KD9s65NvVHtI7EcUp/PuG0PExn6Z7rv62flY6ZtY2
td9d55Z/vSj+7cfv/Hd3Op90Xun80rG26X5b39qrds7ZNaPzsnz+hPrM1HqN
aXm6hnWf9Z9v/j3PMG+m46g4vNpaev9oy1JMLO3vXs0P69kUHNNS273asqy+
hrC2eFI/rN/Yvms+c7zrjiOpH056f9e56W+/rhv9XSmXrRJRx0ztZlu+ziv9
9mqz2zswXYOVcoOqXVe13APSPIeqtXnS3pvjSPP8TvOsM3+k+cLtE92v7TdI
cj6kvb9U8sNJn9N6V2YeTL+PnhG6ZnTfjntexpH2t6rUBqz0LKjl3lrtvNA7
tvBnarPrM6s/oN/P9k9tDPlf7aP/vl7ng32/Fj/8jSNPDKb5727lM+wZpueU
tlW/afidXJZ+WPeY7iM+507/Z/xwFug6sfOglhpWun7sfAznoeg8t2UnqXtu
9yDlLYxnHf6zIU39VV2v8k/KqfGnWz5p+D4ShbW99TyyaXqO2f1G/6odYJ8d
NfIOwPI9dO+yeib+81fPPfO0/jOnmh/We1B7n6s84UrP9FqwdelZ4LeR9Uyz
e57qzGia7uHaN7WTw20qxfjDx83aa8oV8ufV80LLUZ5Zte3z/bCek/5nan/Z
Z2ova5qOj223fsvw/PaZ8pQ1Tfd2W0Y4n93OTX3H2i3+c3beovtGzW/x3iS1
vdOcq/pdbFrYy+l3sPaV74f9uGs4T8mvKeU/380/h/vw6p2WPRP9ca/sPb/a
hv55qf/77/XH03/YYoFCnm7Udq3bUH4foDhstXXYcvQMbeR1IswP65qPqg0c
9sP+e81wnri8qM4V//yM6+doY4+I8PtR//xXHp9Nt2napvB17cfCbL/99qrf
7hFqd4bbN+O5xtLUU7G2ku7X/nT93jp+arOl/d2r+WH7HZLEYXQvt/2yOrhJ
/bDOIfuu5Y6Md91xJPXDae/vtsxG9B+2vhD6vfx5lW+r46M2c5LadUn6Dye5
B6R9DlVr86S9N0eR9vmd5lmn/bV7WjgWbz5JsfIk50Pa+0s1P5zkOe2/L7Lf
xNDfUc/LONL+VuE2YJpnQdp7axx6v7zn3B7dl9KOrZZhfZPs2R5+7vvnkZ7L
Nq0WPxyF5XBEPaeUL2/HIev48PUnftP9lPGHM8HyMqJyiZWXoXMnCsvZ0Psr
fT/qvZCw9maSPlhxfjjtOvxnQ9q+MXHYfajaeMjmR/z4nL1/stxQP7/bvKr6
UFfbBuX8al69uyvvewU/rDaYLV/PsEbUBbd1RY3ZZjHtJF7D3gH791N7nylP
kKZd62N+OK4+mP02J430q7OxWOLal3YuWnvH4kfa16j57R2IPbPtHA+3u4TV
9vbbkfU4V/U8r/Rc07uY8D3A2g1xYzjacfCf77avOoZx6/Cf8dami2pf++8q
xuOHbTlxfSWUf1Hp/DCUP1CLx6r1OjE/7F/rPmE/rHaPbZ/epVVru8e12+13
ivvdLebrt03K+dKhPlxC55t9br+jtVejrjF/LCSLgdR6jUXVuaiE5UWqPfp4
gnyBJFTzwxZXSTI+uv9ux/rYp6kNZb+DeYTxrjuOpH447f29kX5YORC2fJ2f
acdcNpL44ST3gLTPoWptnrT35rREPb/TPuvsfPDjrrrvxvVBq+aHk95fKvnh
pNuuOHClY2g+L4kfTvtbhduAaZ4Fae+tcehY2jr9nGl7LvvvSWyZUbUl/Pd2
60fO43r5Ycv1iHpfpOeUbVfW4y3ddMb3g3paxIebjz+WZfg+GpdrL9TPVPPY
O/W4se2Vt6DP9f6l2rbE+eG06/D70qQ9HnoPrnuO7g+KX8lb2PpFEl9vHtTq
z+p5r2vN+mrbtWs5Wn4fI6H+MqrfoHiuchPVTvP7pfj3hUp+2Kda/7BasXVF
5dorHhd+vgm1xxQT0PtB5Sr72+v7Ej0P/FwjHQM9V/TsTVtPKy4H2eL5Vj+s
y8s30HEPY5/Z8uw5V21+9Qn3z3HlrYe3xX8W1PNctX5xiktELUftW33ue0aL
3cT1dVDsxn++yz/YetWGiDsO9k5dbRubFtUvU+erfT4eP2x1v3R8or6neny2
nmptYGuXKY+x0deJ+eFw/N+Iypf2cyHsnNZxicppiWu3W00R5UlXul78XONy
374Yn2R5hIrB6W+/f1/U/Lb91ver1mss/ByphvJX/eOnZatWj2LmaX9vo5of
tlhQkr6w/rlqz9+kftjPG7E40HjXHUdSP5z2/m7zNcIPq+3jn0v6TDm1Ot/9
/k3VSOKHk9wD0j6HKrV50t6bq5H0+Z32WWfvLv2c6Zd99thnV9z5kPb+UskP
J91281pRtVSF+dhqfriW3yqqDZj0WZD23lqJqLiVvZu3mL9/H4prw9k9YXZh
XvB3vfxwNR9hdTCzri89vfM3Qb50VtvQzvjtzmp5UH7fVqtHUG6zRrzrERZP
qFS/0ohrx6RdR61+WNeJ/3y2e6RfPyKJH7Y4rvJNFEf398n6n+jeb/dtxSjt
u+rH6I9jKtTeHK8fTlIXtBYq1fq3PHd7Zsv3hGs6ad98DxeO0+n4adujfpck
MQV7Lqj+U9TnFh+0/ByNQ+ivI4x9Zr+nn9cbN7/+tfZRpba6f33V81y1fYqL
+dk7c98P237F5WTYe2V7vvt5tpWOmz3Hbf5KNe7K75HH4YdVe7vSvvttm2rt
XrsG1Qe9kdeJqMUP61mqe05UvRl5Hj83La7dXu13t+vFH5/c/HBUPENYTQWd
h/q72ngo4fZqPa+xaqgvgF+rwVC7PypvvRrV/LD1l1Hbs9qylK9t22N9m5L6
Ya3fvmu5guNddxxJ/bBIc3+3zxo13pL2S9di1PPT78tQiVrHWwrfA9I+hyq1
edLem+NI+/yu5Vln14v5J1tf1FhgcedD2vtLJT+cdNstJhPO6TbsOVTND9fy
W0WdV0mfBWnvrZWwfoH27sJibTo/LC/Nrr1Kz33L91Ttaf1dLz9s+xnnI1qh
npZiwoVi3v38Y/+Q2Ta0O3Y9VctrVZ+x8H3Dcq7i+lbZOxeLDVQi7h6Udh21
+mF7H6Z7hPyG//4qTd631TrSuzd7L2h9V62GiHLULFfX749Y7ptSanurDeO3
PazWbFI/rLpE/viT4bp99Tx3kjzj/XE/9N7dz0m0c6tS3qra28oBMC+Q5B5o
fjhuTGurm2o+yvoBJWkjCnkjze+PY1LLOS7S+OE056rlAuq3ilqWtZX9Z5Tl
rh0TE1e3c9Ge737NuCT97Pycrqj6PP6xGI8ftjotcftuNb2S3CvUjrBztFLf
A52nur79+kvN8MM++g1U/8ziFuE2ely7XbXZKv3udr34+W/mh+M8n+171Hgo
UfOH26v1vMaSoutJ/Wz9Wiu15JNW88N+X8eosUZ8lC8Uvjcl9cPW1vPzP8e7
7jjS+OHwdVPp/h7nf9KS5JhpzAG1J/x300nGj6yXH077HKrU5kl7b44j7fO7
lmed1TzXcfBzpaPewcSdD1n4Yd3v7XkctU67n1fzw7X8VtXGH670LEh7b62E
YmvmoZUzbX1y/faq8jAqPfeVF2Cf21hJ5oej/IliyEnbgtZmivMR1m7Kuv/w
0NCQ++1lF5EvnRF692nnYFy9KLUP/H7wNt3axVHjKul9ut3PkoxpEncPSruO
Wvyw7rd2DML1E/z7XxI/vH7kmpentZw0iz1pLDu7V9v154+Bas9f9d8ML9dy
T5L6YZum3KbyvoVqPYyXNM945R4Gz4RDxj4TrEal/zzV81Z5COGaC37uXrUx
l8wP6z4djv/J01gup9W/9eOFUeOgapryBe0ze7+he21UrTJtn+a337gefjjt
uerXwokaV8Nypnw/rPyo4Bz+9MGjam8L/V2uX+k9321aVL0p7b+Og/97WSw7
yvP5dfLS+OHwOGH+8Yi6t9m4UXHvS3z8mqbh2lw+9k5eHqKW60Sk9cM6J3S9
hOunCPNC/jln7fZw31F7N6LtDf/u/vWisZVsut1/o+7Plh8jbFyztO3Vel5j
cWhfdfyiYsBWK6aW/jfV/LB+Lzt+6nsZl0No12O4vZbE29k5HvZp4113HEn9
cNr7e72eYVHHTNus7QkfA7Xx7VqLuxZ94q4rkeYekPY5VK3Nk/beHEXa53ct
zzrbb/025rHj+rbGnQ9Z+GH9pjatKxR38J9lSfoPp/2twudVmmdB2ntrNew8
0HsNa6+G+1dYuzcqPmN9s/22iNpmwTPJq7Fl2Bh/Sfyw5cNE/aZ+/62s+w/n
58513T09+OGM0DsZO0ejxtrTPcrPq/Dr0Pl19dRP0eImun4sbqt7dJL6FHH3
oLTrqMUP++MwW16frcPf9yR+WPjfCfd98XNYwn1c1C7XdMV2/RiUxjO176T1
wzou/nGKer7WSppnvN27dJz9d5/++NP+89T8kp9PLqzNHjU2Qxi/H428kvWR
1/f8dqLvuew9onIk9f7Cpst7WNvIchHUnrM2pbbT76dtzxphPrQefriWc9We
TfrX6rDr/PLH3PSfQXqe+j7H+vjqX7/Pkf98t5hyeExf3T9s/G0/rqj+DTa/
7+v1f38MnyR+2K8JFn7vYfkl/r4LP97h12xPel3rO36bQ+vVWLv2uZ8/3Gg/
bHkg2n+/Np/OCdt//zlvfb20P74HUBsx6nfX9eKPweHvm/9b+fdnHWv/vLP5
07ZX63mNxfGY12/Pr0OvfQnnQqShmh/2z12h88ePQ+r88uO4ej747dY4P6x3
D4qD+OPD6Pqs57rjSOqH097f7Z6n2kX+/JpH+6lzOS5fwifqmNmYM7r3++P6
KkYVrgdXibjrqpZ7QJrnULU2T9p7c+R5mvL5Xeuzzo9jCssrCRN3PmThh4WN
Fxq060rtLcU17djaOZTkHpL2twqfV2meBWnvrdWw2p1GVH6D5SCFn/vypPab
+vvn1y/zvYmuA5s/iR9W/nW151T4OZkFw8PDLpfLuZ07d2W6He2M+g77fVR1
funaC4+97re/DbuX2z3F74evcz5JnpGodA9Ks45a86X9+5n2W/tv9wr7N6kf
tvq8IhxL8vsGhY+n309L+6nnqj377NpP64eFP/aa/Hi96mulecb77+DsmWHn
l+2b/zz1x43Vual8RXseCL0jqLZ95of981jr8NvwfqxLKNfH7xOl9oh/voXH
y1C+sn8u6vj66/P7m9YrXzrtuarnmb/P2ic75vYsCPfp8fsc6jPFkGwZ9h3/
+a5zyveL2i4dK/uO1ufHaBWT03bY/DqX7HzSOZ+mHWptXEM+xN776Jnv/576
zP87Sf1zQ+Nzh/sX6nzy90OE40ON9sPyrf4+6XxQLMC/d1h8NrgH/eqqUb+t
37/aH0/LzhX/3PHHixP2mf9O1T8e+txvT6Vtr9bzGquE9QG0c0S1dPx2kvrB
pL0/JvHD8pj+Oya731ks3v8d1odqXvrnvY6L4X8vfG7Va91xJPXDae/v/r1F
57qNHeePDRf21pXuFf62WD9Em67rT77s5fh5dC3CMJWuq7T3gDTPoWptnrT3
5ijSPr9rfdZZXNiWG/fOO+58yMoP6xiH+1cLbaflmCTxw2l/q/B5lfZZkObe
mgR7DoioMQf0e1repO2f/0zVee7X9tV7OX97dK8wX5/GDwt7Bx/1nLJtyLqe
Vj6fdz09PfjhjNE7P72XiXqeql0Q1z9B6Bzyx5UP6jMeflyqsUms70hcOybp
OuzZltYP6zpV29jff12Hul/YeuNq04Xx6/qH2/N652efRdUw0ztfv3aCtkee
zd6r+TV/7d7j10CNmiYU17dlaln1OGfi1iWinvH6rcJ+Qp/bO+Zwu0P1e/z3
NHY/TJK7Jiy2o/cO6hfgH1ed05YnHfX76dkW/h30bIjKQ1ItCT3D/HNH5194
7MhK57jl0ke1EepxrqqvrP8cEmoL6xy0/QuvR+9R/WtO8+h3tfE6w893HRtt
V/g31vM4qr2lNp/uOf5x1jmg42/P9CR+WFx06TWjluOP+6D3Zfo9rU0g5FVU
RzntmNyKA/vvI5LcJ9NeJ1aDqpof9t8D6p2XPJ1/Tuj/+o3C/UP1LkJ1jGze
cI175eQoR8Vfltq/Nk63T3ks1EX3jYpHCi0jXHfaanKl8cP1usYqoXaoxqgM
13aSB5GHSrMsw/xLkjGrlcscfv9s6LhG5fX444eG0W+q80jrrnaO17LuOKLq
71refDiOneb+rvvH1444vjyf1cVWu8WWoX6S1bbPjll4W9Ru0Ds/f1s0j/pW
RtXAj6LSdZX2HiCSPoeStHnS3pvjjl3S53etzzodazt+4bGpk5wPae8vUefm
eJ7T8nI6D1U/wuKf9ryMq+s4nt8q6rxK8ywQSe+tSfDfCcXVINQxkjf190/X
in7DqO9orJbwtanttfFik/ph3eN17fj3Ou2ncsVsbIWs62kVi0XX3d1NvnSL
oGencv51j1MbOs14A8rJ0P2lEWPdNmsd2n8t329PZ4FiUbr31ToWYiujc0rn
WNKYg35ztQ2ivGgadM4oBy6qlkMcml/5w0nON91vtV+11KKthVrOVeUDykcl
PfZC+5P2XNRzV99JMjaWjq3e09uYkONB+1fpPFGfqDT3tDjUT0ttEMVLVdej
XmOdjxcdS+2jqHbO6vdU+y7cV9j/XL9LJT9gbSjr06bjr7i1n3daT5pxjcn/
6RpJOq5bPX873ecUi1Z+n84vP1d2oq47zf1d56q2y78X6T6YtI9jNfSbK880
zTMiTLXrqhbSPIeqkebeHEXa53ca/PcpcbWAq50PzUbxVvUb1lh8Ubl31nc1
bhy7Rv1WaZ4Foh73VqvRldT76zrz49WV0DNF94l63Jd0LamNndU5E0VQX7pQ
CPKl8cMAAAB7D2E/DABQC/K2lmMSV6u5FdG7Ub/ugt4h6h2N4ul+7RcbU3ei
YrlmcXkQUBnlSA8ND7ve3l78MAAAwF4EfhgAxku4r16avnatgNUbi0O+uJF5
k1ki7+v3e0gyXgOMxfoP9/bghwEAAPYm1CddNViqjWELABCH4sHqy6l+vxr7
O+vtqQXVGVB/b9WRkLdXjQrFi5P0a9+bUU079b/WfquudrP7mUwULF+6l/rS
AAAAAAAA0GaonpbqS2e9HQAAAAAAAADNQjHh4aD/cM+Eza0HAAAAAAAAiELx
YdXT2rmT/sMAAAAAAADQHig+XMgXRvww/YcBAAAAAACgPVCOdBAfzuXIlwYA
AAAAAIC2QfWlqacFAAAAAAAA7UaQL10ouL6+vsy3BQAAAAAAAKBZ+PFh+g8D
AAAAAABAu6A+w3vqaeGHAQAAAAAAoH0I/HCx6PpyfdTTAgAAAAAAgLbB+g8r
X1q501lvDwAAAAAAAEAzUEx4eHjI5XI5t2vXi5lvDwAAAAAAAEAzUHw4n8+7
7u5u4sMAAAAAAADQVihfujeXy3w7AAAAAAAAAJqFYsLyw8qXJj4MAAAAAAAA
7YL6Dw8N7ek/nPW2tAtPP/Nc5tsAAAAAAADQ7qiGlvoPT5kyhfhwnfnx6Re4
9330i+6iS64pT/vKoT9w7/3I/u7nF/66PO2zBx4WzDd3aEHm29yqfPK/DgmO
0T33PZho/idXPBPM/8FPHpT5tiflxFPOCbb511f/dtzL2rhps5uVn+8md9/g
Ft672G3dui3z/QMAAAAAaDXkh4sj4w/jh+vL9048I/C+Z19weXnav3/iS8E0
+WKb9tFPfzWYJv/SrG279c4Z7pqunFv80KOZH6ckyNfqGC28+/5E8/9+6bJg
fvnLrLc9KYcd8+Ngm395Wce4lvOj084LluOj43DDzXdlvo8AAAAAAK3Etm3b
XaHkhxl/uP5E+eHZc+e5U8640D30yNLytCz88H8d/J1gnVd2dGd+nJKAH07G
SZ4X1juXH5x0lvvoZ79WnnbTrdMz308AAAAAgFZB8eHh4eFgvCXGH64vUX44
CvxwdfDD1dm8ZWuwv1rG1BvvGDX9i187Kpj+tSOOz3w/AQAAAABaiUI+7/r6
yJeuN1F+eNptA8Hf8xbcU54W54cff+LJoJ+x5g/7QPUJveDiq9yhR5/kLr/q
Ovfgw79PtE3F4YXB8j78qa+UY4j6O9xnVXXWtM5fXHat+9Z3f+TO/cUVQf/m
tP1Q16/f6Cb99ndBDu+3vvtDd9b5lwe52nHza5/l0bVOxTpnzRkOplfyw4vu
ecCdc9FvguWfcc7F7tGlT9Tkh9Ps868u7wiO26pVa90d/bPdST89P/CaSx9f
XnU9q1avdbnrb3Pf/cFpwTkyJTctyNOo5Iefe361+91Nd7jjTj7bHXPC6W5K
37Sgj7Q/j/pWv//jBwZ9rcPf75pyfbBs5etnfV0AAAAAALQK8gDqP9zb25v5
tkw0ovywPJumXXbl5PK0KD/8xLKnyp71q4cfF8T4NH3Llm3l2G6YE075edVt
kl+M+q7WZfNoXXHr+Pjnvu7WrF2faP/lLT/86YMjl3P40ScH++LPLx8cNa98
cZwftuMZ5qJLr0nlh9Pus8VhVTPNn9d/zxF3TKLW8dkDD3df//YJkX74trtm
Rn5HdJZ8bpL9O/VnF5XXk/V1AQAAAADQKgTjDxcLQb501tsy0ajVDy9bvqLs
hRWn9OOTRx13WjBdcUDFL2+6tb/sdYRixZW2acmjj7vbp89yn/jCN4L5FWvU
38X5dwef6/2IbaPWcfrPL3a33DEYxF/Nk37hK0eW/Xkl/vOLhwbza12q3aVt
lWe3bdU0m1f9qm36gd84JohnCv3f93++H1Z83KYf+8Mzg3pRitv6/WWT+OFa
9tn8sPjcQUcEHva3vTdVfFfwzLMry8vTNl78m85gm7Xt/j76fli/i63rS988
JvC/3VNvHvUeQH650v6pxrTNu7fkxwMAAAAANAP1Gdb4w1OnTiVfus7U4oef
fOqZckz1yB/8JMijtfnkjczXzF9476h1dY7kw8o7yd9V27a4/sPKD7Z1zJw9
NOqze+9/KLJ/ahTK79X+f/9HP3Mrnh493vKRx55ajhHbNHlKTVM/V3+f9X/r
++r7YXlTm6YcbH/5Wp/V8U7ih2vZZ5um2H3SHHKLzWvbwsdEefFRftj2PXxc
/OMobx21vk2btrijTji9vFzlZyc5NwAAAAAA2on83Lmum/rSdSetH+674bay
F5aPDHsX9fHVZ8qrjVqfYpv6PElf4jg/fGlpuzTdHw/KR9ulz08586Kaj8v1
0+4cyd09rDzN/KX6AofnlycN++F5i+6r6P9tP5L44Vr22bZXfYeT7veXDzk2
+I5i2OHPtA/2+/l+2Kapv3j4O4o323FRP+3w5+rTbJ9fNYn+EAAAAAAAUai+
dC6Xczt37sp8WyYSaf2wT7hvrbB4oFDNpDD2meozVdu2OD9sNZ2UMxz1vSuu
3dPHV99PcgyUy/vDn5wbxDc/tf8ho/ZV+dSaRzncNk0xzfAydCzCfli51pX6
w6oOV1I/XMs+mx9W3a6k54PlSk+fkY/8XDnZvh+2mmAiLj/d/PLswrzYz7oS
9jEGAAAAAGg3FJfK5/PB+MP44foyHj98/I/PHrM8P29YXieMTU/SRzTOD9s6
1Lc16nuqi6zPVWOq0vLla8O1ruQhzRP6ftjylSt513KcdMQPn//LKyvGdO9f
/EhiP1zLPtfih8uePiLWK8L1tFQLvNo+WF9p1Z72p2/ctLm8PsWRs74WAAAA
AABaEeVIq7606mmRL11f0vph1Y5STSbzMeHawVbLWGMXjXfb4vzwKWdcGExX
na2o76mvbrjvbxSqnWX7ofiqxlGyz9QP1/fDa9euL88b7lcrnnt+1Zj4sOpd
BX1nS8cuav3KPU/qh2vZ51r8sMXwVQ8r6nPztuaH163fWPG4qN+yfa4xpvzP
1Nf4ut4bXc/UW+gzDAAAAAAQQ1BfulAI8qXxw/Wl1vrSyi82n+OP39N7/a3l
XOlwbSUhb/bAg0vc2nUbqm6b+eGLLrlm1HTzkdomxRj9z+SrlJ+szy+9oqvi
8k885ZxgPvWZDX9mNabNDwvrN91x3dQx81utMN8Pq+6YTXt4yWNjvmO55Un8
cC37XIsfttpWys8Of+bnjPv9h80jR42rdOfAnMT7CAAAAAAAY1GO9NDwcDD+
MH64vtTqhxX3s76kyi9++pk9sUF5QPNhGqPH72NsXjnOH4ZRXWTNq1xhv2/q
kyteXoc8pfXn1Tb54zopH7nS8uUdLX/bH4NI4wuF86XFcSefXfZ2qpVl0/V/
f2wjf7wl5S9bHrNiyJom/2p9i5N6xVr2uRY/rJxmW5a20eK22nbbl7Aftth1
+LjIP1sOeVSsXstUvTKN2zUwq5j5tQAAAAAA0IpY/+HeHvxwvanVDwt/rFqN
RWTeV7WYfK+nzyy2KpRTnWTbzv/VVaOW4/fDnTm7MKrfr+pg+Z5U3rva8v14
p5C/t+00H+f7YcVltR6bX8fEjovGJ7L1+35Yvt/fLn3flm3+MmnsNO0+1+KH
hfl+Ow7hfQ77YXlyjTts8+gY+v3N9f11EbWl/Zi6zrmsrwUAAAAAgFbE8qV7
qS9dd2ycHtV+smnf+u6Pyn1qbZrlxKqulP99jTFsnkZxQpt+063Tg7iu79fk
nf1lVkP+UzW7bBmKI/qf33LHjKA/s78OeVr1b066Do2XHK4VppxhixGHa0Mv
W74iiHWap7V5FJe1dwO+Hxaz584b5Rctxqtxm9LmEqfZ51r9sN5r6J2F/w5D
+6b+1lbn2vfDQn5XPto/lvq9NJ5wXK0svY+wbbx2cl/m1wIAAAAAQKuielqq
L531dkA65K3UX3g89YMVf1y1au2YfrP+5xrPOGocpKQ8v3J1sJ1RY+RGoZwF
rfO551cnXseGjZvc4oceTbyOasdkvPucBNUYe2LZU6m+o7pay598OtG88tHU
lgYAAAAAiEcx4eGg/3APdWgBAAAAAACgrVB8WPW0du6k/zAAAAAAAAC0B4oP
F/KFET9M/2EAAAAAAABoD5QjHcSHcznypQEAAAAAAKBtUH1p6mkBAAAAAABA
uxHkSxcKrq+PMVkAAAAAAACgffDjw/QfBgAAAAAAgHZBfYb31NPCDwMAAAAA
AED7EPjhYtH15fqopwUAAAAAAABtg/UfVr60cqez3h4AAAAAAACAZqCY8PDw
kMvlcm7Xrhcz3x4AAAAAAACAZqD4cD6fd93d3cSHAQAAAAAAoK1QvnRvLpf5
dgAAAAAAAAA0C8WE5YeVL018GAAAAAAAANoF9R8eGtrTfzjrbQEAAAAAAABo
Fqqhpf7DU6ZMIT4MAAAAAAAAbYP8cHFk/GH8MAAAAAAAALQL27Ztd4WSH2b8
YQAAAAAAAGgnFB8eHh4Oxlti/GEAAAAAAABoJwr5vOvrI18aAAAAAAAA2gfV
l1b/4d7e3sy3BQAAAAAAAKBZBOMPFwtBvnTW2wIAAAAAAADQLNRnWOMPT506
lXxpAAAAAAAAaCvyc+e6bupLAwAAAAAAQJuh+tK5XM7t3Lkr820BAAAAAAAA
aAaqp5XP54Pxh/HDAAAAAAAA0C4oR1r1pVVPi3xpAAAAAAAAaBeC+tKFQpAv
jR8GAAAAAACAdkE50kPDw8H4w/hhAAAAAAAAaBes/3BvD34YAAAAAAAA2gfL
l+6lvjQAAAAAAAC0GaqnpfrSWW8HAAAAAAAAQLNQTHg46D/cE+ROZ709AAAA
AAAA8DLr129yt9wy191wwyw3e/bdbuXKtZlvk7jnniXl7UrLwMACt3z5c5nv
gxgaHHQ9nZ0lb0z/YQAAAAAAgFbigQeWBh7y5pvnBP/eccdQ5tv0zDOrR7al
6GbNursqtu3+3/LSmzdvzXQ/FB8u9ve73sAP038YAAAAAACgVZBflG+Uf9T/
FVeVr5QfzXK75s9/MNiOpLFqeWDNb38/9tiK4O+HH16W6X4oR3pocCDww+RL
AwAAAAAAtA7mGxUj1t8WK87aD4f9bdr5Lb5s+5UVqi9dHCj54UmTMv+tAQAA
AAAA4GWUjyzfqD7E+rtV/LDi1dq2pPO3qh/eky894HKTuzL/rQEAAAAAAGAP
qjclz6jcZJvWCn5YedvWFzjpd1rVDwfjDw8OuJ7OSfQfBgAAAAAAaBHMQ/p9
dM0Ph1GNrWLx/qbUp6rFy7aqH1afYcWH8cMAAAAAAACtgTxwVAxWPtJyqKPQ
eEyN3rZaamG1sh/ODw64XNdk6mkBAAAAAABkgDxm1Fi+acbotdrTjd7WWnK2
w37YcsGz9sOKCRc03tKkSUHudNbnAQAAAAAAQLsRNT5vWm9rnrPROdO1rMe+
8+yzqwIvbN7d6oRlhWLC82bOcLmuLrdr14uZnwcAAAAAAADtRjg3Ou14RkJ5
1PLRjd7WWrctHPv264RlRRAfnj7ddXcQHwYAAAAAAMiCevjhtDWfa0U+VutS
/a7Fix8bQziP2voKa9uUH61+x1nHhX2C8Ye7GG8JAAAAAAAgC8brh63+VjNi
rsqTtnznKMKe3PYl6zGTo1BMOD/QH+RLEx8GAAAAAABoPuP1w1nUp5IHl8f1
Ce+H4sDNilvXgvoPDw0OBn44620BAAAAAABoR8brh2up+dyM/bDcatXPzvoY
R6EaWoX+6W5Kx7XEhwEAAAAAADJgvH7YfKditq2yH8qr1t+qpZX18Y1Dfnh4
cMBNJV8aAAAAAAAgE8brh2upv9UIVN9a4yjr/xazVv2srLcrjm3btgf1tHo6
qS8NAAAAAACQBXviqEPusceeDsbotXpV+n819J1W6aNbKNwfbMvs2XcHvlj+
uNHjIY8HxYfnzZzppnR0MP4wAAAAAABABtxzz5LYes1JybrvsFD9LH+sYe1X
1ttUjWI/9aUBAAAAAACyRH1/lWOcFtWqaqUYrLZF3lx50q20XVGovnRxcND1
dnZmvi0AAAAAAAAAzUIx4cLggOvu6Mh8WwAAAAAAAACahfoMa/zhvusmky8N
AAAAAAAAbUV++nTXPakDPwwAAAAAAABthepL93V2up07d2W+LQAAAAAAAADN
QPW0FB/uwQ8DAAAAAABAG6EcadWXVj0t8qUBAAAAAACgXQj88MAA4w8DAAAA
AABAW6Ec6UL/na7n2qvxwwAAAAAAANA2qP/wlfu/2Z31ib/CDwMAAAAAAEDb
IA985QFvcWd98g3U0wIAAAAAAIC24uoD3ux+VvLDWW8HAAAAAAAAQLNQTHjG
lKvdpPPPCHKns94eAAAAAAAAgGYxNDg4Mv4w/YcBAAAAAACgPVB8uNjf73oD
P0z/YQAAAAAAAGgPlCM9NDgQ+GHypQEAAAAAAKBdUH3p4kDJD0+alPm2AAAA
AAAAADSLPfnSJT/chR8GAAAAAACA9kHx4cLggPv1Cd+k/zAAAAAAAAC0Deoz
PKO7w531qTfihwEAAAAAAKBtkB/uOuID7uz93kA9LQAAAAAAAGgbFBO+6ot/
7c785F8FudNZbw8AAAAAAABAM1BM+JoD3+zO/uQb3K5dL2a+PQAAAAAAAADN
QPHhKxUf/gTxYQAAAAAAAGgvrjrgLe6c/d+Z+XYAAAAAAAAANAvFhK884K/d
5ccdTHwYAAAAAAAA2gb1H776gLcG9aWz3hYAAAAAAACAZqEaWqovfcZ+f+VW
rFjhli1bDgAAAAAAADDhefrpZ9zVB7zZnb3fGx1CCCGEEEIIIdQu2r17tysO
DLiezklZbwpCCCGEEEIIIdRUzZs5003p6Mh6MxBCCCGEEEIIoabppZdecsX+
fpfr6sp6UxBCCCGEEEIIoabpD3/4gysODrrezs6sNwUhhBBCCCGEEGqqCoMD
rpt8aYQQQgghhBBCbaahwUHXd93krDcDIYQQQgghhBBqqvLTp7vuScSHEUII
IYQQQgi1j1RPS/Wl++g/jBBCCCGEEEKojaR6WooP9+CHEUIIIYQQQgi1mVRf
mnpaCCGEEEIIIYTaTcWBAcYfRgghhBBCCCHUdhqaOcP1dE7KejMQQgghhBBC
CKGmaU//4X6Xm4QfRgghhBBCCCHUXsoP9Lte8qURQgghhBBCCLWZhgYHgnxp
jb2EEEIIIYQQQgi1i4ZnzAzGW1LuNEIIIYQQQggh1A5STHhocJDxhxFCCCGE
EEIItZ2K/f2uFz+MEEIIIYQQQqiNpBxp9R/uJV8aIYQQQgghhFCbqThQ8sOM
t4QQQgghhBBCqM1UKBRcX18f9aURQgghhBBCCLWVisWi6+npaciy/7Bzjdvy
8LFuQ/Ev3LriPm790Cv2MPxnwb8bi68cTf7VblP+VeW/g/k8xsxfE/u4raVt
0rYhhBBCCCGEEGpPqc9wIV9wvb2N8cPywvLBRmv44T3IEyOEEEIIIYQQak8F
frhYdH25vobU07K48Bg/PEIiP1xp/nHGiRFCCCGEEEIIta/Uf7hR+dK+Fw77
4Q3FVyX2w/X1wS+DEEIIIYQQQqg9pRpaw8NDLpfLNWT54XgwfhghhBBCCCGE
UKson8+77u7uhiy7kh+OolG+Fz+MEEIIIYQQQsiX4sPKl+5tVHzYamEl9MPh
mHGj/TJCCCGEEEIIofaV/HAz8qXldZP6Yf3rz29/JwU/jBCK07r1G7LeBDQi
fguEEEIIZSnVlB4a2tN/WLHiemujYrpeXDepH46LGUd+LyL+3Ip+ePv27W7m
zLmuq6u3dNzjj/VFF13m3vtvH3ednY2pcZaFzj3v4mCfcrkbE39n/y9+PfjO
0seeaOCWta7Ov+CSCXEezJgxJ9iPo44+MetNCTT5upz7/97zEfetQ4/OelPa
Xjon9FtcdVVX1puCEEIIoTaW+g9PmTKlIcserx9eN/yKMWMQlz+z+PHwH43+
u0X9cN/UaUHbTxSL82PnO+OM84J5rryys4lb11iddPIZ7j3/+tHAiySR3s18
+COfDb7z6KNLG7x1ralWPQ+mTbvd3XDjbW7r1m2J5r9r+oxgP755yHcbvGXJ
dMKJPwm259/e94mGvANEyfWhD306+C1a5V0JQgghhNpTxZHxhxuhsh+u4ovD
PtW88Lp5/69bN/9/l1lf+nuP9x0Zv6nwV54fHplW8syt6IcP/NIhZT983PGn
xs7Xqj5oPMIPp1erngd2Dj/55IpE87eaH37uuefdL3/1G7dgwd1Zb0rb6957
H3C/+MXl7qmnns56UxBCCCHUptq9e7crlPxwo8YfHuOHR7xvON+57FHzr3cb
577Rrc+/seRtX+/WDL/WrZn3Z271/D91awM//N/Lnnj90Gv3xIT1tzyxYsf6
//z/VlrPH7eUH1Z7z3yEsW1bdHytVX3QeCQ/rH1K64f1Hfxwa50He7sfRggh
hBBCyNfw8HDDxluK86Gx8eHS/zcNv9ptnP/akq99pVs779UlT/yKgNVDf+LW
FP/UbVzwmtH504EH/n/cBrHgj9y6kjfeUPyTRLW1mqVLLr0q8ASn/fScoN+i
/n/jjbdGzhvng/TuYmBgVhBPUXz58suvcUNDC2LXqTjYTTfd5n58ys+CPsnK
0d62bXuq7d6x4wU37ebbg76sWucVV0xyheK82PmVQ9vfP9Od+pOzg/24/Y7+
oK90JT+8cuUqN3XqzUEe6wUXXuruuef+mv1w0n2+7rd9wfHdvHmLW/zgw8H/
tX86tvfdt7ji/g0Oznann3GuO++8i4NjsX37jsTbJyU9pv55sHPnriDf/pRT
z3JnnX2RyxeGS9N2jvs4aB4t/9lnnxvz2UMPLQk+mzUrH/yt31V/mx9Wn3D9
nc8PV9zfsB/W8s4u7cPJPz7T3Xb7dLdhw8ZxbZf2rdJ2KAapz3UuSuqPrr8H
Sr+j6ZFHHg2mzZ5TCM6JW2+dHlyrOo+nTPld7G+8afPm4LhoXp0T2h+d78PD
C4Ll6dxKIp3vS5Ysdddcc11wTlx62dXu6aefDc6Vq66ePKoPuY6X+tv29NwQ
fH7nnQPB+vVb+0p7/Wu/1ddb59dpp/08ON8qvfNYuvRx1zGp2/3whz91vb03
Rs7rH9fVq9cG9QM0v+3PnDnF4HPNF1aaa03HRPv6s7MuDO41kzqntG3dAYQQ
QgilUzDeUj7v+voaky+9Kf+qUVTzw9vmv9HtmPf20rS3uVX5fUve9m9Lfvet
bs3QG9za4b9064pvcSsH/8GtLbyx5IH/T8kPv670+Z+69Qv+2G1aqOW/xa2e
8TduTf61keM3ZeGHfW939933uZtvuSP4/8FfPSJy/ig/vHbtOveVgw8fE2O2
3Otdu14ctQy1p6PmTVOfSj50v/32j1zOD3/008Cfh+ePmlfb/f0fnBzph+WD
o74jX5zWD6fZZ03TZ9d2TIn8jqaHJY8TNe/7P/BJt2LFM3U/pnYe/PycX0Z+
R30v5THGcxxUs0yfRb1XkQ8MtqvkXySdr1HLlWesJPPD3/jGd9zRx/wwchnz
5i+qebvsHNIxipJ8uH892fzf+96PyvNYjS1Ns3X7fOzjX3Dr1q0ftdwHHngo
cl90nI477pTE+RC6P8QdF723sd/OZNeZrg+7rsLzpL3+487tqPd2OkftmIY5
59xfjZrXjqv6B/vn8Le//f3gc9279Le8fZLtibrWFi9+uNwPOYxqFyKEEEII
VZLqS6v/cG9vY9oNsfHhiBpZq/J/5zYu/Lx7cdlJzq2/3L204Vq368mz3NpF
X3fP5N/jVg6/wa0u/pN76flz3Nb7P+7Wzf+TwB+vn/fqwBOvyb/Z7bj3S86t
vjD4f6v44UUlD2z+RW1f5Ulbe00xnLCi/PCZZ54fTPvUfx4YxAYVm1GsxZaj
eKPJr9uleIliPpp20JcPLW/H88+vqrrd1t/581/4atAmVixH7d2odvL69RvK
/vXTnzko8CyK39l2G74/UNzOph9+xLHullvuDND//e8k8cNp99n8sDj2+ycH
cXdt22c/92Xvt1lZnv+JJ5aXvyPPdNddg8H+2/LV1t+0aXNdj6mdB+ZjFOPT
/IoX2rH+4gHfCGLHtR6HNL5TcVnNZ8vXcvW34piVZH7Y9/2KqcqX2vHQ/vnL
SbNdimvasnVd+NJ5Gf49K/lh81xdk3PB+asYtk1XDNak61bzabq2VfFRi3vH
ne9x0u/q+0nFUqd0/y44R6K8bvi9k46n6pvpHJbSngOKS9u5rdwV3Ut0Hfoe
feHCe8rzK3Zsx0nxbJ2Tv7r4ivK8OhZRx1XrUE6EYuh6LyhF+eG015ruiZp+
5HeOC95R3H//g+5C75hWOz8RQgghhArFQtPypcvjI43hrW77s790u3dMcS+u
ON69eN9X3AuPHuy2rzvLuR03uG1PXejW3vMPbu3C9zu3c5rb9PDhbtWCP3Gr
gz7Ff1pa7uvcs3Pe7dY+/JPS/PNK3vodLdN/WPmKapcp5mlSO0/TfnPFpDHz
R/lh8z9qK/tSG1zzq80oKVfT2oHyTb6UKymvqs+UE1lJam9quWpPh+Nitj9q
h5suG4lHqa0dnl+5nVH+wOKNaoP740/p/5ZTnsQP17LPfnvbrzHseyvLr5UU
z9K0cB00Ld88dLVxkdIeU98Py1P6euyxJ8qfyV/UehzS+E6TrSNt/2Gh9yPh
7TI/I59V63ZZnPTiki/zZd73a1//9phpcX5Y/tCXPJz5MJN5WE3TOePL96PV
/LD23+YNj0WmXGyLqcb5YcWPfdVyDhx62DHlY6T3o770rkifyRtLeidiyw/n
OFvei7bVrin/uOq7YUX54TTXmvLpbfnhXHDlTOsaisrFRgghhBDypfGHp06d
2pBlx44X7I2btKbwZrf+oROce2mO2/zAd9y62fu6rQv+Ooj9rr77n9yaxV92
buUP3JZFb3HrFvx7ye/OdlsXH+22Fv6n21H4H27T0Gvclvw+btWcv3YbHj62
9Plwy/hh9e8z7+W3swdnzAmmKQ8zrCg/bP5AbUX1t42T+SS//exLcTl9rrhc
rZoxsu2K15gUm4lqn0tqG1sszfcHdlx+//vHYvcjiR+uZZ9t3dYH1Zflpft+
wrZ/2bInx8zf3XN9ZPs9jaKOqZ0Hcb+Vxd7tPUstx6HZfljXQ1jTp88sx1lr
3S71HQ57VsnyetW31FTJDysmG5ZyuW37TfKO+vt3v5sWuc+6rpP44bu93JEo
+R7T5PvhcH/aWs4BO7ejfKNyWdQH2n5ry0nR+4co2bJsfjuu/nntK8oPp7nW
/PcJqtEQV6MQIYQQQqiS8nPnltoZjakvHeuHS/+uLbzGrcu/zq0b/lfnNt/p
djx6pls9+51u3dAr3er5+7gthbe5rcU3us1z3+o2DJY8cvFv3JaFnwn87tYH
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
NlXcOzyPzae4nrW7k/jhtPuc1g+r3e/3BdexUHzWlqP9rVa/J+0xtfPA5rHP
/XcF8tjjOQ7hsWwV9zNPZ9sU9p1+H1It+4qIMcN8mR+Wt7VtD2+X701r3S5J
15D/vcc8P2Wqhx+WdF37NZ4M5RSr32oaL6YYv/+72u9u4z2n8cNpzwHFeeW/
7XP9Tv45p7/9/ATFjO0zbZf67frzX+S9g6jFD6e51tQn3983+WXFhXX/sHkr
3X8RQgghhKz/cG9PY/zwRuVFe5T98EhdrQ0l1gz/pVta/Ljb/cIN7sUtk9zK
xYe4Zf2fcStmfdStWfQt57Ze53ZvOd+tuO9vS3//R6kR1O82PHy825h/vVs3
/JqSb/6zPXHk2W91m+8/wrkX5mfuhy3GYbV/K8nGZrF8RatvfO21vy3Pozai
xvj1a8qYT1DNnbAUU1Nb09qF1i5WLChpfRnV2vFrHwvlRVs8U21UX9pGtYX9
trHaqopLqT0c5Q/UZ1GxHn+/tFyNtWLt3CR+OO0+V/LDlrusfqq+FHOSlwgf
E7W/k9ayTXNMzZfrPFBtKP8Y6V2I5UmP5zhIepfi/2bmmeLqVmlfbVxaIe9X
SdY3Wv1577nn/rKvtfNDccaofNe022Uyvx41dpJ0/fVj/bAtM8q3+WNSR0ke
XDFe+X47n3ROa/6o8cfipHux6gJo+5TvrevJ6j/7ftj6SVeqAZD2HFA/YtUj
838brVPndlTdPY2DruPse3htj/pv+Kp0XCW919Pn4e+ludYUN9b7Qn9b9H/l
zKxduy72GCGEEEIImZQv3dugfOlIP+zVmd4w70/dpgV/5jbd/Sb39D0fdZtW
nlPys7e5P2wadC+su7PkffNu51NnuVVz/j4Ye2nTwvc592Kv2/zI4SU//OeB
H940Emtel3+j2/LAwaXv3OpW5/fNPF+6UVq3fkPQ3o2qvxMltdEr1ZKuJn1X
ffaixo6Nk3JiV61anXh+5VerPpPVFx6vxrvP1aR2ttrlSX+DsGo5pjpG8kdR
9cfilOY4KA6q30DeKIkU35dXTDJuV1g6ftqXRmyX5RzIizVKyum/5ZY7R+Vl
mOQ3zcfJ11aS5tVyhOK6Ydk4a3HjJyVR2mtB55dypZNInl3nsTxpo5T0WtP1
oX0V1l8DIYQQQiiJVE9L9aUb0YYI+2HzoXtypV9R8rKvCdhQfJVbO/QXbs3Q
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
nGerp2U51CeX/pY3tpxnv/ZWNT9ssWHFluPW36jjWo+2T7v54SndfcF35Dv9
eGocihv766rmh40bb7xl1Pfkq+Wvq31Pfvrpp58vfy+NH16x4rlg/+69d/G4
jrXo7Pxt3X7DJN5IPu2qv3x9bO602HT77UHcWH7Y93ZxPD/lt4n88NPXXjvG
P99Q8t/yvP78vf/8z8Fnyt/W34Nf/nLZq4aXPffQQ4PPOt/2tvJy5Bnj/Ka8
dhJf2v3ud7sdI7nj/vbuHh4eMy3SD/flRvvhK69MtF7z/NWW37Xv292Wu+7C
D+/FZN1eAAAAmIgEfnhgoOnjD4f7D/s50uF6WvKzfsxXaP7CSOw3yg/LV/ux
53b0w48seczNn3+3W7lybcX1PP74k+6++x6quj3K21aur7yd/k7ih5cvf9o9
9NDvyxx2+JFlX3fueReO+sy287Of+0J5nn3/9h3upmm3BfnOSx9b7s6/4Bej
POpvfnN1eV2+Hz7p5FPdgw8+GuRQX3zJ5WP8tZ9zfc45F4z67LLLrgg8ufZX
8WTlhNtnX/3aN8vfS+OHtb477xp0d901c0zutfb9d9dPC/oW9/Xd4O6//+Hy
Zzom+p7Wa+vScde0hx9+bNznWBJvpBit/NT173tfRU8sFp1wwqi4biP8sLj/
1FMr+uHlJS9p84bjyfLImj7nkEPK08wPy0evvfHGUcjrh33p0l/8wm2fOTP4
fFbpeNi6lpx7biI/LO8bXo/NV8kPP3jmmWO+t33GjOjlX3+9e/jss92NH/pQ
efr0Aw7AD9eA+ky8//3/XrWvg+53BxzwZfetbx3RkO3Iur0AAAAwEVGO9NDM
Ga6nc1Imftg8rPoChz9TLFgxXn+avLLFiyX5afvMPLTlVUvh77eDH5aHs+nG
kd85uuxjjVzJe33wQx8uz/POd/3fwFOG17FkyRPu85/ff9Ty1K/2hBNPquqH
w3z/ByeUl3HFFdeM+VzxV389Ucs+/vgflT/Xdtl03w9fcMEvR31HXvr//uM/
lz//6U9/Vv7sQ//x0fL0M848e8z65FHtc3lj87Np/PDHP/HJ8rzy6ZqmHO0f
n3JaZCz6yCOPCvy4cqvj4tW//OWl4z7H0vhhed2o/sRZ+GGxftrNsX5YOcrm
IX3vrO/Y95/t6hzjhxXjrrTdUV7V99izRo5LNT9s05KuI269PnHL/8OCBaPi
3y8ODeGHUyI/rGvuXaV7ZJwnlhfeb7//DOb74hcPash2ZN1eAAAAmIjs6T/c
73KTsvHD8reWH13Nuyrma15X3wnP7/c/Vm51pbjwRPXDs2bly77t5+ec7y76
xcVlv3f0Md8vz6c+qDbft799lDvxhyeX/eJZZ59bnk9xWfu++tDKv331q98o
f7fefri/f+ao/OSoZfz+98tHxY9teiU/LK67rmeMj1b81feYcXW3/L7Mirlr
2nj98NVXTxq1H1qG/rVpZ511rnviiadi/fAll/x63OdYWj+svyt54mb64d+9
732B14vyw6L/S18Kpk37yEfK0+778Y/H5ErXww+rj3FwTErHptX8sFDfYfts
ZfcU/HANdHVNifXEvhfeb79PBX83Yhuybi8AAABMROSB8wP9rrerK5N6WsLG
EZZUP9rvI2z9gJ/a8nIdaqunFY4lW251+Pvt5IdVG1l/X9vRVZ6muLDijcd8
7wflaYoFaz75T5umWKRNVz0rTVPusP7+6Mf2C+KZNq9qX1WK4cZRzQ9feOGv
yp8fddSxscvxfaPlF1fzw3ff/cAYHz137lB5mjxv3PrsHYC45prOYNp4/bBf
v8vytxXHVu0t+XXlfNv3s+w/HPbDlTxxo/2wfKHv++456aRYP7z8178uz/dC
Ph9Mu+k//mPPdn/zm6PWZ35Y9afUX9jnoZ/9bIwvfeKSS4Jlqj/uvSMeWzxe
mp7EDw8f9V0375ijyzxyzjmJ/PB1f/f3Y7ZPdbSS+G29A9BnD/z0p/jhGony
xM3ywiLr9gIAAMBEZWhwIMiXbsSyk/pSeWKLE0vyv4u9eG9UPS0/xmzzKv86
6Tonoh+WD9zTLvvP2Lw+i6+qn274s9N+embwmdWcUuxYf0eNqWS51vX0w34u
9OlnnBW7HL8/sNVbruaH9V7Aj68qNqzccvtbxyzJdituq2nj9cN2bIWOpfpC
6zeLGtspSz+s8YWjYqdRntj8sN/ntt5+WH8vPO648jzqQxvlh+UJzUcuu+yy
wL/ad8J+vVI9LfnVsC+N4oYPftDtLBQS+eGo7ybxw1E83dGRyA+r3pc+U61p
/HDt+J5Y7xOb5YVF1m0FAACAiYhiwsMzZgbjLSl3ut7LT+NN5WvlZ8NjEluf
4Kgxk+SPzQv7fYnb1Q8/9tjyUV5Rn6t2sj8+rryu3x/WJ+z53v+BDwV/h8ca
Eubn6umHFde2z/3aVT7yi76vfeqpZ4Pp1fzwjBlzyp8r91vTFj+4JDL3Osyn
P/P58nyqfaVp4/XDign7x9zfDtXO9mtZZ+mHhWoTB3WdQ9PDnviu/fcP5q22
PN8PR3m3an5YedK/G6nvpRip1bX2/bBQ/ShNn/HVg4PYrcWA/xCqT21+OH/Y
YW5XyTf72HhJvi+V/1as2WKu6j/sL7OaH1adK8WEjSevuiqRH5avD2+f5X1X
8sP62z5bXiHnGj+cDPPEL79La7wXFlm3FwAAACYqQ4ODI+MPN7//cBJUa8sk
73v7U0uCvGo/fiwvHM6h3tv98FcO/npsbFYof9k8rT/d4p7ywZb/LOSp9Lnv
h0866dRRyIMqr/rW2+4K5rUYsPqxhtd/+BHfqbsfXrjw3vLn6s8cFSuNy3Gu
5ofVL9o+l5e36X7u9eLFj4z5nvoU+/Movq7p4/XDQnW9leMeNdayv8ys/bD5
3qg8aN8TK5ZcLTYslGds/mz1yDhDxvpp08qf6f9RflhsuvW2MXHTsB+Wf7T+
wjYGk/XxjfLDafsPL7v88jFx2iR+uNn9h+W/7TOrR40fHh/miZvlhUXWbQUA
AICJiOLDxf5+1xv44Wz6DyfNp34wlD9t/YVVZ6vW5TbquNaj7aNaWGpvnf3z
8yI/nzW7EHzu11gOo7F1ff+rnGH1DY7Llw6jfsdxnlcx1nr7YflfP2aq+l3+
56q5bOsV8vz2WSU/fMstd4zymuoXbZ/Jd9p0+Va/n7T47lHfK3+u9ws2vR5+
2Ecx+Msuv3LUdmp/9Znvhy//9ZV1a18n9cPyuIr7du27b+TYwnd9/vOB11LM
NOkyrSbzzR//eNm/KXf6js98puxhw17P98NiyXnnVfTDqqUc9swrrrmmbn5Y
WC0t/dtqfnjr9OlB/2ebrrGXkvw2zfB2E4Fq4y/Vm6zbCwAAABMR5UgXi0XX
m8tlni+dBOVHq2608Mcsnoh+WPm0Fv9V3Wj/M40ZbL7wvPMvKk9XDSb53OF5
i8rT5ImtdrTFMSxuLJ/oL/f0088KvJv1yVWfVuvf+vzza8rzXXPty3nN9fTD
IjzGsGLWyqO+8KJfjRofSsfFH0fY98M6Bsr5Vn9k/ztC9bL9sacUf/c/V+0w
1W6+8qpr3YFf+sqozzTNvuf7YcV3tb4wt956ZzBvlB/2Y/c333x78DspXmzT
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
ql4r4t/z5g5SZsq+jzjNbK2VzKcl1pLK08NF/YmVdZ7T/963LWINZ+0e0rzM
M3Xin8rW4+34J7RhXhuJ+oRjeuGfrI487awLk79Bx/vjB9U/FfHvZctBKz2M
/rd7i9txMeh/e65UWRsk/1Q1Nn94ZKH0cC8gD5rOpE8Hv0Ofkz8mTw/jOxmv
sPzk/UkZPQyUfT6jHMXHW92SmmPgoVxbuefclDPGTqlDrB/JfLT9xvyzlV00
F2O5+C3ynvlnfo8vveram7IxL/P96CU/BuDradKRPlL6Ga3fjmtYG4/6zJ6N
79Ed+BfG4Owcvq/X2o9Wp/Nc9BHaGFqq3UDb3n7Ds9EvSx1ix+JXra8Xv2nH
fvXoE7P3RP290277N67p68tP7/Pl7Dz2PB/42G6F+9msHs3OO1UvnnXegiwv
ee1JPWTHM8Zqn9PHyXtg3MDyjfelZZ8jhekQg35bxiJ5R3ZN3iX99fYb39fJ
HJUFi67M8gNzbOw5GRto593E+o80YIyY/m07Pl4HLwXtGDsH98gzkYd8/eqf
ydcXzCOjDIKfUwZeDzO+a5+jE2g7Ugb8XKJYD1tsFeWM/neejXdnx/Ou7Vj6
vKz8cU58BteINUkrPUz/uC///A22twtlz94n7TXaq7xTr/XJV63S3OYxxXE3
RfD5kHuxtOFZG3ltjzfWnmnmz/g+1d60dEOL4C8pL/SL2HmYv0m+JW0Y+7G2
Gn+jPSyPUobtN7SPGf8l5sfyP/nUx3J4f2b+Ff2AjjF/TZm18/v2pl2DMoMf
NC3A7/x4XSdljDJP+fVtvtjngdWBpDfH438pU6btSLOy772VHvb1TKsxaMZB
7Fjyr31epL25xv2WeIRuXTuPInq4qH/Hj5FHre3OWCx/dzK30q5LnWtt/rjt
Ayk9XMaf4C8tD/rzWt0D+Dz7nLFWy4PN4ta67Z/K1uPt+CfLE7xftDF938RG
+fqqF/7J9xlTz/BOSHN+a58zTm3HD6p/KuLfy773VnqYe8vy1E57tzwX92T3
4uM7BtE/VY3FS49ofenK8OMSlAOgbJm/wFfEsRdl9TB+ic/wTf5YGzvmWqmY
Fo8vV3G/kJ/nnKeH43oS32vfxf16lFF7fhvHpQ62z2jb+eO5d/OJVj/gS81P
xfsrEgNj9aZ9Zu1HzpOK143bDf5+qAvy7t/Sihgie8f+WHwOY3T41W6t1WX1
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
ev1ka/h1Stl61PpLebdoY9/Hbu2IvP0D2nkO0yF57RdbZ8rysO1dBkXmWJd9
N93Sw7ZGN3mUuszXP7ZuuZU3H6uW2qfK10Wmhy2WMa9txjXjdGVNMD7j3oqk
heWFvHlPlhad6GEfg556dsYQ7PvU3jsev2ZKs7YH6U0fN1g8XL/0sEG5YlzH
r03m25Z57U1bNzfvvVt58fnXr5ef+s1+020qi0Mt297sdhkrCu1n6i7zx+3s
bd1KD/s5d63accSCxG19n3eatTdtXQ+wNYW7ce08iuphTyv/3g89jB+1cSra
A7EebsefvDztf/HVFu9Lvcl31o5nHM7Gp8kz7TxTJ/6pH3rYQ5qQphYLGL/X
bvon08N5ms/yKnUef78Z/FMr/16UVnrYzzdrtTehxT3E6TCI/qlq6BvKxodH
RxUvXRGt9DD7e1mdZfmvsVZUYg6orV+faifY3k2MDVid4mMommFtW4jXor7A
xaYU1cPWdsfvxXuYkRctXsbWx7L1LvLKMGvksna07X9sPilVj3F+nhus/7Os
HvZ9nqn9jPmM89t3/Eu8VRzPRT+FnTvv2mUpU4/S1rDnYH6qP9ZrMtPD3XgO
789TcUW29rGfo2L1Y8oHo5dJa5sLVvbddEsPWz3GWkzxd1befP+Tjb+n0suX
KdPDvi5K7V9gsdFeD/u52Kl1v0kz0sL6eq3vOVVmfYx3GT2cmu9saZraV8n6
vorsL8b8ErsnfGlePWZ7gZDmlg691sP4NcpKqh1sbQ2f56y9Gc/N8uUwFcfI
Ppx859fCNn+W8q/8bXmPOTlWJsq0N7tdxvIg/cj3cd71cYBl91wqsv+wzXuj
Dzlv/3Huwdr1cdxSq/amX58ybjN3eu08iujhsv7d9HCRuYytsPRI7YuO77Xv
DT9/uB1/YmOilh/8mkjWL2hr87e7n2wn/qnXepi6n3cdr6UFNt7pz9VN/2R5
1+/va1C32fnoj7F8OWj+qax/L0orPcz7svQjxi5vjoAfy43r60H0T1XD+tJa
T6ta8vQwfpO+cN9XZ+NN5t/Bz/0lb9sYcEoP+3X4rI1c5l5tTAGYZ8I4tZWN
VN5v5p9pY3qfaHMo6cv1e8H4eBqrv6gDfL+YL7umr6gr7TO/5ym+w4/jtauH
wepMxqL9OkwcY8fb/BerV/mN3/eO/up47YhOKVOP8vyWZyz+ANBHPtbW2gPd
eA6vh6kv/Lws/978Whu2rk68lyF1keVBvy5cmXfTLT1s+2CwX5Jv97CnpD2T
18MHHjav8Uy+L4L/+/0ofHr6Pe6tz5Zr+X0QfLsPLWHnoo/I71fo5+aZviae
0D7jnPYcXMvPuy+ih/2aYPEaxxYfEj877SnLj0XW+QNiO+06pKlfMxB/4r/3
85h6rYefcPPeLd7M3pfFC3h/6ddDi/vTLUbIv3fw65/7tcv9+tLev/KvjRmA
lb2y7c1ul7E8TLfH69Bbfyp5peyafkX0sK8raZ8y7mN1Bddj3qPpy9SeBKn2
JuNv7G3n6zfqtHjNuE6vnUcRPVzWv9u6JOSPuF1OeaFfO69dn1feUnoYLNbF
8Hq4HX/Cmrn+fH4dpXgvXetTouzSh0SbIqWzUrTrn3qth3kOSzNblxmo+83f
eD/fTf/k67e8esavYTyI/qmsfy9KKz3s3wWwp5eP2UAv+zYW7ZK4P3EQ/VPV
ZPHS9XoYGxur/F6Glbz5fd4Xg5+3Q373czvJc+aPmulh8PuUptb2awZtab+f
n8EzWH9YUT0Mft8P81veT9Je98dTrvxcTJ7Fr/nk+x/BYq4tXdBNPm39WGM7
eph6zV+f+/drNdAWsDaC38ece+B69HW80c9XbJ2wIpStR30/B5+TTnZf9q/p
4W48R2M9ral3ab/Dr854l9G6uOQ9X1a4T65lv+defN90qXfTJT3s5+pwP9yv
5RvLd14P08ayuP4sP0/VIVaP8LtU+xPd6ssIv7dzWzsiHgchBt6O5zvqOO8/
aGf6402n233H9xi3k/KgPR3vM2nxb9Sbti6IvU8/X5FrFl3nk7zh9+S0/BSX
d9ZA8GOl/YiXtnUX7J6IYfH9CrQ/7FibB+mPtzY3/Ro+P8flJdZ2jfHh6bzL
e2Aswb8P395qp73ZzTKWh9/XFH9BGlv/F9DXVNY/FtHDcM73R2a8D9KOfmCf
huQvryXivMOxRlxvklZ58z86uXYeRfRwWf9uc0ftHm0OKf0u3mcUuT87Pk8P
c05fdrwebsef+HZ9PA/Mr1nhv2M8zD5vtRZRp/6p13qY9PTll/thXNjXWTY+
223/5PcTTdUzfO9joAbVP5Xx70UpoofRn36tTPOPFlfpnzm1R8Mg+qeq8ePD
mj9cDd6Hx1AuyPOpNVbxy7bXuffb7IvD//P0sK+/2u23oV6hLmLdCeuLtfWf
/ZoKtmZLnn8GxnYZT/PliHJlcXwxaB76ec1n27PSLkrFgxJbbn0F3kfE6+fa
+g2t9HA8N5bxa+oZX6/xLGiMOA6Jtkb8zvgd49WpNYbbxfaq8uO9RqoepS1B
feXfAd+TRpZ2Pr06fQ72ROA36JCsL9H10VAfMRaUWquB9OQ+43VeqMNTcVpF
3421AfPqQqvfWq11bOUgvh4x/zZ+wbq+/njqbPKz/w11GvdudXk83s58rNhv
4CfYt8muGd8XsYD4B/+OOX+8NyPQfiONvGbmWPr6bV34InoYiF/xdbSP1cCP
oL39+6ROZx2Xsr6Jss+ae94veP+Qmt9oa/YV1cOt/BltIb73aUpasqdz3MdJ
W4P2ZXwO5g/6Y/1YEr6H/OyfkTqCsazY95keJj8y39a/d8q0H6sBH1+YerZU
e7ObZawZvCffD2r5pN35JRYfVGT/zhtvHU+uNWT5xvYvjUm1Ly0vcj76j1Nx
qt24dh7mZ/0clVS9Vsa/o99Y68ye16/vseteByV9Xh52jpQvN3zMidfDUNaf
NNs/zsdN+b3n6Bdu1r7Kox3/VLYeb8c/kS5oOp9f+T/+IzU3tVv+qbH/71T7
ca/9D5+RHrQH43WnB9U/lfXvRTDNXmQNKvKNr6c9pGteDMMg+qeqwR9sW09L
evjNCmMwlPl439Q8LOYoby3APOgnZN4w7Vkfc2nYvMO8/ZNagSajX7iMLiSG
q2jMEmXbz5PsBdwP8Yet5uLTJ0m/WWrtjyqhzqJP1tdx/XoO6t5WayfFx9Nu
KrrnStF30y3YD5v7KxrLyX2R/22v2yJQ9mmDtNqj10PZpRwU1ZukGc/SaXpQ
/pqthUYe8mMR7UJ+oP+A9WNZ52WQYrXwVbyvInmWd9usPcKc2WZrlMTxLuZf
e5kevS5j+G7qulbttF5AbCR9gozZENdU1Ee+ma9dxr+Tv2iDxHPVi6x/2Au6
5U9ibH2W1LzXomk6iP6JMotPgSLlt1P/ZHrM5v5zPvo6fIx+t+m1fyrj37v9
7vCLjEUz34m+kqJ6oBtU6Ru7nY5LFt8aRhbM13paQ4CNH8V9xEVg7rKf70vb
Cv3Efhd+fmSRMTQhhBC9o9X8DyFEeWzMNm/9fVGMWA8LUTWMCZ+zwx+Fb7z/
P2Sx01Xfj+gNaF8fbxbPsy2K9Y3mgS5Wv4oQQlSL9LAQ3cfW0/ZrRonySA+L
QQPtsuiIXcK8978rbN36WuX3I3oDcf7Mb2AeJGtCdxLPwZwI5mNwLnyazXGO
5/IIIYSoBvY4YW5XO+u5CCHSME81XutRlIf1L/BPrfbPFaJfMD5864+vDsf8
y59pfFgIIYQQQgghxFDBfkvfO/pLld+HEEIIIYQQQgjRLxgTRg+Pjo5qfFgI
IYQQQgghxNDA/OGJiYlMD1d9L0IIIYQQQgghRL9gDa1arRbmz5+v8WEhhBBC
CCGEEEMDenh8fDyMjY5JDwshhBBCCCGEGBo2b34l1Kf08MKFC6WHhRBCCCGE
EEIMDYwPT05OhgULFmj/YSGEEEIIIYQQQ0W9VgtjY4qXFkIIIYQQQggxPLC+
NPOHR0ZGKr8XIYQQQgghhBCiX2T7D4/Xs3jpqu9FCCGEEEIIIYToF8wZZv/h
RYsWKV5aCCGEEEIIIcRQUVuyJCzQ+tJCCCGEEEIIIYYM1pc+/8SjwpYtWyu/
FyGEEEIIIYQQoh+wntaSW24Kx+7wv0sPCyGEEEIIIYQYGoiRvuy4L4RvvO/3
FS8thBBCCCGEEGJoQAOfs+O7wzHvf5f0cJ94/oUX+3q9DRs3hZeWr6z8uYXo
BZs3v5Ll8arvQwgxeKj+E3OJfrcfxdxDPjENMdLf2/GPpId7wFe+/u3wN9vt
EE489dzGZ5/c/YDw1//wsfDNE77bl3tYvWZd+Lv3fTy75vU31/pyzcuvviF7
bp61V9f48uHHZtf47vd+UNn7feFny7N7+Nv37ljZPXxoxz2ye1gycXtH58E/
XvPjW8LV192c/b1ixars/7csnsj9zcaNm8PYpdeEr3/zlLDP/l8NR3/rtHDF
NTeG557vT309PnlH+Ocdds/yNlx7w+LK3sObgVReKZN/2skjg0IZf1H0Oe+8
+/5w/Elnh7PPX5B9byxesjS8vGpN5c8sqqn/Ym6tLcvyxYsvrcjmp113423Z
32vXrW/52yefejY79o677uvb/faj/hbbSLURm3HS6edneXmHXT9X+b2X5cWX
VlbeXho04rqmKO//6G5ZWt5974Mtj43r+JRP1LvZBv65VquFkYUj0sNd5gtf
PirLc/O+fUbjM8uH7dY1tMHOvXA03HjreKHjH3rk8YZeOPmM8/vy3AsXXZVd
76M7f7Zn19hjv69k16B+qOr90k9radvL6zR759t9cJfs+rS5OrnGfQ88MuNZ
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
n/992WYNFe8PfPkq827yKOMbi7aH8A2Wn2LNBDYWzPnoS0idC+i74HhrI9If
7+dZGORt7xfRRnF+sPxva3PF5yBd47EuH8PlQduU0Vpl3lWe5ipTtsr4hRSW
fnlrXlge9m12+tRT10utZ2V11Y+uv3XWuS2mjf4H+yyua1L3GkMd0qkejn1i
3ruh/7ThT12br9P3MKgwPlyv1af1sOYPd5OietjyK/Mt0Wi0penDt/zFeBH9
MpQx+s/M1/A3/qLVuH4zPQy77nVQNu5EPUVbxj6n/9CO9z6L/k76LvGpVv45
n7WBuqGHab9ZmScuF1+CForbAb59y3iKPRf1BX2j3DdjlOZzfP9WkXRvlq7e
hwDtHvpIeX57z0Ba2W+4vl2XtCYNWc/zUKetaJ/asa3euZ0LaLswvnnWeQtm
rLtcdLyb9LZ3hibiffCu7Xv6PO2c7awpXObZ8yBfkAb7Tfe5c7/8DfTXl71G
rKHQZeQZykOz+2BM07ch6G+mz9XSPa+/12NtEq7pP/fvzvclM35gZY0xONar
tePI74z78P69rvd5uIgepp4z3USfdDzW1yqPNMOeizY7acx7Mc0Ivl/A2szW
LmIMkrSwsmB+qBN/0UlZgDw9TBuHMbVU+SvrBy3NeJ74ePPVF86/pOmzMC5s
moxzM37D2Cn61Pq3Mj+Y0MOZ35zKDxxL3kKj43vMv/F72ovkf8Zl7R0wlu7H
KsvUH/QB2bPxPe1CyqOtJQQ+PqLZvfJ9qv5Dj9hv6NdirJL2nh1LGTIfi461
Y7969InZe2J8iHrDrtls3PLT+3w5O6893wc+tlvhOfcpPWx5izQjXXkuntfK
MmWk2TlJO/ylPRP1BX+br7D6267BuD9llbLUqF+jeSqfO/DIRn6w40krOw++
MVW2OR/pT5yA1Sll3k0eZX1jmfYQ/p6/U2uiHvSVedl31u9KuvrntbrK9rqx
NqK1T3gXvF/S1z4/7awLG+dvpoetvDBGSRr6vgy/lhfvppE2U9dB1xN/Y3uf
GEW0Vpl3ldJcZcpWWb+QgvH/xvNN95/7OiR+17wP+4w+C8biidexNiXP6ePB
yurhuK4x6O+26xJrh48Hi7sr847a1cN+PMaX3268h0GFvJqND4+OKl66yxTR
w15jxPE3jO1xDh/f08784WZ6GL/q37v3F9b/iT+y42n7+HNTNqz9bH67G3qY
cVX7LB4HIm4j1b6lHzSVNqSrlV8bMyib7im8D6GNH/dbW4ym7/ujrWDPFceW
XDDl7+x81OdF3rn5Otq7vv2JjrF3RgxWN/Iz/QV2f+2sYdXOs+dhbQzSuJNr
eD1cZv1Z6ibyCPGD/nPGZlLtrRTEb3Oc1860k6xdyb+0Qe07yqNvC9GHwz2g
7317nPJsZdJrzFZ6mDEfG6/Z54AjSscmNoN+Cu6VNkVcnmk7ck3fL+DbkMxD
8MfbuLwvV+34i07x7U3KP5CeVu7Q5XG7qKwfpO21rXzPnHdgY8dcKxW357G1
57K0jObp+HnOKT1MPorjjMl39pu4X4w6xp7fxgnK1h/43yz9ptIy3iPT8oof
S2x2rxDXf/5+aO/m3b+lFfrC3rE/lvE/+nMoo71aqyulhyknfMZcIH8s/cGU
MebKFDm3vcO8+cOANvHf0S8V51HavnZ8XGeaz/XrIfuyHbeby76bPMr6xjLt
Ib8msG878DvLa36uUpH5w/h7+t38d6YJfb3fTA/zXHF5MX3m+/Loj+EztGp8
P/TdFNVaZd9VSnOVKVtl/UIe1idyxNHfmfG5pS1xEfZ8dr/09flj8Vv4d74j
LiVO7zJ6OIXFcFDH+PzL/3290ys9jF+3v3lH/nzdeg+DCOtLaz2t3lBED69y
+y/gu1vVq93Ww378ybCxBPMB/C6u0zz4ceLdLIaqG3rY6oKURuEeTC/49q19
llrPlTl5Pt3KpnsK70NS/s/3N1q9ST3G36nxHjAf689XRA+n9lU1v+/9dSdY
LHoq1o9YdN5fCotTb+fZ88jTw2Wv4fVw3pzUsljfS5H9kG08zWIcbeyHOWik
M20cO9bmoRXp37BxCvrc47yS0sP075oWRrP2s2+UPvdY89n7jdtJYOs9+3ZV
O/6iU1rtt2RtTt8vU9YP0o9g5/Ix0+YT4tiCFBannFdnWBsmpYd9/jHMl+bt
GUj+8c9Ytv4wv5XyaXauGXVFk3uFuP4zPZO3ho35ENrH/M3Yt70D6rZm86O7
TUoPWwwTvqGTcRh7pjw9nEofrwUt1or3lKevwMqeXcfKdmptibLvph1SvrFM
ewhM9/iYadO9+HSfz4vo4VTaWbpSZ9lnzfQw88Djcxw576SGruJv+szt/aX2
OGGss6jWKvuuUnq4TNkq6xfysGvGMcoWK236z/ut1HmIOeB7v85it/Sw5Uf2
2sx71l7pYcam7frEbfTqPQwiWbx0vR7GxsYqv5e5RtF4aR8zA8Sa8ZvU+FK3
9XBqzSdrz9CO4m/rw6NeKHK9buhh0wl5+wrYekrWvn3S+XHa0Pglj33nfWCZ
dE/hfUjeXpLWFrD5nq2ey/pnGdMq8s7N16Xil6m/+a5oPGsr/L51sXbMm7sJ
zL9s99nzyNPDZa/h5w+XTQ/a72gD6gf6c9HBfg5YEV1vGpc1pvibcVn+pq1h
9Y6VUXvXT7r4LGISiHXjd+Rf8rqfJ+rLWzM97PHz1boN402Ma9E+Y5zCX9+3
K+z9EoMVn8P3MxV977G/6Aamh20dHkAj4M9oR9g9+diRdtZRSPXxWJ9Lq7mr
YH0FrHOU+t70bUoPx/EPYHEv8VivYTGG5v/L1h8+hjv24z5+1fRzs3uFuP67
0MWJxOf3dYX5TXyd/5z7I86U54zHR7pNSg/jG3waUd7p06Bfqch6Wob9Pk8P
2zhZ3u+szrP+lFbpadoxz3e3826aUcY3lmkPwemJPiHT2WhQ//sietif27B4
LN9maaaHU+svmmazd0msDX8327/Y8lYrrVX2XaX0cJmyVdYv5IHmbjzjdMx0
auwCf8Lf1O2p81h8F5iO74Yepv1p52WuS/y937OtF3rYykLenI5uvYdBxI8P
a/5wdymqh/FLxBWl1rlgjQsfL9FtPZxae8PWJTEfTTsqbi81oxt6uFHeozke
Rrw+jo/ho7zGNNoOrm4pk+4pvA/Ja4fYeKTNIW71XFb3sjZkkXfebC19ix3u
lh72fjjVb+nx87fML7bz7HnktanKXqNdPYzu8vnK8p1fH6aIHraxUZtvRhmw
e0Ej8x16hRhg/s/7tt/Sl4/W8vdgY8qpNl9RPUy7rhv5xUO97ufU2736/oOU
Hk61mX3eKvrey6ynVZRW62n5sV3Tre3oYebk8bnpSeuXiseh8rA+INa9SX1v
mquoHrbnzovBsDa4tafK1h9xmUr5cv61+qysHib2okhd4fMe80Pwp6ny0q35
KM3eTby+NLqNcpryQUXHjO03Zfdbavj1aT3s4ySavS8bJ2xWttt5NynK+sYy
7aFtZfsNH4R+8rHS8bhru/stWZumqB5O5X/ifvjO9LDXcKk2i4+BbqW1yr6r
vDWbipatsn6hGfTJcrz1XXCdbW2sN/pfrezlxcF4DW3avRt62N57szX3ivZZ
QFk97PFr3/TiPQwalONt62lJD3ebonrYQ9wuezJZn/42n/BGbFAVetjiE33s
ZjOa6eFU7C77GcT1hfmVvP0CTGda+9bWrYd2Yp9bpXsK70NSa1bRZ2jfWx1p
6+PkPZeNY/k5G4Oih/31WsVgM3fQ/KJ91s6z55HXpip7jXb1sOVP2oJoY9+2
KBP3/fJ03D5ly2KN8Bt8ZxqYuTgWR+1j4hrzaKd+S7vHz+m2MlxUD7NOB2Oa
ll8vaLFGU1n8Gi70/fsxbssrnejhsv6iG7TSwz4/0nbk77J+EOiHsnYGMdM2
HzqlqVOwZoLl1dT31p4uqodtPaH9cvwK63XxvcVyl60/bH4jeabI8WX1sM2n
Js+0895Z1w7/4fVW0f3iylJk/2HGi8kT9pxFYxXt3jvVw6xrzN/4oyLXbVa2
O303RlnfWFYPg60/xbi3ld3UXuyDpIdp79uzxmu6g4/zaqW1yr6rInvcNitb
Zf1CM6zv0dLWYqV9nU0sE5/5PmiPrXnl2w5WD6XW4zS/3UoP+7l8qT2nfP3X
Cz3MPC+/R1isa7v5HgaNTA+Pj4ex0TGtp9Vliuhh/DRtw9Redjam4esN00Zl
5qt3qodtjZ/4HAZrz9GvZvtXpurTxhx8NxfGYB2VuL6w8piqM308iW/fWrlP
zQFCLxO3a89bNt1TeB+S2gPUz7e1smVpm9pbiP5Gey9eXzd75/3Ww9aPCnlx
5WhD0wq+Dd7Os+eR16Yqe4129DB5x9IgXuvJ11VF9DBYfAJad1s9c33ju8Z6
KNPrt/pzWpuBNW7ic1rcUlE9bJ9Zv3n2bC3WrCmDPRv9TfF3tsZ0J3q4HX/R
Ka30MHuHmu81n1TWD8ZpxBiDvVubh9AKa49DvBa1X2OuqB62NjZ5J94fFT9n
8y1tfayy9YetCZ6aD8n5eW6w+J2yetiP66T2y+Qzzm/f8S91RTyeRj+FnTvv
2p2S0sPcCzE3cfySH/trtecS5JXzsnrY+urwVamYKu6F9LR135qV7bLvJo+y
vrEdPWx7/6GLrXym9gr3ezDFbex+62Ew7Uc6+LX4/LqjRbRWO+Uo9ttlylZZ
v9AKe1bbU4jr+d/6eibV1mE9ruxduLXWbU3XVH+nrRleZP6wxZml3qn32b1a
T4t4LuvLpU+JuUD2226/h0HC5g8TL03sdNX3M5cooodtTAZf6eNs8FOWH30b
zuZ6cXzRuUud6mGwNjvl1M+V9WuX4r/5LFWf+jVw/Jw37snGPnw7kDgNO551
IK0ewUd5n+3TxtYZifeFw29TH/CdjVmUTfcUcYyJfy7Wr7bn8nWXTy//XFzX
xi7RZn5diWbvvN96mPuysbbU/oCktY+f8+uNtvPseeS1qcpeox097PdhtnE/
u4Z/9qJ62OZ5G35udrz3odcfVr8ytuvbWbaGStzmK6KHSRefTq3anUUxrUe6
+fgNv590J3q4HX/RKXl6mGszZudjTWx8qqwfNGzen1F2/Mz2J8vaxlPvl3Fq
84lWFxTVw/h/+w39TjbHjbzj99jx6xqWqT+I07HPbJ9WoM3sx/3a1cNg/UyM
dfi2HsfY8RZDYn1R/MbvIYCPj2NLSQP2OyJvdCNeMKWHra3s154H0z7koyI+
1PJbrPPK6mG0uaUD9+TXH/D7jtnc3GZlu+y7yaOsb2xHD5Mf43j1VJvMr3/k
152GKvSw35eS9GRuGOU43k+2iNYq865SerhM2SrrF1pha6UbtB/jY6wtSB3i
973w8U5+nXLLX9yHjxmx9wBF9DDzucw3+z53/u/3BuvlfkuM1Vv+phxZunb7
PQwS+IrJyYkwOjoatm59rfL7mUsU0cO0JfwcOvwW45OWX8mP5Ev7PTEuvgzT
D9qqzdoNPYzO8XNv0ET+vn0fWao+pe/Rz63kXOZr8tqB5hPsGIvTyK4/XcZ9
+5Z62OsRrsdYhT0r57B+vrLpnsL7ENOIPJdvf6f2QDCdatfx60lwr3HsXbN3
3m89DMwd9nmBNCP9/PsFrxXbffY8mrWpylyj3Xhpry94bp7f8pn9W1QPe60T
x7T6efHxd8QG++fke59/4zZfET1sZd3KBjqmG+tr+THarLxNaTLLL3avnejh
dvxFp+TNm/TPCX4OXDt+sPGupn0MnNYkRjsF7zCev215yvZ0KqqHgXa9Pw9p
7dtp6CB/fJn6Ayzm2tKF8uXT1scAtaOHiTv31+f+vZ/w+9dZbKXdC9ejr8Oe
168T5vfsjPVqO6T0sN8TlTTlvVrfBsTrORXJv6QFac7nZfUw2Bib+T/8hs/n
xFQXKdtl300eZX1jO3rYfxe/Iw86z5cN8j5rHPNdFXrY3pdPY3tvvHsrp0W0
Vpl3ldJcZcpWWb/QCpuPZKT6r+jr8c9H28v/HY8Dx+uKkhZ+/IB/i+hh+r3j
+svqMPJx0Tne0K4eBh9b5Ndj7+Z7GCQYH67VamHBggUaH+4ytnaP1wW2Z7Xf
r422AmueeJ/J//ENqXWL2e/c5z2/D0cKy/teBzTz/xb7E6/zS5uW8VXfj8j/
qX99X5CtpxLXp+xxbvuY+/aYxRWn5s1Rj/p6FV9E35ytcRq3b2lv4qPitRnQ
unHMS9l0j/Hr5bB+h8XK2Hl23eug5N5PwH1bO9h8CnVc3looee/cfK2NrXh6
pYeBMT7ygk87g/6AlD5v99lT2NoUeW2qotew+risHmb8hXzmn598SjvDrpu3
1nFMs/2A/Fh0ai8h+t59vuB+GIu1OZ7sJWbHpvJKXv5hXN/Oybm6kWdI+7hc
kjdtjNi3fZq9X78nqP+8HX/RCb68x9BuYsyFeYXx78r6QcO0EaT22S0CsQf0
77NWm4072PrPft0YmxvZLA6YsV3GDXwZoJ8jtUcHFK0/DGLLfRm29nZcrlrd
a6r+A3wzWjIuP+SheB4NfiJ+Z/yO8RC/Bix+0fQE6dxpHrP4euop/zl1rO9f
yPzP1N9l4rZ5H9RR9nvGCe3cqfrbsOPjOpJ5HuRjnx8of/HetK18d9l3k0cZ
39hOewh8X7Wf5xJDLIjNIwAbV0u1EY2UHmYNaT7zerhZ/jffmvcuKROMb+Ij
rd/e9F6rNTPLvqvUvgBlylZZv1AE6xNK7evn04jn836L44ndSvmtq6+7edbY
AG2FMvstAW08/KVPV/IQ6W3vqJAeTtTxsU/Mezdg+34BPr8X72GQIF56ZHS0
8vsYdmgX44+hyFxu+h2L1g3dhniWdmMpuW/KtI+vaQVzTOL96ltBfU2d36ov
uWy6N4P2ED6m6JgaMbbEkRW9bpXvPAX1AXNFqHdZX6LM/iNln70den0Nnp/z
t+qT6jWUDfJ6P/dGbRfyCHlmTZf2e07Rjr/oN2X9oK1blLfeaR7EuTBvmDZ4
yi/Z3Ou8/ZNaQZ5jTaZU2zWPMvUH/s7PP+0F3A95ppWfoC5hfk1qnRsDn9DL
e52RNlPXIQ91UicwFkUe7JbvII/xvtrts2n33eTRS99o8f5oliJ1Pu+pnfU+
uwl6DX+Q0lL4CtM27fjnTt5VkbIVp2WnfsHGYPPWyo+hjVi0jUMcE37Rx4G3
A2nJeWy/70GjH/65XzAmjB4mXlrjw0IIIcRgwViNtVNTsSDNYO6yn+9L2wrN
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
exFCCCGEEEIIIfpFtv/weD2Ll676XoQQQgghhBBCiH7BnGH2H160aJHipYUQ
QgghhBBCDBW1JUvCAq0vLYQQQgghhBBiyGB96dHR0bBly9bK70UIIYQQQggh
hOgHrKdVq9Wy/Yelh4UQQgghhBBCDAvESLO+NOtpKV5aCCGEEEIIIcSwgAZm
r6UvfOEL0sNCCCGEEEIIIYYGYqTf8itvCW95y1ukh4UQQgghhBBCDA3MH0YL
/4r0sBBCCCGEEEKIIQIN/E//9E/hrW99q9bTEkIIIYQQQggxVLCe1kUXX1T5
fQghhBBCCCGEEP2CMWH2Hx4ZWZjFTld9P0IIIYQQQgghRL9gfJg1pp977vnw
9NPPCCGEEEIIIYQQcx40cL1Wz/SwTCaTyWQymUwmk8lkw2K/+MUvto0Pj45m
/5fJZDKZTCaTyWQymWxYDD28cOHCqm9DJpPJZDKZTCaTyWSyvlq9Xg9jY2Ph
l7/8ZdW3IpPJZDKZTCaTyWQyWd9M48MymUwmk8lkMplMJhs2Y87wtvW0pIdl
MplMJpPJZDKZTDY8lunh8fEwNjqm9bRkMplMJpPJZDKZTDZUxvxhxUvLZDKZ
TCaTyWQymWyYjDW0JicnwujoaNW3IpPJZDKZTCaTyWQyWV+tVquFBQsWVH0b
MplMJpPJZDKZTCaT9c0YHyZeekTjwzKZTCaTyWQymUwmGzJDDyteWiaTyWQy
mUwmk8lkw2SsKT0xsW3+MGPFMplMJpPJZDKZTCaTDYsxf3j+/PlV34ZMJpPJ
ZDKZTCaTyWR9tfHp/YdlMplMJpPJZDKZTCYbFnv99ddDfUoPa/9hmUwmk8lk
MplMJpMNm01OTmq/JZlMJpPJZDKZTCaTDZVl+y3VamFsTPHSMplMJpPJZDKZ
TCYbHmN9aeYPj4yMVH0rMplMJpPJZDKZTCaT9dXq43XFS8tkMplMJpPJZDKZ
bOiM/YcXLVpU9W3IZDKZTCaTyWQymUzWV6stWRIWaH1pmUwmk8lkMplMJpMN
kbGeFutLj46O9uT8v9jyctj48P5h7fi/D6vH3x7WTPzmNiZ/I/t33fhvzaT2
trC+9tuNv7PjHLOOb4u3h01T98S9yWQymUwmk8lkMplsOI31tGq1Ws/2H0YL
o4ONwdDD20ATy2QymUwmk8lkMplseI31pXu1npaNC8/Sw9MU0sPNju9wnFgm
k8lkMplMJpPJZMNr9Xq9Z/HSXgvHenjt+G8X1sPd1cFvIJPJZDKZTCaTyWSy
4bWJycme7T8cjwdLD8tkMplMJpPJZDKZbBDM5g+PLOy/Hk7RK90rPSyTyWQy
mUwmk8lkstiIlx7pUbx0Yy2sgno4HjPutV6WyWQymUwmk8lkMtnwGutpsb40
ey9122KtW1QP868/3v4uivSwTCYbBlu9Zm3Vt5BrW7ZsrfoWZDKZTCaTyVra
ZDZ/eGEWO91tW8eYrhvXLaqH88aMk79LjD8Pgh5evnxFqI8vDY888ljT4zZt
2pwdd999D/b0fnphx33rlPDX/897w+joZW2f4xM77Z6d44EHHu7infXX5sIz
DIrdfPNtWVp+7vNfrvpWBt4uung0/F//9R/CZ3b/fNW30rA1U/p8n88emL1D
7u2UU86q+pYG2k488fQsrS64YGHTz2QymUwmk/XGGBNmfLhX62l1qodXT/7m
rD2IG9/Z+PHkr878e0D08Hnnz8/ag/CTnzyRexztf4752A6f6un99MIOPeyo
7N5pl7drH/jnHbNz3HPvA22fg/S99LJrwh133tP2OTq5RjeeQbbNfnz9zVla
/utu+1Z9KzPsiit+lL1/+q8Gxb705SOytEI79SK+px2jb8j8Hj5tbNEVVd/S
QNtRR30rS6uzz76g6WcymUwmk8l6Z/Vavfd6uIUujnWqaeHVS/+nsHrZv2uw
Zurvbdp3ev+m+n9wenj6synNPGh6+IP/8onc2EHp4c61JO1GznHgQV9t+xyd
XEN6uHs2qHrYyvKzzz5X9a007MUXXwonnXxmuP32u6q+lcw2b36lkU533XVv
1bfzpjDpYZlMJpPJqjVipLPx4dHR3sZLR5o4jnduaNTaO8O6JX8Q1tT+YErb
vjO8PPm74eWlvxFWLvv1sCrTw7/S0MRrJn5325gwf6OJGTvm/8veMnWdtw6U
HgZii1MmPSw9LHvDpIffvPb4409mafS3/+/7q76VN41JD8tkMplMVr3Zelq9
sDwdmjs+PPX/9ZNvC+uW/e6Urv2tsGrp26Y08W9mrJz4tfDy+K+Hdbf/zsz4
6UwD/49hLdz+q2H1lDZeO/5rhdbW6qXFehhS4zjN9DBjysTnnnb698LBh3wt
iz185pmfzjiGuce0m+6//6EZn7/++uvhnHMuzL6Lx6YfeujR7PObblpc6FmI
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
Wu5zrd/QVjr0Qw9bnxVjfCmz+zY9zPrNljZ5ZnEhrD2NNdPDqTzt59ea2bvM
Wwfd5pZ3oofbeUft6GHmH/u4ZkvPsnq4E39aNr8X1cNo6rw97GUymUwmk3Vm
hxx8cPjABz7Qk3On9fCvTuvhfx82jP/n8PPH9wi/XHdv+Nnif8y08PI7/oew
5vZ/m2niTeO/F35e+82wrva28NLEu8PK26bu87W7Q9jyVAiv35vFWP/yl+NT
/39w6rOpz7du+3d5/S8HVg9j1uYGm4fr9bCtx5K3B46Ny7IekhntJT6jTUgb
189x4/+0yV5+edtct1QsZcpMN+Tdh7XPra3MXEB7rmbr3niLtaTNuyyzH3Oe
Vm3nXGWvgZXRw+2kUcpsHWL/nr3dc8/9s7RJGT3crftkLSE7D/NRLc4UY3+a
PD2cpwvtuZjjibWTDpaveebYrDx2qoeZV83x6MmU2bswPcw+SHaNVF8V46b2
vc1r7YYetvhf/FVsjFOn5kTkWZ4ebucdtaOHbX40OpZ3yzqGZsdMrw9WRA9j
7frTsvm9lR5mfS9LC7+vgEwmk8lksu4Y48Mf+chHwnb/+I89OX8zPbxu/A/D
5sn/LWx54BPhlxsmw09v2S5syPZl+ndh7dK3hA1L3hY21qY0M9p56dvC8sk/
Dy8v3W5K+y4Jqx6dF1aO/3V4celfhdWTfxlWT/3/5cV/Hzbcf+iUHr49LB/g
8WGMdLf9bA2v2aztlmr/sOaztY/8msW2lwlzQ/n3W26OqK1Lbd8VbROi4fLa
1qzTavfu28qmDVP7Y6KxiPvzbdxYS/J8DV0QrSWG8Rnn8N+ZVqVt762dc+VZ
3jVSz+At1sP++KJplDKvbVJr5p5yylnZd+xZZFZGD3frPi3PET8cm625m9LD
EO8Bi508/Vz2HtpJB9OAfk63me3xlKeHi+5jS16w38SxtH5NPD9/2PqX4n2V
MJv76/sJuqGHLV9zXmJXvNkc5071cDvvqB09bGPDrKkdm81TKer72vWnZfN7
kfWlKX+WfsRsy2QymUwm666hh3feeeeenLuZHl47/q6wYfzPwtrJ94Xw88mw
9vF9w/Ilvxc23/Yb4ZUlv52NCbNu9KrJd4QVy94ZXkIP3zHVjnv9lrD+0YPD
+gn2IH57eHXyN8PGiXeGdbf9WXjlgc9O6eE7Bjpe2oz9I/2eIl4P+7VpWQ/V
1oFGg9jYMG1Ovwbaffc9OENf+z1amYfsv0vNc03ZTdOx3HDpZdc07oP2rbUv
47byCW7NMK/XiYm0tXv8+qopLWnjd4zR+DVkWJfH1n71Y+M2F5Nr5q2bXPRc
edbsGmX1cNk0yjOLI+Bd+HVn/RiVX0+3rB7uxn3OX7AtFoIxNj/O7Nv4eXqY
PO7H1/xz8T7aTQdbO4xxROauxmmQ0sM2Tso6WUXN5pYC5RYdZelmZd/r4e98
54zGd35taDSkXd+ndzf0MOPSpiO5Ludi7SnT5nafnehhrOw7akcPW1/Gnnvt
P2PtfHvfZfRwu/60bH4vuv+w37v57rvvK5wmMplMJpPJmht6ar/P7xdGFi5s
ufdOO9ZMDzNXeM3Eu8Ly+v8RNq28KLy+6ZLw7MQ/huWL/zCsv/WPwsbx3wsr
a38SVt39obD2JzuFFx74q7DiTvTwjWHdI18O6+v/Ptt7ePPEb01p6neGNbf9
Sdh83z5vGj2M+bZ/HNNrOsraVn4NI9qKvh2P+b19+Jd5bGbEPfrvWIeoqPl9
SLkPiyME04G+rcy5bd8YYH4p+xDZ9TmHHyNKaUn6Cvx8O67pnz/e18jmXhq0
723Mt+y58qzZNcrq4bJplGfEa/pn45783/H4Z1k93I379HEEpgttv1bTeCk9
jFa168TP5fVfO+lgus2XPdN/Dd0Z6WG/RzPnZj/hVkb6xXNJgXPZXkZeD1OG
beza0tuvw0TeRb+adUMPY+wZ5MuEwXr4Xz1iXlf0cNl31I4eZl6H91XkXevz
svdaVA+360/L5veiepj62fIG57H9CWQymUwmk3Vue+yxR5g/f/bcsW7YOuKi
HQ09PL2u1topXp78/fD4+FSb4ueXhtc2fj8sf2C38PQN/xKeu3W78PKdnwlh
08Xh9Y3Hh+fu/U9Tf/9/IWy9Iax9+KCwrvbOsHryd6Z0829sG0de/O6w4b69
Qvj5soHQw9+/YJsebjV+xvcpPYzRBrVxFWsH0fbNWwt2/y8eNquNbWZjJ3lr
2uQZbT3axdams/Yu4zq0uVNtZcaxad/6tjyw/lasn0yHsH6Tt6eeeibTEn7t
Jtqe3Avnj+3CC0dmHIsObvdceZZ3jbxnwFJ6uGwaNTP6RXg2a/eb1mA8Kd7D
1vYxTelhG78ijr/b90l+jX9Petg10dhmNseS+2AczNLW8h17EqfeWZl0wOrj
S2fkadNkeetp8axWvgCdWNTQsJSXK678UWPcl5iEVHnk2HlRetM3wPXWRHH9
rHEc62G7/5QeJj4ipYfNmLf8o2tvyPokTIeaf0rtuRYb6+7l6WGszDtqd31p
0jUu54zZ2tg7exMXtXb9aZn8bmsjsvZfs88w3p/lWa+pZTKZTCaTdWbbb799
2HWXYusrlbWkHnbrTK9d+uth/e2/Edbf9Yfh+bu3C+uXT2mGn18TfrH+pvDz
1ddNad9a2PLTY8KK2/7XbO+l9Xf8TQivjYQNj+w5pYd/L9PD66fHmlf//+y9
eZQkxX3vi/72udf3+drnvXfvsc/Vta13rXft62MfW0/YksWAVgQIxL7vAiEE
QgKx78uwiU0wMCAG6KV6NMCw7wxMVXez78vAsO/bsDOgGck3X39j+ldER0dm
ZVZnVfZUfb7nfM5MV2ZlZmVGRsQ34hcR9T9PPn5km4nvXJO8Xf9S5X64TKn+
//LLr3akD7+IFLtatF9ixYp3nZfI0webJs0fpHPn+f1abyXL4xY5VrvnKKoy
7pEk7xDGcpepmV6nrk1jjmPrCrc6r80hlUdF7oP6TDVHlp5pHmmOX/mSVuu1
q89V44avve6maDyGjc2XF0yT/KmO00nJn+s61T4QSh7VfF3a2m/tqtNpVfmU
0mqr59RJtZveEUIIIdQ9qZ7m5tOaM6cjxw/9sPnQNbHSfzzhZf+z4/3R/yNZ
MfZ/Je+MfXGC/5F8cNffTnjkf0w+ffAfk4/u+Ws3lvjD+sQ+jf8zebvx1xPe
97+t8cMuVlre+j9PfP9PJ/iL5K2xv3H/7yU/jBBau6S5jf15geW55S/Vd+iP
Z30oEmPfTfljYdW3rLYHeX6tRWXrqel3zLStBiGEEEJotkr9w+t12Q+/O/pn
zgObH/Y96oejfxTwn5wXXuOj1xxjzd9/5vqHzQ+/e9efuPHEjsnxyjoHfhgh
VIVsbqU05IurjvmQ/DjwEHnh2ybXO0YIIYQQ6jWpLrZ48eLknHPO6cjx03zo
uxM+VX3EoR/+sEnghyN8oD5m54cnPfDE/5vghxFCs0Cah01jZjWvsrylxsuq
v1jjiWeTFNetcbIan6rr1BhXjWN+xptXHCGEEEKo16SxVaOjo8nw8HBHjv+h
W0/4cz6Pl/7jyXjp6XyUh8Z/muBPnRf2/XDzb/wwQgghhBBCCKEWaow2ksHB
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
vvXWu8lwbVGy3/4/d15yhx13Tg497Eh3zNi5Rkfvjh731lvvSF5//e1cv0m+
9ZcHH5Zsv8POydbbbJ8ccMCByeWXX5W8/fZ70/Z96qnnm+fQs8o67j9/Zd3k
v33xLx3j47PHb7TyRXdst900Tzz2ox8lC770Jfe50P+1/dXf/KZyHwf44V6m
6voCAABAL6L+4Xq9ngwODlbSP2zy58Sy/mA/hlrb5YPN22pbOH445oetfzns
e14b/PCmm23u/NO99z2Uus+X/9+/dftUUTc78MBD3LlvuOGW1H0OPfTIpg9s
xWUDteb35DX/4R//KXXfXXbdPXnnnfennEv+POv431hv/WThwiui1ynvveWW
26R+9//76r8kzz//8pTvyAPb9k1+8MPMe7XZD7ds7rt8+fOF7/Ullww6jy5u
uWVJac8wjzcyT7zwn//J/b3oX/7FseykuQ7937zx0N//fXL/AQe0POZbQ4PN
7/z73XdP227bzGO/NTzk/p7/F3+RfHD1NdP2r02kFW1/+uRTkv99zz3JhV/8
ovu7sfvu0/Z9ef785vF1Hfrsmm99q/lZyMg//XPzuzp/uP2yL/9NcuMmmySf
3Hzz579v8nrFH+66a9pnMd5ZuHDKOV664ILM8xqje/4o9fi6D1d/85vJvT/7
2ZTrww+vnVRdXwAAAOhVlixZkgzXah05dl4/HM6nZTHUv5z4W97YYp79ubda
+WHrG1bfctr5O3VPy6j79JsfHhgccd+R7/T7U9NQv7F/rlZ+2LjiiqunfE++
Wv661ffkp1955Y3m94r44Zdfft39vgcffHRG91pcfPFlpT3DPN5IPu38//J/
p8ZOiw+vu871G8sP+94ujTcGLsvlh1+58MJp/vnyCf8tz+vvP/wP/+C2KX5b
f9+61VZNrxoee+kuu7htF//lXzaPI8+Y5jfltfP40sG/+7vks8nYcf96/zA+
Pu2zqB8eqU31w/Pm5Tqvef5Wx1/wpb9OPr7xRvzwWkzVdQUAAIBeRH3Cxx13
nIuXrnL8sB8jHc6nJT/r9/kK7d+Y7PuN+WH5ar/vuR/98JPLnknuvvv+5M03
V2Se59lnX0weeujxltejuG3F+srb6e88fviFF15JHn/86Sa77rZn09edeNIp
U7bZdX5/o02a+3zp//lycuXia1288/JnXkjmnnzaFI967rkXNM/l++GDfnlo
8thjT7kY6jPOPGeav/Zjrk844eQp284++zznyfV71Z+smHDbtu12Oza/V8QP
63w33HhrcuONt0+LvdZv/+2ixW5s8cjI5cnDDz/R3KZ7ou/pvHYu3Xd99sQT
z8w4jeXxRuqjlZ9a9NWvZnpicd8BB0zp1+2EHxYPH3poph9+YcJL2r5hf7I8
sj6/c6edmp+ZH5aPXnHFFVOQ1w996fLTTks+vf12t33JxP2wcy078cRcflje
NzyP7Zflhx87+uhp3/v0ttvix1+0KHliIm+/4utfb35+0w9/iB9uA42ZWHfd
f2051kH53Q9/uFWy8867d+Q6qq4vAAAA9CIaP7z55ls4P9yJ47fyw+ZhNRY4
3Ka+YPXx+p/JK1t/sSQ/bdvMQ1tctRR+vx/8sDycfW7s+aMfN32sUZvwXl/7
+jea+/zPv/1fzlOG51i27Llk4403nXI8jas94OcHtfTDIT/d74DmMc47b/60
7ep/9c8TO/bPfnZgc7uuyz73/fDJJ58+5Tvy0v/r7/+huf2II45pbvv6v81p
fn7U0cdNO588qm2XNzY/W8QPb/DNbzf3lU/XZ4rRPviQw6N90Xvuubfz44qt
TuuvPv30s2acxor4YXnd2HjiKvyweG/xVal+WDHK5iF976zv2PdfW3DxND+s
Pu6s6455Vd9jL5m8L638sH2W9xxp5/VJO/6/33PPlP7v34+N4YcLIj+sd+5v
J/LINE8sL/ytb33X7bfZZlt25Dqqri8AAAD0IppD66/+6q+SgYGBSvqH5W8t
PrqVd1Wfr3ldfSfc3x9/rNjqrH7hXvXDS5bUm77t+BPmJqeedkbT7/14n582
99MYVNtvjz32Tn7+i182/eKxx53Y3E/9svZ9jaGVf9t22x2a3y3bD9988+1T
4pNjx3j66Rem9B/b51l+WFx66dA0H63+V99jps275Y9lVp+7PpupH77ggt9M
+R06hv61z4499sTkuedeSvXDZ5756xmnsaJ+WH9neeJu+uHffvWrzuvF/LC4
eYst3GeL11uv+dlDBx88LVa6DD+sMcbunkzcm9nmh4XGDtu2NwcH8MNtsGDB
QKon9r3wt771Hfd3J66h6voCAABALyI//N+/+EW3/nAVfljYOsKS5o/2xwjb
OOCXPv58HmqbTyvsS7bY6vD7/eSHNTey/r7wogXNz9QvrP7GfX6yX/Mz9QVr
P/lP+0x9kfa55rPSZ4od1t9z1v+W68+0fTX3VVYfbhqt/PApp/yquX3vvfdN
PY7vGy2+uJUfvv/+R6b56KVLx5qfyfOmnc/aAMT8+Re7z2bqh/35uyx+W/3Y
mntLfl0x3/b9KscPh344yxN32g/LF/q+74GDDkr1wy/8+tfN/X5Xr7vPrvy3
f1tz3TvuOOV85oc1/5TGC/s8fswx03zpc2ee6Y6p8bgPTnps8ezE53n88Pje
eyV37fPjJk+ecEIuP3zp//ibadenebTy+G21AWjbI0ccgR9uk5gn7pYXFlXX
FwAAAHqRlSs/Tb729a9Xtv6w74mtn1iS/33U6++Nzafl9zHbvoq/znvOXvTD
8oFr6mXfTY3rs/5VjdMNtx1+xNFum805pb5j/R1bU8lircv0w34s9JFHHZt6
HH88sM233MoPq13A719V37Biy+1v3bM8161+W302Uz9s91boXmostJ5ZbG2n
Kv2w1heO9Z3GPLH5YX/Mbdl+WH/fu//+zX00hjbmh+UJzUc+f/bZzr/ad0K/
njWflvxq6EtjXP61ryWrGo1cfjj23Tx+OMYrF12Uyw9rvi9t01zT+OH28T2x
2hO75YVF1fUFAACAXkT9w/vtt59bb6mK9YdDXys/G65JbGOCY2smyR+bF/bH
EverH37mmRemeEVt19zJ/vq48rr+eFif0POt+y9fd3+Haw0J83Nl+mH1a9t2
f+4qH/lF39e+9NJr7vNWfvi22+5sblfstz579LFl0djrkO9tuHFzP819pc9m
6ofVJ+zfc/86NHe2P5d1lX5YaG5iN69z8HnoiW/cdFO3b6vj+X445t1a+WHF
Sf92cn4v9ZHavNa+HxaaP0qf37btNq7v1vqA/z2Yn9r8cH3XXZPVE77Zx9ZL
8n2p/Lf6mq3PVeOH/WO28sOa50p9wsaL55+fyw/L14fXZ3HfWX5Yf9u2FzJi
rvHD+TBP/HlbWue9sKi6vgAAANCr3H7bbcnISHXx0q3QXFsmed/rXlrm4qr9
/mN54TCGem33w1tvs31q36xQ/LJ5Wv9z6/eUD7b4ZyFPpe2+Hz7ooEOnIA+q
uOprrr3R7Wt9wBrHGp5/t91/VLofvvfeB5vbNZ451leaFuPcyg9rXLRtl5e3
z/3Y60cffXLa9zSm2N9H/ev6fKZ+WGheb8W4x9Za9o9ZtR823xuLg/Y9sfqS
W/UNC8UZmz97e3KdIeO9xYub2/T/mB8WH15z7bR+09APyz/aeGFbg8nG+Mb8
cNHxw8+fc860fto8frjb44flv22bzUeNH54Z5om75YVF1XUFAACAXkTzS4+O
jibDw8MdOX4ZftjiqR8L4qdtvLDm2Wr3uJ26r2XUfTQXlupbxx1/UnT7kjsa
brs/x3KI1tb1/a9ihjU2OC1eOkTjjtM8r/pYy/bD8r9+n6nm7/K3a85lO6+Q
57dtWX746quvn+I1NS7atsl32ufyrf44abHX3j9pblf7gn1ehh/2UR/82efM
m3Kd+r3a5vvhc349r7T6dV4/LI+rft8FX/pSdG3hGzfe2Hkt9ZnmPabNyXzV
Bhs0/Ztip6/fcMOmhw29nu+HxbKTTsr0w5pLOfTML8+fX5ofFjaXlv6dbX74
k5tucuOf7XOtvZTn2XTD2/UCrdZfKpuq6wsAAAC9iPqEG6MNFy/dieOX5Yf9
+GjNGy38NYt70Q8rntb6fzVvtL9NawabLzxp7qnNzzUHk3zu+F33NT+TJ7a5
o60fw/qN5RP94x555LHOu9mYXI1ptfGtb7zxTnO/+Rd+Htdcph8W4RrD6rNW
HPUpp/5qyvpQui/+OsK+H9Y9UMy3xiP73xGaL9tfe0r97/52zR2muZvnnX9h
svkWW0/Zps/se74fVv+uzhdyzTU3uH1jftjvu7/qquvcc1J/sX2mWHd9pn21
PpR9rhh2xWxr3eKZprG83nWN95zrPJU8sd9PbJ9f+Od/Pm08cRa+T5PfW/iV
r0zxrv46SWl+WNyw0Uapfth59U02aW53sdKR8cr++GHt4+PPTx3zpYp1tu8+
e8YZHfXD+je8vrt/su+042u/sB1AMeW/u/NO/PBaTNX1BQAAgF5EY4bHxsaS
hQsXztp46U7SqftaVv1H/tZ8kMYTa76rHXfatTluWD7L93Y2n5a2a31gzdds
XkzzGdt+vgfU54rZtf3k7axfUrHXNl+MPv/Jvvs3+1M7sd6SofWfwvjhkPC8
vh9OQ2OrY2Oh/TWG09D6Vf53fD+chtZp1r4xP3zCCSdnfvfQQ49snsvv4ze6
tf5wzBOb7715000nPfJfu37jVusThzx98inuu75vU7+w4nun9H0OD6X64c+W
LGmO4435YRs3LBQzHbuOrPm0ND459KX+eF+xaN113ecDf/s/p1yv876T449j
n2X54diY4hije+wx7fi+L1b/u+bQWnnrrbmfc9W+D+JUXV8AAADoVepLlyaD
Fc8vjR9ORx7X+nf9vtGdd9m96VsNxRvLA/vjXbXvT3/6s2lr66qP0fdp1hf7
5LJnpuynNYA0ltmPY1Y/snn1tPHNMfL6YfWLqk80Nt+UPO2Vi6+d9h2/D9VH
927X3fZMzpt3oZtvLO2cg4Mj0+6z0L2MjUeWH2/lh23MtrUp+H5Y6B5Y24bf
L3zWWedOO5/6zf3r82O+26WoHxaKnb7mW99qei7NoaVxw7a9qCcW8mqvLbjY
rZPbzjVBuVTt+yBO1XUFAACAXmV8fDyp1WrJqlWrSz/2nwweXbnnTUPX1ql7
2om6kNYHVp/kAw88mnv/PDG18tRaw1d9wVn7aVxtnv3KRB5eMdHqH1Vst9YQ
7uT55MM1p5fil+W5x8bu6crv1XxlOles7zpEbR6xecba4Q8PPti2Z9JcUiK2
zTxx1b4OiqM00a33G4pRdV0BAACgF9F8WvV63a0/3Ak/vMVtA5X73jR0bZ26
r1XXmwDy8NmyZZX7L5hdKE1UnS4h5X2dBXUGAACAXkMx0ppfWvNpdSJe+oV3
VzjfOZv6iXUtuiZdW6fua9X1JoA8fPDKm5X7L5hdKE1UnS4hTtX1BQAAgF7E
zS/daLh46U744X6l6noTQF4+Wf5s5R4MZgdKC1WnR0in6nINAACgF1GM9Nj4
uFt/GD9cHlXXmwCKgCcGvPDsp+pyDQAAoBex8cPDQ/jhMqm63gRQFMXJauzo
TObYgrULPWs9c2Kk1w6qLtcAAAB6EYuXHu7Q/NL9StX1JgAA6C2qLtcAAAB6
Fc2npfmlq76OXqLqehMAAPQWVZdrAAAAvYj6hMfd+OEhFztd9fX0ClXXmwAA
oLeoulwDAADoVdQ/rPm0Vq1i/HBZVF1vAgCA3qLqcg0AAKAXUf9wo96Y9MOM
Hy6LqutNAADQW1RdrgEAAPQiipF2/cO1GvHSJVJ1vQkAAHqLqss1AACAXkTz
SzOfVvlUXW8CAIDeoupyDQAAoBdx8dKNRjIyMlL5tfQSVdebAACgt6i6XAMA
AOhF/P5hxg+XR9X1JgAA6C2qLtcAAAB6EY0ZXjOfFn64TKquNwEAQG9RdbkG
AADQizg/PDqajNRGmE+rRKquNwEAQG9RdbkGAADQi9j4YcVLK3a66uvpFd59
t/q6EwAA9AYqU6ou1wAAAHoR9Qlvs83WyYYbfi9Zvfr3lV9Pr/DBBx9XXn8C
AIDeQGVK1eUaAABAL6L+4S+ss06yzjpfoH+4RD755NPK608AANAbqEypulwD
AADoVdZxfnidyq+j1/joo5WV16EAAGDtRmVJ1eUZAABAr6I+YeeHv7AO/cMd
QG36inNjPDEAAORFZYbKDvqFAQAAOovGDytWmv5hAAAAAAAA6Cc0h5bFS9M/
DAAAAAAAAP2C/LDm0/oCfhgAAAAAAAD6iJUrP6V/GAAAAAAAAPoOFy/9hTXr
LbH+MAAAAAAAAPQT9A8DAAAAAABAv7FmfmnWHwYAAAAAAID+wq0//IU182lV
fS0AAAAAAAAA3YL1lgAAAAAAAKBfcX74C/hhAAAAAAAA6C++MNk/vGrV6sqv
BQAAAAAAAKAbaD6tdddd1623hB8GAAAAAACAfkEx0nfccUey4YbfI14aAAAA
AAAA+gZ54EajkdRqNfwwAAAAAAAA9A2KkR4bH0+Gh4fxwwAAAAAAANA3aPxw
vV5PhofwwwAAAAAAANA/WLz0cK3GfFoAAAAAAADQV4yOjiZDQ0OVXwcAAAAA
AABAt1Cf8LgbPzzkYqervh4AAAAAAACAbqH+Yc2ntWoV44cBAAAAAACgP1D/
cKPemPTDjB8GAAAAAACA/kAx0q5/uFYjXhoAAAAAAAD6Bs0vzXxaAAAAAAAA
0G+4eOlGIxkZGan8WgAAAAAAAAC6hd8/zPhhAAAAAAAA6Bc0ZnjNfFr4YQAA
AAAAAOgfnB8eHU1GaiPMpwXQZT76+JPkk09WVn4dAADGypWfuryp6uvoBV55
9fXKrwGgCKRZ6Eds/LDipRU7XfX19ArPPvdics0Nt+XmmYn99b2Djzw5+eqc
zZJTz5xf+W/oNK+/8bb7retusPmMjvPyK6+7e7h07B7397KnnnV/P/jw46nf
eePNt5PzfzOcHHTE3GSv/Q5PTjv7wuT2O8aSFSve68pvn7+glsz5/nbJV9bb
1PHBhx9V/jxmK7F0UjTttJNG2j1XFXxn053cNdrvA3jx5Vddmvjat7fM/Z3R
8XuT7262SzNfuv7mOyr/HTNFZfEZ516c/Ozg45Kf/Pwol/fqvZfnD/e98pqb
3T3bepf9Sjn36Wdf5O7jZtvtXfl9aIfvb75rpfnKw48+6fLpx59cXtox1f58
7Y23566b3Xv/w9OO8fHHK5OFV1yfHHXCGcme+x6aHHDI8cmvzrkoeWr5c6nn
ve+BR6YdW9dx970PJq++9mbu62/n3GnE6ptK+0qzx5/y68rTn92zVr9N27Xf
o48/Vfk1z5Sq37l+Rn3C4+NjSa1WS1av/n3l19MrzLtosFmnyMPZ8y5x31N5
rb+PO/mcrl/zRZcudHWFt95e0ZXzqQ3Sfv9MjvPrCy5zx9hkqz3c3z8/5AT3
994HHBnd/6yJe532HJQPXX39bR393dfdtGTK+XTd9MUUSydF007RNNLq/LON
Od/b1l3fkvrdlV8LzA6eXv58M4/Js7/q5NrX0vpGW+6+VtfJ5Bv2/cXRqXn9
9zffzbUZ+N8ZWni12/aDbX5UyjXsvNeBzWfQTvyd2vFUJg+MLK7kHladr2y/
xwHu/MecdFZpx3zsiacL1c223W3/Kd//7ZXXJ//6zS1S9995r18kK959f9p5
1SaSdR61Q41cfm3mtbd77jRi9U07frttQvKwSrO3LBmd8bOye/aN72yd+bvU
1qX9Djr8pErSaZn3qOp3rp9R/3C9Xk8GBwfpHy4RpWXl5T56p+3dDrfJI+l7
Vfphy1NVXnTjfGX5jN9c9lt3jC123Mf9fdgxp7m/1W4a7ju86JopXlTlx8ln
nO/yfr8ueMqZF3Tsd6tN1upcqrNVnVZnO2X44SJpJM/5ZxuUoRBS1A+rHdD2
71abaKeQ99S7bu+t6vhq+1I/2G4//uWUzx946LHm98r2w3oGhxx9anLTbfW2
vq/32a6zivtYdb6y+76HlF4ev/jSq9PqXxYTobQfblMfv3133kVDU/yn0smR
x5/h0pbiMOzzDTbafpp/M2/3zU12aB5bn/n1DrFgYFH0umdy7jRi9c07lt6V
HHLUKW33yetY5s1n+qz8NgTF8aXtt7b54ax7VPU71+8oXnq4Vqv8Onod65Pa
76BjU/fBDxfH6jDWjmt5jeoh/n53NO5qnk9xRmG8nLypjmH7hH0HZWHxSGed
t6Drz3htpAw/nDeN5D3/bIMyFEKK+mHFFLt3ZNdyYoWrxPcOan8Mtyte+hvf
28Zt32rnfZufl+2HZ0q/+2GrD1n8XKe4/Kob3Xk0hiltnyeWPdNMU9rvrbem
txn5sWfyaP4283bhb1E9RDHZSof2XcVDl3nuVve3zPpmp/yw0HOK7YcfhjJQ
n7D8sOKl6R/uLEX98AsvvuLKdbWR6j1XrEzaOFPF2yr2Qu16akcbqC3OPSdC
bdG1zfdT6Dr199XX3zplv7vueSCZ+6vzXfu64tAU72HjnkMUe3fhJSPJTw88
Jtl1n4Nd+67fDi+yfIbaKHUNGsOi8ZtZ168xXzqGrkt/n3rWfPf3sXOn5vGW
z2isZdp91LksXujQY6Z7JW3Xc9j/l8cl+xxwpItjy+ubb7jlTvebLE5A9U79
rett5xwad6TvX3nNTS6tKCZ4lx8flHvsue6b2peVJ6vOOLjwqlzjpzWmS+dV
3THcpph7bQvH8ehZ63ON0y56DUX9cCzt5E0jMcJz6Tmqf1nHkofQ/Yh9T+MW
VffRM9Q7rH4GPbPYvmqLUayc3l/di6NOPLMZM5IHvwxVWtFvV6ymxphpTGhW
rOa9Dz7qYiSUds45/9LM9rC8+cyixTe4Z6Bja2yX7oOOrzStZ5z3d/nHUf5x
wqnnun6VcExDnt/gvy/KnzR/gJ7hLw47cUpcsO6h8ls9h7mnz0sdY657qnqs
0rTu9YmnneeO48+PZ++Kxs/EjqF7o+26dv9z9c+qTqy0o+vT2Lh33/sg9T4p
/k73xqWdiWeu4+b1w+oH0jVssvWezf4r/S3s2Wp8ov5WPVxjijXvwna7/yxZ
/uwLzeMoT1Xa0Pus+3ru/IHoeL6yn0MM6y/T+Ii0+Qo1X4S91/Y7fD/83sT9
VjyRymv1wSlvC9O6rl/vmtK39lderX3V3qrtSrP6raG/yfO+Kx/XsewZ2jMJ
70M75YU8mN5d1Tf23v9wdy3vRPJ+P1/Rb1E5rrR+7NyzJ+5fI/X+502/rdLV
gRPPX+dXXSL87iOPLXP5r/JW/Q6Vf4ovz5tGfPL4Yd0nexbyp632E/644DQ/
7L8/GqMQ++5Mz51GzA8vvvYW97fqe2Faz6rT6d7re3p3rJ/a0my787KEflhz
eMSecZYfzpMvKX3qOsPxIXpP9X5rW1hnHL37/ui7nUWee9Tpdw7SUZk+NrZm
/HDV19LrFPHDynP8GBhDbYhhjO3zL7ycOqYkz7vq58E+fnyKlUshyp/vHJ3a
jqU8Je16fO+X5mkUWxbbPw35E+1rY0GV37nver5QdQg7ZponMZTP6btqJ/A/
19wXsd8kLk6JcYo9/9g9bOccNleL+putr0NYTHAar7/xVupYJtWFW/l7+Svt
G/ZZqLyw44T9rpcOX7GmfjpR5y56DUX8cFrayZNG0vDPpbIxds2qW/vfUV0z
jIMzVG/z99Vv1VjG2L6qK3/44cctr9HKUPmG2Hl130NfoHzEyuWQWBx5kXzG
+jpsvpZwf6XRPOMp7TjKM6fkI5PPrchvsPdFMQKqh8TeryOO+1XK851aD1G7
QNp5dWzzFv5YxVg97vDjTnfb/PmW5Atix1VdMFYXVhpJy2vD/CWGeYEYamfQ
PvYMbayHYXVmtYumpQ3zhp14DjHuuu+h5v6tPLTaMvQMlOfrb/PD8tGx/Elt
mYq3te+rPUSfq6y2sa7+Pbd5RPwxqHnf97Rnorx0JuXFDnv+3P2+2HfUrhLL
V/z2cp9YHHOR9NsqXdn7EY6fVlt82jmU17dKI2nvQJofVt6pY/t5Txp6fnY9
uk77vJUfFvI09l1rQyvj3GnE/LDlJ/515qnTyXOmpUWVHUWfiX/P1G5iaXGr
nfadtl+aH86bL6mfR5+pPdX/vt9mFrZXqX6sz/O0qRt57lGn3zlIR3Noafzw
wMAA/cMdpogfdmXvhMc578JB10atvkT73I+z1TgRq1N8+wc7uTxUbb02j4ew
sj4NbffneNI59bfm4NV2tTPZNrVnq99YfTA25iacv9TPt5SPyi+r3deOYceN
eRo/v9A58txXXb/yPPWL6G/dL/2tMaO2j9o17bjtjNnVOazsVl1edQ31c/l1
UdVNso6hNkndV7tvamPQ3za2rOg5rH5j9S8d77LhK6d5sxCre+g7OoaOqTzd
2l+sDzUN9S1Y+WzPUvhpSJ7W/461W1teXuQa8vrhrLSTJ42k4Z9LqK1KfSya
48X6+nU/zN/J69u+qgerXUX1Ob++7N83m/NH7436PeVBbP4vkeca7Z1z+cbE
NckXq0/8IK8dK4yhs2eia1ffpvZXTETsHhbNZ/zYP+2v90/1eN9j5JkjyD+O
fpfuub5n/b9FfoP/vuhYqi+qHhz6WrUv6XO1adjz1W+w4+g52zup86rfQXmi
+meb/ZJb79mcI8/ed7XBhL/P2rGsz1z9yZYHKO3oc12n5hy1MsGPl1G/sl23
0pGu29UdvbnrW/lh9fvo3d1nsi9S90N/C+uzCOfZ0r1UXiPfr+ux9Kc0ovOH
aU/+tuznkIbvlYquZWd+2O6bpSnd2+Zz8eLJzQ8byrd0fpsXKeaH877vuv/+
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
6lQz9MNFf0PW+2LHyuPDbN+0fgfz+377jM1vbl7E+tR9z+bHYaf9Hj9fsjiM
tH5qa5fqtB+264r1U/ppT/Mfl/kc0rC5+0TR+VVbrbdkx52JHy7yvqf54ZmU
F2k+Sc8vzOey1n6xeFSrmxdNv63SVRaad0rn98daGuHY0jy08sPW/ivCdTei
937yuvz4mLx+2J6bys2yzp1GXj+ct04nOu2HhT8fjMZSxPxw0XzJ5v2wPNnm
xlDa1Hzn/nts97jd+czbXW+pjHcO0lE61/jh4eHp7fhQLp3wwzZ3gupbM70+
e3dCP2ztTMqb5I19rxTGnIQotkYxmjb22c/bfJ+heCl/bYkia2vkwWJfRKu4
Vhu/Y3mf6lT23Vj+p5gd2+6PPUkjVsdv5xzt+GE/HllliD+fqGIAbVseP2xz
YqmN1Pq/rJ5oc8aobdvyd2u7L3oNrfxwp9NOUT9sc7GrXJX3U90tTFtpcc36
zYoDsfuXt15h9zhtTWtbS8fqivbsDsy5XmPRfKYbfrjobyjLh1k8btp8NeqD
13Z/TjjF+1r9RH5Hfcv6v/VvCM1ZZufKM/7R4kb9cW2x+9xpP2zzvKSNc7e0
Z+P6O+2HNe+G7au5ILP2VR+7xtZZmdctP2y0et/T/PBMyos0z2dxPH4MVZG6
edH02ypd5UVjOZW2/DbI2DpfWeRZb8nuRWzufR+/797Gp/hpO8sP++tg+OPL
Z3ruNPL6YZ+sOp3ohh8Wage0+rDNq+j74aL5krByTm3ayq/9vNXGg1n7RLtz
0bS6R51+5yAdt/7waMPFS1d9Lb1OJ/ywlaOxtkC1dWiNPpFnvkV7r/x15/z5
/zVezd/fn0fX/LD2VwxHbL05aw+3elDoMzRPiuVh8hJ55o4oguXzKvNs/poQ
f00ZxabY5+b7Y+sq2Vo+eeudaXX8oudoxw9bua/jhOOu/HVX8vhhi69TfJGO
55cPKi/N7+pfGwvVzjXkmU+rk2mnqB+2elm41rKwPnXzw1qjSu9LrA/Y5mHK
M7+ZlaGxMbm6fqt32rxr6qu3um8sb1C9SvmGylv9XTSf6YYfLvobyvJhdv26
5+GalLoXtpZO2DahuqzV7ex5hT7APtd7EF6Hfod+j33H7zeKralh8eSd9sPW
xhOOhxBK1/ZdmxO1035YWF4Qm0vH8Ndms9/VaT9c9H03PxyLa2q3vBCxOFeL
05W3CNNjnrp50fTbKl2loeepexiWUWpzsrI7ll9kkccPa56xVl5TY7Utj5ef
8ud+a+WH1Qdp16804H93pudOI48fLlKnE+b18s7jmkWWH9Y7FMYt+n64aL4k
rJ3S6uqaI9S22bzUti2tTTsPWfeo0+8cpKMxw1p/eOHChcRLd5hO+GHzHWEd
QmWF30+Vxw9b3uKPXfbX1lF8nn2u98yPVzQ/rPmMrBz257nV/lZHUbmsz2I+
Q229dj6NJSu6bkIWFvMi5FnCPEL5osW0qjzy83/rE9Lv8tsFVK+w6221TpGR
Vscveo52/LDNaSv88WrqH/HjefP4Ye3jj/fVPEm27T2v/yJMU0WvIe96S51K
O0X9sK2Npmvw67A2j5Rflj7jjf9RXdz21fesPPfnt0nDjxtU3mG/Xe+dtYOr
rmX+TV7Knp28rj9/mvlM32cVzWe64YeL/oayfJi8kJ1XdS2rd6ptx1/rKZzf
xLyTpfHYfFK2homO79fTVH+zNWP9PMDqv/rX5klV2vHXHOq0H9aaQXYundfS
vJ/2lJ9a21c3/LA/J6/um38vhfreLK/w44c77YeLvu9+f2G41k675UWr9OLH
TxWtmxdNv+34YesLVDuY366tfnA7np5L3uOJPH5Y6dnG8+g8+o4/f6aelb8u
pvr9Y2nb98PKP1UGav1bf+2+sH1rpudOI48fLlKnE/48fuF4bsVyKd9Lm3sh
LT+I+WHh5z3C98NF8yVhc/QY/vgjv/1szfs4NuV3Kc8K85k0su5Rp985yKa+
dGkyyPzSHacTflhYfJ7lpXoH/HazWLtRDN/fKp+wuXds7gA7t45v5Y79a35Y
dUN/DKj2VX3D2j11XbbmS5rPsDZxEZtXdibIs/geTnlPeL+0PZyDQXmmzTFo
98H3IIqzyTtWLa2OX/Qc7Y4fDo9p8fBFxw+73+LFTKWV/yKcK6bINeT1w51K
O0X9sMUdWnrXdj/961+/bdnm9RBqp9G4JX+OqlYxn/79tDH9SsP+eoUiXJPL
L9+1v+op/pwAikduN5/phh8u+hvK9GE2H4Gfhv18xR8r7+M/19i6YPL0/nuj
36L+Zju27rfft6d6s39eXYc9EztXp/2wsHqaXaM/l4u+68evdsMPC8VB+89I
eYvSnJ/H6B75v6kb8dJF3nf5vSnl1YRfszGk7ZYX/vvhpxcR1k2K1s2Lpt92
/LA/zlnHUx6hcsiOlTa/XBZ5/LDQuO2wT1J5jp+mhK0/HUvb9k74z9X/PG28
z0zOnUYeP1ykTmfX6V+P0rjFaPjjj9PiNmL3LM0PC3+swUHB2Jki+ZK9U37d
1u9j99v/9a/f/mr3p9XY8Dz3qNPvHGSj+aVrtVqyatXqyq+ll7F+lKwxIDbG
3++LNdL8sNCcmmH9V2Vd2tx6MfTOaH5g+77mSdDnyiNUTvr5t65Bx7Zz+udR
u5TKfH9//V/lltUjbD/bHl6Lzecn1M5X5nNQP6TFNIboGp9JWQNDdQvNveDX
OdSmq/uUZ84jw8a9xOr4Rc6h+XzS6pVZ6Dh+/mn1P389kbxrWGjuRXu+YX+s
4kUtPw63FbmGWDrpZtrJOpeIzS8trxO2seh+WJ+O1q2wfVWeHXXCGdPqOiq7
VW7muUaLnVSbtcXlNusvW++ZOu5X/WS6fv9dVdnuz4PskzefyUrjVvdM8xx5
j1P0N2S9L9auExtrZscMx2kqbSkGwD+v7nXWml+nnvW5R4vFHwp9rvw2nCtI
ddBYvUbrjfm+SKjfWuPyLe3lSUNZ9yePb5Hf8tOGm/d3wgeG7TBlP4cslNZ8
r+m/j7rHYby7zYWW2w9PerM0P2zzDPp+uOj7rj4qv7zy2wqKlBd+O4Tui+9x
VJ6rnylcZ8/yldjc17G6edH02+74Yd13W3fHT2+qY+WJEw6x+e7yrFGgfmjz
jCH6zWnjVcN31L9u+SGlibS6x0zPnUasvmnzSPn5Z946naF8zk/f1oZl736e
tlD/nql/N20f9ZNbG0/ohy3d58mXDKsDx+KyrA/en8NQbVZ27Ni4lTTS7lGn
3zlIRzEE9XrdrT+MH1770Xvhj5lrB9URNP4y9ETyNHrf87bPK22pnBPtrFne
afQ7lScuWnyDizdLG1McQ3Uyv020E3T6HPr98p+2lmZVz6Dqa+gkmttH5VHe
9gW1EavNOm//fBqqE6rdJ81zhagerHwjb7tOGflM2RT9DWWhZ6t73U49vBWq
ayr95EkPyr+UdvKsgd5JlCZUTsymPF/PR/2uyuvzzHnYLYq873rnsubMaVVe
xPrllT918n4USb/toOMqhrfdeX5ngsosxURp/m6tEVx0Dq+18dxF63TKk8Iy
qKp5nzqVL9n4r3bWd0u7RzOh0+9cL6MYac0vrfm0iJcGAAAA6C1msl49AMSx
mJK09QZg7cHNL91ouHhp/DAAAABAb4EfBigfmytasSdVXwvMDMVIj42Pu/WH
8cMAAAAAvYX6sTSfkcYgVn0tAL2C5gLRmF/W/137sfHDw0P4YQAAAAAAAOgf
LF56mPmlAQAAAAAAoM/QfFqaX7rq6wAAAAAAAADoFuoTHnfjh4dm1foIAAAA
AAAAAJ1G/cOaT2vVKsYPAwAAAAAAQH+g/uFGvTHphxk/DAAAAAAAAP2BYqRd
/3CtRrw0AAAAAAAA9A2aX5r5tAAAAAAAAKDfcPHSjUYyMjJS+bUAAAAAAAAA
dAu/f5jxwwAAAAAAANAvaMzwmvm08MMAAAAAAADQPzg/PDqajNRGmE8LAAAA
AAAA+gYbP6x4acVOV309AAAAAAAAAN1AfcLj42NJrVZLVq/+feXXAwAAAAAA
ANAN1D9cr9eTwcFB+ocBAAAAAACgr1C89HCtVvl1AAAAAAAAAHQL9QnLDyte
mv5hCPno40+SN958e0bHeOvtFckHH35U+W+B3ueVV1/vi3PC2kUZ+SjAbIE8
D2YK9UKYbWj88NjYmvHDVV8LzC7efe+D5F+/uUXylfU2TW66rd7WMZaO3eO+
v+4GmydvvbWi8t9UBa+/8Xby1TmbuXtQ9bWUzZXX3Ox+29a77Ff5eU8/+yKX
1jbbbu+uXUenzvnyK68n19xwm3t/9Peyp551fz/48ONT9tN7efCRJye1Rde6
7cZd9z3kPFjV6QPKyUdngtLBtTfe7tKF/lY+rP/ffsdYru/f98Ajbv9nnnux
a9dcVb7Sjyj/0L0+9cz5ufbXM1FaPv6UX1d+7UUhXU0nLGvy8OLLr7r7+LVv
b9ly31j9J1Yv7OV6UhY/P+QE97t/fcFllV9Lv6M5tDR+eGBggP5hmMLjTy53
eZb41TkXtXWM838z3DyG6lVV/yZx0aULk/kLaq59shvnU1u63YOqf3vZ92xo
4dXud/1gmx919Xpi5915rwPdZypb2lk7TvUC/caBkcW5vzPTc6ahslHH3WSr
PdzfKjP1994HHDllP0tXaWyx4z70S1ZMGfnoTHj40Sen5D+XX3Wj+/83vrdN
ru+rrUf7nz3vklKvK+t9qypf6VVU9upe37JkdNq2n/z8KHevjzv5nFzHsrad
tdFTkq6mE5Y1eXh6+fPNcq/VvrH6T6xeWEU9qZ0yv2x23edg95vVtl51Wuh3
5IdHJ9cfxg9DyG8u+60rJ99Z8V5b31ffyNzT5yXzLhqs/LcYluc+9sTTXTlf
L/jhtHs2m/ywyuhDjj617T64JfW73TFV38v7nZmeMw29d+Zn9fdhx5zm/j7g
kOOjz+XbP9jJlatC9VTVU2zbnO9tm3z88crK01A/M9N8dCYsf/aFKXXXG265
0/29wUbb5/p+p/xw1vuGbykXpT3dz533+sW0bUX98B1L70oOOeoU185T9e8q
CulqOmFZk4eZ+uFYvbCKelI7ZX7Z4IdnDytXfpo0Jvww6w9Dv4AfLu+ezSY/
PFNmQ9kY/r5td9vf/W31WXnv2HMJ46g/+WRls91f6LdV/ZugGiz/sThES+ff
3WyXXN/HD6/9lOmH12ZIV+n3xMqaPMzUD89kvzKZDWU+fnj2oP7h8fFxt94S
6w+Xy6LFN7gy5t4HH00eeOix5IRTz0223+OA5Orrb2vuo7FdimFSe+te+x2e
DNQWR+eq8I/16ONPJSefcb4r2448/ozk2clxXYrXVNyHyrfd9z3E1Yc1ziN2
bXfd80Ay91fnJ7v9+JfJvr842sWMxMaHnXP+pe68r772pvtb/2rckOpGakvR
eJyDjpib7PLjg5Jj557j+iL87yu+Vvv773rRYxgffvix64fTvrruU8+a7/pb
5NF0jRpDmfU8tN3qBUIxqPr76utvnbKf7qeubZ8DjnT3Udd+970PRo+p33Lh
JSPJTw88xuVrp5x5gXvW/j5Z+bza2nUNuh8aP5MnXaks0jn33PdQN/ZLYwNX
vPt+Zpp5avlz7jfpHu//y+OSwYVX5TpXq3vm1y/ee++DZHjRNcl+Bx3r4noV
Y50174quS+lY16R0VqR9Ilav0X3XtS284vpp+2uspLbpnTno8JOSS4evmDK+
VmPndM1WxmtfEfrMkLRzqj925PJr3Xutcx514pnJdTctyf379E7oWpTO3fVN
pHX9rffD3y/NDwt5Yo3v0nalS/tcdQBdcyx2Us9L286a9D6KtdXf584fiF6n
3hVtP/G083L9riLvcJ78U3nevfc/nJx29oUudl3XobFp+u1p16B8TmlT77bS
82XDVzbzt5B28ufYtYb5aLvvQat0HEN5g9KAjfVTXubiI7feM9czS/PDM0nj
rd63Tucrugc635XX3JS88OIrrqzU/uEY2pnkUUbeslax9LomjaccHb+3+Zx1
f+9o3NXcr8g7qXhQ/V/30WIC7F6vmIxV8P2w7sW8i4bcu6H09dsrr58259Hi
a29x++p3xdJ/kbJGZb36CLXvgRPnu/2Ohvtc90jH0/Xnvc95nlWWHy7ybqle
ozxfdYRfHHaiG3+rPs8816nfm1W2KD/S9rANM0+5r3fSnq/qVuGx9b5qmz92
LSxrQrSv8jP3jp9whnu+M/XDsXphO/WkmTyHvGW+zqf3QGlZ51EdO61enYWu
VeWbyhG9cypL9Iyy/HBZ59Y7rHJMfkHPWXmHfES4X958sZdp1OvJyAjx0mWz
1c77unSuctwf02dp6/kXXm6OxQkJ69d2LNUj/VhIe5dVJ1T9JjzON76ztUvX
/rFU7sTOqePcOTo1D7brszxC57G6lcr22DH82FGVSX7fRDvHEKpH6reE++r6
jjjuV+7/ukdZz2OjLXeP/m7lT7aP8qjw/hrhfAeqd6c9P9Xzbb+0fF6/MbZ/
FsrP0p5d6MMtzdh8KeF3FB/Vasxrq3tm9QuNPbJ6c5j+Xnxpav6tMtvqZyFh
PHAasXqN6hlhO7fqM7E0Jr65yQ6uXNd+se1CdaKs64idU+XV9zffLXo81Snk
CVv9PotptfHCKr/8vMPI8sNC9V9t15hR++ygyfc/7Gt27+ZEndLeK//9Fcqv
wv2trSRPf0vRd7hV/qlnm5aO9LtjscnHnHRWdH9dgzyIv287+XPatYb5aNH3
IG86jqE6l3sXJ8cLP/LYsub7n+ddi/nhmabxVu9bp/MVmwdPYwt0X/w8saw8
ShQpay2PlneOfUefF30nVQdOu9f2XfPDatO19jMfpW1/vIWeb5ge2ilr5P9j
1yX/b9ehukKre1zkWcXKjaLv1vU33xHdV3WcJ5Y90/J67f6Fc0GI9z/4sHn/
fD+ct9yXF7RtMS9vc6GpvcE+C8ua2LWGWPtsu344Vi8sWk+a6XNolQcJtTmk
7XfxwKLc+YDVeUOUh6rdVP8P/XBZ51bbW1o5praVIvlir6M8SuOHh4eHK7+W
XsPKCKHyW3Uxte8oL1C7ntVVNfZP9Wq13dn8PGL07vujx5Lv1b56b8PyS+WR
2ujPOm9B8zPVf+04aj/zyx3186ktVbFz+iycLzDND/vHUPuizmv7+vO0ZPnh
vMdQ3crqXtquPjL1u+h+6rh+uZ31PHQ/dW9s//MuHHR/a+5ebX/9jbea2+Rv
1Jan52X5lbB9hcZluvPutK/zxqrfqL0i3DeWz/v1FN3/POlJ12vfUd1FbfLy
Sd/ffNfmvfH7Hfw0ozSmtmWlGb9+2WoeiVb3zOoXVjaqT0LPUvULK9e33XXq
vCt77394M03Y/ocec2qh+5HXD6tfya5NdQClY/1me3bqB9F++k1WFgj9LVrN
RRU7p9WtdA6lU3lMP3ZZ47Va/T7ddz1Ptcfb79Df4XftmKEfVt/P4ced3nyX
/H6EIn5YWN5wxrkXT9vf8rAFLcrndt7hrPxT5ZbV1fR91ReVl6kfw/JE5ZN+
nVDP346nup/a3VUn17thacQ89Ezy5/BaY/lo0fcgbzpOQ/fE3pXnnn/JXU+s
/hsj5odnmsZbvW+dzlf8c+t48q3ql7M5t8vIo4qWtb6P3G73n7n0puu0dCgs
dirvO6n+Jd1XpQ99pu/pb3kg86fmhy2vUB6v9Kb7a5+rPmHHz/LDecsa65O0
56h26EsGL2/6NSOPHy7yrGLlRpF3S33zzfQ3keer71vfsTJY969VnJf5HF1v
GMeiMt3yEPusSLnfjh8OyxpDfe12LL13alNVfjnn+9tNeXdaPZ+Z+OG0elIZ
z6FVHqT7YueQH5QH1Xn8NgI9y1a/X+3AVibp3umd1b0M22B8P1zWuXUPLB0r
X9Dzc/GYXjud2qLz5ou9jlt/eLTh4qWrvpZew8oI5W1hnJziF60+Eda51WZj
70F4LL1PakO0zy32TYT5mZ1DfXz2mcpIlX+KOfP3tfgX4Xu+LD98VhA/55dx
1nbfyg/nOYbqW/aZH6Ml9HesLp2F7R/GU8nT6t4of/BjjVRvsH4tK0cUM2TH
WRH0Q+m+6zgWYx3m88pb7G/VG/Jcs/XxCNX5/W2qu1sZpf6pWPoL05h5gLx1
4rR75tdbw/xZMaxWXttnyudt/zAGXXm+5cOt+q3z+mHFBukzxVL531d5qmd0
7Nyzm5+1M5Yodk4r+xRz5O+rMlDnzBurXuS5CPVlCL8PVm01/vssivph65tW
XcPf195tPa9YvL5PO+9wVv5p63WIsKxWXmV1CevH1ftjn8k7h++P3TOr97eb
P8euVYT5aNH3oEg6LpuYHy4jjecZP9ypfMWv9/ntGu0cK42iZa1fv/ePrfhp
21++sZ13Ms/4YZXRaivxtyn/CL+X5YfzljXf2XTNZ2prDq9nhz1/3vy9rfxw
0WcVKzeKvFt652P3UXUAa4doFVuqvMjyA7VL+Nvs3mrsge1bpNxvxw/H0Hft
OOEYHcWw2/V30g9n1ZPKeA4iKw+yfE//hrHnVgbo/rc6h+rldo4w/l/x3/Yb
fT9c1rnVPmTnDseY2Psh1Bekz7LyxX5AY4a1/vDChQuJly4ZKyPUVhlusz7H
2JpjqjOF76gdK6zLKZ9vlh0TdVl/m7Wt+W2NWVg+ojgU+yzLD4frCft5scWC
tfLDeY5hMY6xslxY/jBTP5zFzw4+bsqzVL5rx5F/zpo31s/nNQ7G6j1qd8t7
fksTaeWP+rK13Z8jx9KMxkiG+1vfYd51c9PumdUvYmsG+uu8WFut9SHF6kHC
+gpbPZu8ftj66/UOtMrfy/LDVv9Tmf1sh9dstfubhu6n4i78MrWoH9azs+P5
8ZlWx04bd+bTzjuclX+qHU3b0tZ8UT+K/xv99yfmY+QDFC9tbXDt5s+xaxVh
Plr0PSiSjssm5ofLSON5/HCn8hWr94V+sp1jtUOsrLVywR/bYFhshXmiou9k
Hj8c+712L/y6d5YfzlPW+F4rNke1+jqbdZoWfrjos4qVG0XeLTue0mC4zfKk
tDzOx87ptxFojKelAWsnKVrul+WHtX59Vn5pv7VTfrhVPams55CVB9k5wnq1
UJunXet7LcYrW5tSbK093Vs7j++Hyzq36iXaLxZHIqw9xeZ9yMoX+4X60qXJ
IPNLl46VEWH7sPBjBFW38PHjo6x+lnWsWLkorO009MM6pvIMlSHqO9b5/Lhr
f06UND+c5hns/bI+myw/nPcYlp8ofie2v+V/Zfhh9b0rbmvP/Q5z8ZZ6Hn5/
m+8h/Dgzof1V7wj74/x83vL4vGudGHru+p7f1++juRHsHBaDZWlGa/2F+1s5
mnfNwbR75o/zy/qezQFhvieW7q2OLawfJI28fljlpf+u6VnqGhRzFtYXyvLD
irXz04V+l+qJ6tMs8syLPBddu9qWhNKbzqX2cduu2Cz7TlE/LGLlquVTYR9H
jHbe4aw8z+YgCdsHDYsxtPSh/oU15fxuue5rmfmzCPPRou9BkXRcNjE/XEYa
z+OHO5WvWL1P6Sg8dll5lChS1lrZEBv7aO07aldq553M44f9Yxtqk3bpzRu/
lOWH85Q1rbyW//618sNFn1Ws3Mj7bj3r+XTF4aSdK8+63uZz/Zhpi5X286ii
5X5ZftjGlqTll0vuHG8+w1a/tR0/nFVPKvM5pOVBfgxHWv5qacaf6y6Gve9p
azLavD/mh7t5bovFUD+1/s7KF/sFzS9dq9WSVatWV34tvUQeD2t5Qoh9bvWn
tvzw+L3N/N0+03vh5/12Hn/sfB4/HI59Mor44bzHsHfWYohCbP6RmfphtUsr
f/XvjfLlND+sslwxJ7E5pzTflPXJ+fm8j8Yv5k1L9hvT+sP8NkOLV8tKMxqb
llXfzHvPWq1fEdZb/fFkWem+1XrVef2wUP1S/fuxdO/3B5Tlh4XmSfXHnRuK
E0yby7gd7Lhp82lpzKLtY+Ms2vHDiov160fq17F3uFXcaLvvcFb6tXSU1u5t
dXCrT9lYuKJ5RBn5swjz0Xbeg7zpuGzS5peeaRqfyXpLM81Xsup9ZeVRRcta
8wCxudFsnjbfsxZ5J9tdb8nGJeT1w3nKGt/Dxer7/tiGVn646LNKS1d53i1/
jEbaucJ7lYXVNaztwu6r36ZQtNwvyw9rbeCs81qMRqf8cFY9qcznkJYHWd05
6/dZPbVVPc6uJ9bXK8L5tLp5bmtn0/zV+rvf/bDyzXq97tYfxg+XS1YZYeNn
NF52pseyNJ/HD1v7mcoRldd+nhnGTojZ4IetnystttfuzUz9sM0FqvulMlzz
49s2q4/EPIRQvLTWobB+MGFlsJ/PKz7On+O/1Xo+hs3BofGMse2KLwrv6Wz0
w4rd1d8HenO8tUMRP+yjclxtoZau/XKwTD9s6P1SH4s/d0aeOK682DHT0pHm
sbJ9rO/O/LA/1ryZjhp3Re+B5nC1uobyGRv3lPY+hLTzDmelX81PpG37pIx/
15g3bbe4UZtDNe/YkTLzZxHmozN9D7LScdm0Wn+43TReph8uej+z6n1l5VFF
y9qifrjIOzmb/LDqnPZbwzndhT+eqpUfLvqs8qw/nPZu2bplImt8VF7Ulqdj
qT7gx0r79Y6i5b7vh21MqI/Nw93KD1s7atp57Zl2yg9n1ZPKfA5peZB/H2Nr
fqkv3rZrLpmsc1g+kDanguUF5ofLPLfNu5d2buubtvHZ/e6HFSOt+aU1nxbx
0uWSVUZY3SE23kblhdbEENbHWIYfVj5r+ypmyd/Xn1t5tvlhy7NEOI+tPydA
UT8czutj7bWaryX8jsWhWV1D91JxO+FcWsLa+yxPCcsDeRTLp/RswjHUMfzn
E8Zji8OOOW2NL/PmXO2EHw7vWdF6q83lqTIitj6i6oJK963mZ8rrh/WMFLMY
nsvvo7D6p6WzPHPlpJ1T9RqdM9Y/ZnPgpKX7dmjlh62/d039aE3cQHOuqMh8
HDYvfcyjaO0SbVM9zt4HPas819nOO5wn/aq+Fq6Pqmdn4y1tfiz1nWTdK81d
qrmjbf3jMvNnEeajRd+DIum4bEI/XFYaz3rfOp2vZNX7ysij2ilri/rhIu+k
+eHYuind9sPCXw/Zv4/+fEiilR8u+qxi6arIu2Vz9cbGeOscOlfe99D6dlU3
0rx/+n84Drpoue+3NYRrwqk9xtpPWvlh3Q87byx+3+LUOzmfVlY9qaznkJUH
WT00traRta/m+f3m62N5jZ6p/WZ//HBZ57Z8I1xXydKfpRVbsws/vCppNBou
Xho/XC5ZZYT6Eu098Nc7U57l91OW6Yd1LMsPFQ9j+yn/8OOOZpsfFvtM5imu
XN16T9fHpfLV8oWwLp2F3YOwbmHrS2y+w9S1Em0+EGF+WHM82Ln9OUF0Ly0P
t/wtVh5oTWi7Dp0vVpaH2HFVX/Dbfv05uf1yrkw/nHbPitZbVc7a85Ln8Ne1
tLpNWhnc6rwxP2yxif74Wf/3++O3bEzXmrTXyHVfwnP6c8HoGm0/pScrm/Km
0zykeTzdV/VJWb1B9UXbZuWp8McZ6hj2nGN+2Mb9Gf4x81D0Hc5Kv0pP9h2V
9bberZ6lv9aKP9+KjWtQmrD0KPy5r60Pvcz8WYT5aNH3oEg6Vj1QcSpas+fd
FvOt5CH0w2Wl8az3rdP5Sla9r4w8qp2yth0/nPed9Oc/Cud/rsIP++vl6N3Q
+CK9x+E6qa38cNFnFUtXRd4tmwcrXPdX3sLysjzzCzbvmxdPJtQvG+5TtNy3
tkA9E2uz0vWrbS+2fxrWLuGfV++4v25dp9dbSqsnlfUcsvIgi0HSOfw2LXlY
u6Y851BMs3/frW6pe+q3/fh+uKxz+2Wbf27lQ9Y3rHq4pe9+98OKkR4bH3fr
D+OHy6VVHcli+ixf0Hvsj3/w277Kipf266QqB3ROK0/s39noh1XOxdaGV93C
+iTy+gy/PqJrsPUEFFPiPw/tZ7/fnov5YdW//XlRdB/Vtuvvr7xc+6atM+/3
maXNS+ujst8/p/qz/b/D+Ncy/XDaPStabxXyaX55Kp/ij6lTDFyr68nrh/21
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
je9tk/zk50cl2+9xQNMTf/sHO1V+vwAAAAAAoL/QmGGtP7xw4ULipXuM2eSH
554+zx3nu5vtkrz73gefH//O8aYnVv9x1fcMAAAAAAD6i/rSpckg80uXzoWX
jCTHnXxO8tTy56ZtG737frft8qtubH62aPEN7rN7H3w0WbHiveT0sy9Kdt3n
4OSgw09Kblkymnz88croeT76+JPkptvqbj/tr+/p+1l++K57Hkjm/ur8ZLcf
/zLZ9xdHu5hojev19zn1zPnJ3gcc6Y6hcci6NvHgw49P2e/Zie+d/5thd6xj
556TLB27x81b7u+jbeofjsVdWwy1rqHqZwYAAAAAAP2F5peu1WrJqlWrK7+W
XkIxwPJ51920ZNq2M8692G3b5ccHNT+Tb9VnRx5/huuPDcfZzvnettPG2b71
9gr3ebivvOdhx5wW9cMHTvjmcH/zvHeO3t3cL7aPuHT4iuY+R514ZnQf9QO/
/8GHLe/R62+87c6r79xwy52VPzMAAAAAAOgfNJ9WvV536w/jh8ulXT9sfla+
ePG1tyRHnXBGc+ztVjvt656Z9lcfrOaiCvfXv7Z/6IevueG25ueHHHWKm+P5
nPMvdf5Vn33t21s299V1q6/Z9tff4o0333bb5Yttmzz2ldfclJx61vyml9f4
YLvWGK+8+nqyyVZ7rBlT/J2tc/lnAAAAAACAslCMtOaX1nxaxEuXy0z88O13
NKbsr7/DbYqhts/0/7T9fT+8YGCRm8tKsdT+/prvyvZf9tSzzc/Txg/Li1u/
7nkXTp2LTfHUtk1x2bF7o+Oab5Z3V/x41c8LAAAAAAD6Cze/dKPh4qXxw+XS
rh/edrf9o8fbepf93Hb12erv086+0P2tz2P76zhF5tPaYKPt3f7X33xH87M0
P6y5r8zLZp173kXT5y1//oWXm35Z/cP6u+pnBQAAAAAA/YdipMfGx936w/jh
cmnXDx879+zo8Y447lduu+am0t/6V3/r89j+Ok7MD7/40qvJWfMucfHMG225
u/PBipP246Jt3zQ/rH5mf62kENum+bjC6zp74tw2HvrDDz+u/DkBAAAAAEB/
YuOHh4fww2XTrh/+9QWXRY9n39lsu73d3/pXf+vz2P46TuiHNQ+1P7bY+ni1
JnARP2zrJ9n3Q2yb5rsOr+vgI09223564DGVPyMAAAAAAOhfLF56mPmlS8f8
8Mjl107bdvwpv071w/sddGz0ePtMrn100BFz3d/6V3/vE+mDFTpO6IftmuSl
5Y21VpNtm/P97XL74auvv63ZN1z0vtx130NuLi7WGwYAAAAAgKrRfFqaX7rq
6+g1bO7nmL/ddtf9Uv2w4og/+PCjKfvrb+vDvWz4SvfZQG3xmrmZJz6P7W/r
MJkf1tpM1m8rT+rv//obb2X2D2u8rz9X9KuvvdncX/NEh79Pnz3y2LLoNgAA
AAAAgNmA+oTH3fjhocy1caA4hx93enMtoUcff6r5ufqLzUumzS+9576HNsfW
6t899zusue3Z5150n+tfm5dq2v4Tf4fzS2tOaItlVryznXfFu+83Y69DP6y5
otPmvLa+5u9sulPy1lsrpnzH5o6+8JKRaffl3PkD7jp23uvAyp8RAAAAAAD0
N+of1nxaq1YxfrhM7r3/4SnjdOUfLSbZfGm0f3hyH3nd72++a9PzxmKvfW8d
7m/zRfvx0hZzbf3Kmt/Z9rd/fT+sNYH98+vatGaxtmleaH8eLvlify6t72++
25R4bEPtA7bPY088XflzAgAAAACA/kT9w416Y9IPM364bK654bYpc1VZ/HTW
fFrqU9X4Yt+HfnezXZL5C2rRc+hzbfd98YmnneeOE/rhTz5Z6c7vH1vXp7HE
dgz93z/+Dbfc6byt7a+xv7ZNY4B33usXU+bQ0rE1Z9aKFe9Fr1fzaNl5dT1V
PyMAAAAAAOhPFCM996STkuOPP5546Q6i8bnqC1V/a9o+5ocvunSh+1teUd/R
WN0859B+y556NpfHVOz0E8ueKbT2r/ztOykeVzy1/DkXw50nHWk/vDAAAAAA
AFSJ5pdeZ511HFVfS78T+mEAAAAAAADoHIqR/vKXv5z8h//4Hyq/ln4HPwwA
AAAAANA91D+s+bQGBgYYP1wxhx1zWrLRlru7McdVXwsAAAAAAECvo7Gea+bT
GsIPAwAAAAAAQN/g/PDoaDJSG2E+LQAAAAAAAOgb3HpLjUYyNDTkYqervh4A
AAAAAACAbqA+4fHxsaRWqyWrV/++8usBAAAAAAAA6AbqH67X68nZZ59D/zAA
AAAAAAD0FX/0R3/E+sMAAAAAAADQV6hPWF54nS+sQ/8wAAAAAAAA9A0aP3zp
pZclCxYsqPxaAAAAAAAAALqF5tDS+OGBgQH6hwEAAAAAAKBvkB8enVx/GD8M
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
Dz/ymHvlldfcW2+9lbj8abcdp+XLVwTn4qtf+1552owZTwfHW9NWrFiZan2d
Ln0jmF56V9x22z1u1qwXUh9vhBBCCNUu9aH1wQ98oGnjD9frhxcXPzRuDOLy
PIsfF/9k7N9t4IflXVX3U50wqm5jdUNx6613Ra7jhz/aLpiv+ql09z0PBH//
/Bd7N6XMixcvcTfceLu76677mrL+VqnSfhx//KnBMbz44qtaWqZvfOP7wXb9
bxmdcrzbRWnPbdQ5qVcHHnRU+b5OwgsvzC7/VrHT/fY/PHZZlVfPlbBmPPl0
xW3oGaRjs3Tpsthy17rtOCnubr81XX/9LeVp+m5Qi26++Y7gnlF5O0WnnX5e
5Dl76KF81kVDCCGEukLyaj/+8Y9df39/U9Zf9sNVfHHYp5oXXjz5j93iKf+r
zJLS3yPed3T8psL/5/nh0Wklz5y1H1bMxuo2Tz01c9z8C39/RXn+IYeMj80r
vhKuMzfbDys+YXXfDVmV9iMrPzx9+hPurLMucC+//Op70zrkeLeL0p7bqHNS
r/7wh5vd/gccPgZ5G5Vr2+12GTdv/vwFwe/k777/g23L9/w3v/XDYH/O+90l
7mc/22uMVwp/P/P9sL9uf33ix5vvGOkj69l2nKL88Jo1a93ll1/nBgdvqfn4
2jpfeumVmtfRTjr9jN+V90nfZU486cwx52LCxELWRUQIIYS6QudfcH7z48Mh
TxzOdy571Pwn3bJJn3ZL8p8uedtPuoXFj7uFkz/oFkz5gFsU+OE/KnviJcMf
H4kJ6295YsWO9f8pG5W2877M2w/vsOPuQZ3myqvG992turHVeZQ/GB7rSrGB
sFfCDydTO/rhKHXK8W4XtdO59SUfqnLdd99Dscscc8xvy88DxVHDWrZsudts
sy3KscM33phfnmd+2M9NNum72u133FNet5478qWN2nacovxwI9RJflh57Pat
5P77J4yZvsuu+wbTFbNHCCGEUPNVKBTc4OBgU9Yd50Nj48Ol/y8vftQtm/Lx
kq/9sFs0+aMlT/yhgAXD73cLhz7glk392Nj86cAD/79uqZj6J25xyRsvHXp/
or61mim1S1SdZs+9DhwzXfEY3wvrX7UV9nXqqecG0w8/4oTyNN8Pr137prvn
ngeDeMIxx54c5BHG9Q30zDPPusuv6HGHHHqsO+GE04J8w3CdVm0utR6r88pT
iOeffzHRviqX8nfnXxrki6od59133z+ubaTyNXVM+vpuCMqvPGFt84gjfzNm
uXnz5gf1cpX3oouuDHLL1d46iarth++ZFixYFMTzdIwVp7n/gYmxff2ojjrt
4elBPPGoo09yd9x5b6q+mHR8tE2diyTlNOlaUV35uONPCa4JtQsN+xnp2usG
gt+rXeYjjzzmzj7n98HxU679unXrgmV0PrTcYYcfH1w38knr149vW6o+9uTd
tK86n2pDOjw8NfG+ml5//Q130023B+dX18TQ0JTI9rJ+2eXt9H9tV9uPa38f
pbTnNnxOGr3/pmp+WDFiex6cVDovcZo9+6Wyf1L7XlMlP2yy9htC+bmN2nac
ovywrmXd/9b+w5euWTvvOl+6Nv12z/fe+2Aw39Z5Sule0N/5fLFiOXRutZzi
rLq+1D5X953u4Z6eP0TeS5KuFd3veqbpPhoYvNnNmfPymGXUr4PWredyWHoe
a174Nzoumn71NTk3q3Sv65xtseVO436vODzfyhBCCKHWKT9pkuttUv/Sy/Mf
GUM1P7x6yqfd2slfKE37vJuf36Tkbf+m5Hc/5xYOf8otKv6FWzz0WTfv/n9w
iwqfLnngPy354U+U5n/ALZn6Prd8mtb/Wbfggb92C/Mfjxy/qZV+WHnS5nf8
+K/q5pquXET5HP1fftWX6kiarnqhyfzwT3faoxw/8Pn2dzZ3CxcuGrOeqLZp
VqbHH3+yvFxcu0F/+1FS7GjnXfaJ/K18gPoVM8nzWz6m8jn9spjkPaLWtfU2
vyj7ukqqth/mmX5z4hlBOcLL7b33QYEf8rVgwcJyW9Mwflynkqxdqb4FJD3e
xeLUyGVUh1Y/Sb7Mq+j7QXh55V/OnvNS5D4oR9PfX52v7XfYLXK72oco/xwl
+Yi4625WyPNb2XUPRP0mfG/EKe25DZ+TRu6/r2p+WL7Mjk342gvLzq/2z5TE
D0vnnHtR2WPZ86jebccpyg8rphsupzyvvtHFPT/0TUWyXJsw8rWVJO+t5X71
q0PLz9TwM1Pt+H3pW2Hc/e5/u7PjHvas8tK2vL5L+bJYvZ79lWTnStciQggh
hJor1YuKxaLL5cZ/s2+EYuPDEX1kzc//rVs27cfurdmHObfkAvfu0svd+pdO
dIse3sm9lv9XN6/4Kbdg6P+4d9842a16/Dtu8ZT3B/54yeSPBp54Yf6v3Nrp
25QMzBnB/7P2w4ppWvzX7z/G4oJXX90fxC3C9SP1N231KT8GaX7Y6q+XXXZt
EPdRfdI8xT77HlJeXrFEW16xLsVS+vtvDLxluF6r+JfVHYX+FstXrKi4j4r7
WXn0e8UAVW82P6LYisn8sKF5ilWbT/DzOuXjdWx0jKxuKg8dzisPq9p+mGcS
ygFV3Edxdh03m97T+wfvXKwp92um+rTaPqq8B//66PLyUe3Dwwp7r2rlVOzJ
zqnq8oq333jjbeU8e5VdubAmW1bo+soXikEMKuxFtW/azimj+QfC7yfJvMl/
/ffWwTrU120ud2N52ZtvuaPqvuqY2vLypuqfWNOs7Dqffn6CX3blh+r46tjY
cRevvz6v6nbTntsoP9yI/Q+rmh/WfaD5+s5VTSpT+dkw6uOS+mGd9/eO5xsN
2XackvphnR+7NnV9q68E5Y3o+Gu65cfoHvPLr3Orv9UfdiX595i2q3tCbVG0
Xv9+Memesm3r+lPugu4Pv52v2lVL/vPdL4dfTp17X5abHtWGxqQYtv2+nrbW
CCGEEEom9aeVz+ebNv5wZJ502AsHfM6tmXu2e3ttj3vrlYPcW49t7958dge3
ZvGJzq29wa1++Qy36NF/cIumfdW5dTe75U/v5uZPfb9bELQp/kBpvZ9wcyd+
yS16+ujS8pNL3vrvM28/LFkcVHEYk2ISmqaYnfL1rO5juXtW7wzXpXw/LN/p
y7yPH6tQzp08gnL3fKkubOvx63G1tGdV3VDbCOe1Wr6f77l9P6x6pi/VLc0X
qa7rSznENi+c2xqlJO2HVY+1voxMymvXPPkkk+qt5o/C3wYUK9K8PfbYv2qZ
orxXpXJqneGySL4/98cVsuMTjpfpe4Idc+V/Rm1DsVyTfccI9+MjD6FjJ19e
STqPtr1LLr1mXNmtr6ATvdxc3/f73zuU32rrUn56NaU9t1HnpN79j1I1P6z2
D5p/8innVF2X8j/smNg3tqR+WO0V7LeWG1LvtuOU1A+bH1dbAF/Kz9bx/v1F
V46ZbutM2n7Y98MzZ45tk2K5M/p2YtI3Rrsnw+0hbrn1zvK6lBcjHXjgkcHf
ahdgsrYu5pX9bwfWDjuqHYpyD+xbqd3L1b7/IYQQQqgxGhoaalp/WrHjBXvj
Ji0s/JVb8tTBzr070a14Yi+3eMImbtXUvwxivwse+T9u4YztnJt3gFv58Gfd
4qn/UfK7E9yqGfu4VYX/6dYW/odbPvwxtzK/sZs/8S/d0qf3K80vto0fVvxT
dRuL26ovW/0tT2yyfGNrC6dYrv5W7NWX+eGoeq/qj1aP8uOGcTJPpZxcUyP7
d/K9jOVh+n443G7Pyh9Xp5dXShovSeKH9Z0iLIsDyrOZ7HuG5oWlOm3S45XW
D1tdWsclrN6+68d5O/OU06Y9OmbZx0a3Ec7Zl84fzWn2PbTllMorqx13Wtkx
8XPgfakdqOYrRyFc9qjxZSx3Oeyto5T23Eadk3r3P0rV/LDlayQZN9n/3vDo
o48H05L6YcmOtX1Pq3fbcUrqh88YzS/R8zBJnkWtfjj8bVGaPOXhcWW054z/
/dKXfc+x9uTKF9DfapNv0rczHWf1pa151ie3fU+Ie17YsRBR/ZohhBBCqHlS
f1rNypeO9cOlfxcVPuYW5z/hFhf/rWSg7nJrnz3BLZjwj27x8Ifdgikbu5WF
z7tVQ592KyZ9zi29v+SRh/7arZz2g8DvrnryILdq8vvcmin/wy1++CNu2dRP
lDzwZ9ySx/dwbk3eLWgTP6y8UL8OqLp3OD6mHE5Ns35qrI6q+povv/1wlKwu
5bfZVR1M/kkeQW3w5IP9tpV+P0G1+mHllCqOoxiccmJVZ/RzYK1fHL/9cFgW
TxbyJGFsnp/bGKckfljjXYWlmFk4XmS+NKpcfj5vuN12WGn8sHyYrVf1+Lhj
4ZfTjrflwZqsDbv//cV0xZW94/ywclVt/bbPyq1+4omnKu6fSbkI+p2utSip
fyFbt43LbWUPt4mWlG8dd77CSntuo85JvfsfpWp+2OL01drCSv7xU36JlNQP
+3khlmdR77bjlNQPq12Af4/pOlXehXLs/f60TLX6YbVvCMuPl5vs2Rj+rmSy
eLD6BZPM49ozze5d5f3bNz7btnIL9He4/0CTHYekY1ohhBBCqHEaLhabNv5w
pdjwokkbu6WFz7m103/i3PJiycP+KBhDSWMrzZ/8idK8v3brJ33KvT1hY7d2
wl+4JRP+wa0YLtVn1z/iFj5znps9/E33wtR/cc88/HX3wvD33UuTtnZvPHKi
c8smtU18WLIcOdX9LG9TbXtNylnWNMUV/PzpcH+41cZbCvth1en8uqbVRa08
jfDDfj6iod/7njuJH7ZYipUxjM3z4zBxqnW8JXmesGcKH7uocunfav1wp/HD
6k87ybFI4ofNK0X5Yeu/KuyFHn7ksTH9nRlbbvUzt6RKn9q2TvXTFSXfg1j+
eVzZJX03SuuHk57bqHNS7/5HqZofthzZqH6GwzJPJWws4aR+WNu331oOb73b
jlNSPyzpO4i+BUY9q8Ix41r9cNRzQznP4TLa3/rGFyX7PuP3xW3fxfTtU3Fd
/d/aqOhZZ+Pp2fWpNtNh+X1w6R5BCCGEUOtk7Yf7+1rph/9k1A//uVsx9Pfu
zVm7uneXPebmTvh24IXnTft/3JKp/zPwxKuG/sy9mf+QW5b/qHtj+HNuwcT/
cu6tR0sViJL/ePuxIMf63XeHSv9/sjStNH39yL/zCv/YNn7Y6vTKwbO6f9jr
mke1+Jr6jw4rrR+2WKLyseWN/XhLOO9PSuuH/Zxo1Wf9NoXK2U7jh63NdJJ6
eTU10g/LA2ma3+dULUrjh9XO1o6d+lZLokb6YZPOm+Kqfv+/4fbMYSkP177t
RGn69CfGXQPt5odNtex/lKr5Yb9fAD+3I0pHHnXiuPskqR82j+/nDte77Til
8cO+FFNV7NX60AvfG832w5abE9dOXP0ear7fXtj6FFRc1/Kt7VjataN4vPXT
FdVHoXLR1Z+gzgdthhFCCKHWS/nS/a3Kl/b88LKhz7jVxS+6dTO2de+uKLqX
H9zUrQjGZfpfbunkjdyKSR91K/MlzyzvPPmjbl5xE7dw8qYl7zvJLZp5klsw
9GX3+uQvucXFf3SLS/9fOOHrbsUTh5X88FQ3r43iwzb2p9Xxovpfsv5+bRn1
gxRWGj/sj3Ec7kfGrwdG+eGotqZRUntPW95yX8PzkvrhJV79OWpcX01TjmaS
MX8r7Udaz2T12VNC/f1IWrfKJKqNj1zJD0eV0+rOUW1q5Ze1Td8/NsIP6xuN
8j2jYqDWZ3S1sXb8ayuq799zR8eR8ftBbxc/3Ij9j1I1P6zzacdA7Q2i8oQl
9Slmx9YfwzeJH7bjLvw2+PVuO05J/bCOt3KOw/ePn5vtXxc2LUm/elJaP2zX
W1ROs64LO1b+mGH61qhp6rNa8/3vDfbs1/dC/eu3m0cIIYRQ+0j9aal/6WZ8
l67kh5cOfcqtGPqCW1r8rnNvFt3SWXu7eZP+zK2e+EG3ZtJHgpiw+o1eVPyE
mz/lk+4N+eFppbrL2w+65TMPccuHNQbxxm5t8UNu5fAn3bKJX3BrZuxVqthO
a6t8aT/eJ8L9J0t+3y4iKv82jR/2xwJRLrJfFn+8YN8PW19IQjmj1TTLW145
vibVe60P7aR+WLJ4tmKyij375bLvBH5cJk6V9iOtZ7L6rPDHBtY+Wf+02tda
/HClcp7hjWPl172VS6n245rnj2XVCD9sbd2D+FjpWjPpuWA+QWP4VpPF2JRH
av3wSv6x1Ng61coutdIPN2r/w6rmhyXrIy04r4ccG/hBk+5ZP46rbwn+9Rbn
hxcsWBTEOf2xhc4I9dFX77bjlNQPW16Mvjv5stxuLet/a7NnWpLrQUrrh/0x
pXSN2jtRx8Fiw3p++WXSs8DvL+G88y4uz1u79s0xz/W4cqss+h6h+zTcDzxC
CCGEmq9i0H64b1yMrxGq5IfVVnjJ8KfcvMI/uVULrnFvr7revTT8bTdvwmfc
8of+0q0c+jO3IP95t+jRH7qlz23nXpvxJTf/Yfnh+9yyZ37tlhf+PBh7ePXw
h0ue+pNuycTPu9WP79l2flhS/0JWJ/LHXjX5daq4fOW0+dLHHX9KeZrqnfJR
tg371/fD69atG1OvU0619XkdJ4tjmo81T5u2/bC0YMHCMb/z1yfU13Bc/MpX
pf1I65kkjads61J9XMfRb+sYFcMNK8oPVyqn+uT2v1uoTNp/W17b9+OvjcqX
tv6ChHyc+gLy+w3z273HSfE+/zxqPf7ffl9ylcoutTpfuhH7H1YSPyyPaeN3
GTpn1r+2f0/IY/myc2z3teH/TsT1RVfPtuOU1A/7Y1Vrmzon9r0n7C0ltSOx
ebqmLgqNxxRWWj8s2ZhLVlb/GaTj6n8vMFm/EMLGsooqs//d0Jc/llMtOfkI
IYQQql36/q34cLP601qmvGiPsh8e7VdraYmFxb9ws4a+495+8wb31sor3bwZ
v3Cz7/2Be+WhTd3Ch3d2btW17u2Vp7lXHvub0t//6dz6e93Spw9yy/KfdIuL
Hyv55g+OxJEnfM6teHx3596c0nZ+WHV08zxxUh9EQYzGi/v5srFqkvphfd+Q
n/DrxvIDU6c+Uo7h6f++FKf268F+TDRKyiH0fZuVzx//yb6zqI+aSn5YUp9j
qg/6flPlVxs9xWiSKm4/rD8cP2ZuivPDksYhtmPm+4O4fmjDkq/Sb8K5AZWO
t/ZX58//5iDUDjScixznKZVXqulR7XnND+u7iUk+XOMwhfs2kieQ70oqeQad
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
761mHdes600AaVn26jy3duZM9/b06e7dadOgC9C51jnXuc/6+oPqZF1fAAAA
6ETUZljjDw8ODrY0X1o+OKkftn6xrH2wxYOlGUveGBf/1d9PlqZL8s34YYDK
rJr1QubeDLJF10DW1yFUJuv6AgAAQKeSnzTJ9ba4f2nzs/4YwXF+2NoXh7H+
t6L605IHvrM0rVof0806plnXmwCSghcGA0/c3mRdVwAAAOhU1L90Lpdz69at
b/i643yoeV951nCbYsV8/T6x/Bhy1Dr8ePApob63rK+tcN/T+GGAkRzprD0Y
tBfkTrcvWdcVAAAAOhH1p5XP54Pxh1vph4X1f+V7VcWLNd3vE6uaH7a/re2w
nz9t4xfHraNZxzXrehNAEtR2NGv/Be2Fromsr0uIuV/boM4AAADQaShHWv1L
qz+tVo+35LcB9tv46v/mY6Vq+dLh9fl+OCoOjR8GGIG+syCMromsr0uIJuv6
AgAAQCcS9C9dKAT50q32w8Lv90r+NtxftPWnpTGH/f60Thn1vkn9sN8mGT8M
rebBBye5bbfb0Z119nmZl8Wnmje69FOfchN22mnc9Dcfesg9e9rpAfp/1h4O
GkvW1yVEk3V9AQAAoBNRjvRwsRiMP5yFH7b2vaZCybd+446Lx+VF2xhLF80s
Bv8qp9ryoyv5YY1TXCnG3Kzj2oi6zx133OOuuOIa99pr8e35+voGA7Komx19
zPHu83+9ibvnngdil8kXJgf7kIQZM54Z89v58xe7/tz17oADfx14yZ/9fGd3
1NHHBeuM2tbQ0JTI9d5//wT3+usLEu2TfOvhRxztdvrZzm77HXZyBx98qLvh
hlvcggVLxi377LOzy9vQuaq03n/78lfdX3328wHFYvv4jWq+aMJPfzrOEw/v
tZe7epNNgulC/9f81668MnMfB/jhTibr+gIAAEAnYu2H+/uy8cMmv08siwf7
OdSaLx9s3lbzwu2Ho/ywxZfDsecNwQ9vseXWgX+a9vBjscv8/T98MVgmi7rZ
oYceGWz7rrvui13mqKOOK/vAalzXkyv/Tl7zn//lX2OX3WXX3d3ChUvHbEv+
vNL6v/mtb7vBwRsjyynvve22O8T+9t+/8jU3e/YrY34jD2zzN//JVhWP1ZZb
bVtedtas2amP9TXX9AYeXdx330MNO4dJvJF54sF/+9fg7+u/9rWAmaeeFqD/
mzfu+6d/co8cfHDVdc7v6y3/5p0pU8bNt3nmsef39wV/X/aZz7hlt942bvlc
6VrR/OdOP8O9O3Wqu/yznw3+Luy++7hlX7nssvL6VQ5Nu22zzcrTwgz867+V
f6vth+df9/d/5+7efHO36t5739u/0fKKtydPHjctioWDg2O28fKll1bcrjG0
516x69dxuPW733XTDjpoTPnwwxsmWdcXAAAAOhHLl+5vcf/SYT8c7k/LcqgP
L/0tb2w5z37fW9X8sMWGFVuO236zjmsj6j7d5od7egeC38h3+vHUOBQ39rdV
zQ8bN95465jfyVfLX1f7nfz0q6++Uf5dGj/8yiuvB/s3ffqMuo61uOqq6xp2
DpN4I/m0S/7ik7G502L5HXcEcWP5Yd/bxfFGz3WJ/PCrl18+zj/fUPLf8rz+
8v3//M/BPOVv6+/7t9uu7FXD6560yy7BvKs+//nyeuQZ4/ymvHYSX9r7pS+5
taO543553y4Wx02L9MMDubF++OKLE23XPH+19V+9yRfcyrvvxg9vwGRdXwAA
AOhU1J+W+pduxrqTth/2c6TD/WnJz/oxX6HlC6Ox3yg/LF/tx5670Q8/M/N5
N2XKI27evEUVt/PCCy+5xx57qmp5lLetXF95O/2dxA/PmfOqe+qp58rsutue
ZV93yqlnjJln5fzhjzYvL7PJ3/y9u+nm24N851nPz3GnnX7WGI/6+99fWt6W
74cPO/wo9+STzwY51Oeed8E4f+3nXJ988ulj5p1//kWBJ9f+Kp6snHCbt+NP
f17+XRo/rO3ddff97u67HxyXe619/8P1NwdtiwcGbnCPP/50eZ6OiX6n7dq2
dNw17emnn6/7GkvijRSjlZ+6/itfqeiJxcMHHzwmrtsMPyweP+qoin54TslL
2rLheLI8sqZP/MUvytPMD8tHL7rxxjHI64d96ayzznJrHnwwmP9Q6XjYtmae
ckoiPyzvG96OLVfJDz95wgnjfrfmgQei13/99e7pk05yN37jG+Xp92y1FX64
BtRm4qtf/Y+qbR30vNtqq+3czjvv3pRyZF1XAAAA6EQUEy4G7Yf7gtzpRq+/
mh82D6u2wOF5igUrxutPk1e2eLEkP23zzENbXrUU/n03+GF5OJtu7LnXPmUf
a+RK3uvr3/hmeZl//OL/DjxleBszZ77ofvzjLcasT+1qD/71YVX9cJj9Dzi4
vI6LLrps3HzFX/3tRK37oIMOLc9XuWy674dPP/3sMb+Rl/7f//TP5fnHHvub
8rxv/Oem5enHn3DSuO3Jo9p8eWPzs2n88He++73ysvLpmqYc7SOOPCYyFr3n
nr8M/Lhyq+Pi1Wef/bu6r7E0flheN6o9cRZ+WCy5+ZZYP6wcZfOQvnfWb+z3
c6++apwfVoy7UrmjvKrvsR8aPS7V/LBNS7qNuO36xK3/nalTx8S/3xoexg+n
RH5Y99wXS8/IOE8sL7zZZv8dLLfllts2pRxZ1xcAAAA6FcWH1Z/WunWtbz8s
f2v50dW8q2K+5nX1m/Dyfvtj5VZXigt3qh9+6KF82bf99uTT3JlnnVv2e/vs
u395ObVBteX22OOX7teHHF72iyeedEp5OcVl7fdqQyv/tuOOPyv/ttF++N57
HxyTnxy1jueemzMmfmzTK/lhce21feN8tOKvvseM63fLb8usmLum1euHL730
yjH7oXXoX5t24omnuBdffDnWD5933oV1X2Np/bD+ruSJW+mH//CVrwReL8oP
i3u32SaYdvO3vlWe9tgRR4zLlW6EH1Yb4+CYlI5Nu/lhobbDNm9ebw9+uAau
vron1hP7Xnizzf4r+LsZZci6rgAAANCJKD5cyBdG/XDr2w8LG0dYUv/Rfhth
awf88sr3+qG2/rTCsWTLrQ7/vpv8sPpG1t+XX3F1eZriwoo37vurA8rTFAvW
cvKfNk2xSJuu/qw0TbnD+nvTb28WxDNtWfV9VSmGG0c1P3zGGeeU5//yl/vF
rsf3jZZfXM0PP/LIE+N89KRJw+Vp8rxx27NvAOKyy64KptXrh/3+uyx/W3Fs
9b0lv66cb/t9lu2Hw364kiduth+WL/R936OHHRbrh+dceGF5uTfz+WDaTf/5
nyPl/vnPx2zP/LD6n1J7YZ+nfvObcb70xfPOC9ap9rjTRz22eKE0PYkfLv5y
bzd5333KPHPyyYn88LV/+3fjyqd+tJL4bX0D0Lwnjj0WP1wjUZ64VV5YZF1f
AAAA6ESUIx3Eh3O5TPKlfU9scWJJ/neGF++N6k/LjzHbssq/TrrNTvTD8oEj
9bL/js3rs/iq2umG5x1z7AnBPOtzSrFj/R01ppLlWjfSD/u50Mcdf2Lsevz2
wNbfcjU/rO8CfnxVsWHlltvfOmZJyq24rabV64ft2AodS7WF1jmLGtspSz+s
8YWjYqdRntj8sN/mttF+WH9PO/DA8jJqQxvlh+UJzUfOPv/8wL/ab8J+vVJ/
WvKrYV8axQ1f/7pbVygk8sNRv03ih6N49YorEvlh9feleeprGj9cO74n1vfE
VnlhkXV9AQAAoBNR/9Lvf//73fve976mrD+NN5WvlZ8Nj0lsbYKjxkySPzYv
7Lcl7lY//Pzzc8Z4Rc1X38n++Ljyun57WJ+w5/vq174R/B0ea0iYn2ukH1Zc
2+b7fVf5yC/6vvbll+cG06v54QcemFier9xvTZvx5MzI3Osw3//Bj8vLqe8r
TavXDysm7B9zvxzqO9vvyzpLPyzUN3HQr3NoetgT373FFsGy1dbn++Eo71bN
DytP+g+j/XspRmr9Wvt+WKj/KE1/YMcdgtitxYDfCfVPbX44v+uubn3JN/vY
eEm+L5X/VqzZYq5qP+yvs5ofVj9XigkbL11ySSI/LF8fLp/lfVfyw/rb5s2p
kHONH06GeeL3vqU13wuLrOsLAAAAnYhypDfaaCO30R9t1JT1p/WnUaivLZO8
7x0vzwzyqv34sbxwOId6Q/fD2++wU2xsVih/2TytP93invLBlv8s5Kk03/fD
hx121BjkQZVXfdvtdwfLWgxY7VjD299t970a7oenTZtenq/2zFGx0rgc52p+
WO2ibb68vE33c69nzHhm3O/UpthfRvF1Ta/XDwv1660c96ixlv11Zu2HzfdG
5UH7nlix5GqxYaE8Y/NnC0bHGTKW3HxzeZ7+H+WHxfLbbh8XNw37YflHay9s
YzBZG98oP5y2/fDsCy4YF6dN4odb3X5Y/tvmWX/U+OH6ME/cKi8ssq4vAAAA
dCKKD998yy3uwgsvzKz9cNJ86idD+dPWXlj9bNW63mYd10bUfdQXlupbJ/32
1Mj5D00oBPP9PpbDaGxd3/8qZ1htg+PypcOo3XGc51WMtdF+WP7Xj5mq/y5/
vvpctu0KeX6bV8kP33rrnWO8ptpF2zz5Tpsu3+q3kxZ7//JX5fn6vmDTG+GH
fRSDP/+Ci8eUU/ureb4fvuDCixtWv07qh+VxFfe9epNNIscWvvvHPw68lmKm
SddpfTLf8p3vlP2bcqfv/MEPyh427PV8PyxmnnpqRT+svpTDnvmVyy5rmB8W
1peW/m03P7zqnnuC9s82XWMvJTk3rfB2nUC18ZcaTdb1BQAAgE5EbYZH+tPq
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
4rDL5XJu/fq3Mi8PAAAAAAAAQCtQfDifz7ve3l7iwwAAAAAAANBVKF+6P5fL
vBwAAAAAAAAArUIxYflh5UsTHwYAAAAAAIBuQe2Hh4dH2g9nXRYAAAAAAACA
VqE+tNR+uKenh/gwAAAAAAAAdA3yw0Oj4w/jhwEAAAAAAKBbWL16jSuU/DDj
DwMAAAAAAEA3ofhwsVgMxlti/GEAAAAAAADoJgr5vBsYIF8aAAAAAAAAugf1
L632w/39/ZmXBQAAAAAAAKBVBOMPDxWCfOmsywIAAAAAAADQKtRmWOMPDw4O
ki8NAAAAAAAAXUV+0iTXS//SAAAAAAAA0GWof+lcLufWrVufeVkAAAAAAAAA
WoH608rn88H4w/hhAAAAAAAA6BaUI63+pdWfFvnSYCxbviLzMsCGy6uvvZ55
GYBzCN3DipWr3BvzFrR0m/MXLOJdCVXhWQqdQic/84L+pQuFIF8aP9xcFi1e
6m645W531vmXu9Wr12RenjCvzZ3ntvvFfu4rm27pvvytLdzRvzkr8zK1Az/c
etfgmEwanpp5WTaE/dp+lwOC6+e3Z1yY+T5uyAxNecSdctZFbt+Dj3OHHXOq
67/+NvfCiy9FLnvEcacH5/LM8y7r+nP4+hsLgmPx1e9snVkZHspPcbfd9UCp
LPMbtk6de60zKc9HXCvyi5dc2R9cL3vud5Q78vgz3GVX54I6Ttx273kgP27d
d9030U1//Cm3aNGSxOWvZdtxhJ9di5csc//x3W2Ca1blbcU51ra1PV1n8+en
34ek149y+HS89ffSZcvHXA8XX9HnTjv74nHn5qWXX8vs2oexZP0sfXzGM8F1
8dQzs4K/J099NPh79pxXqv5WdVYt26p7SrTD87tbuOm2e4NjrWs0yfLNfOa1
A8qRHi4Wg/GH8cPN5aLLe4NrSdx+94OZlyeM6hhWvu/95BdBebMuU6vQM191
sxlPPTtu3qbf3zE4JqqjZF3ORtKs/bJ6qf+MfeXV14Pj2zNwc+b73e689Mpr
bvPt9ijfi2H2O+SEIBbm/+ZXvz4+mHfS6Rc07Rym4eFHnwjO930PDbX8+CkW
Y8cqq3Oo+oK2/+CE4Yat8+IremOviSjOv/ia8m/lqY4/+dzYZVUniquvV9uO
rpFpjzweW+56th1H+Nmlur6t75wLrqjp+FZ6B0Qhb2/b1PXerOtn4aIl5e3o
2WDLnHbOJRXPi9bRN3hrZvcAjFDvs7Redtrj4GD7vzn1d8Hf3938Z8HfSd7F
Q8Vp5Wup0eWKu9/a4fndaVxx7WDkt0c9H3Scf7LDXonW08xnXjtg7Yf7+/DD
zea/t9ylfC3tvPchmZfHR98BrWyNrMNtKOh5oH1XnTM8Dz+cjgmTJgexH/se
LbQNbUt1g6z3u53Rd4Ovf2/b8r246Q9/6o484Ux34mkXuK1/tm95+g+33i2o
J9vvGu2Ho85hGlSOrJ5z7VCfsnOoGH+j1ql7SHVbn2/+1/bBdvRveN4d9zxU
/u0u+xw2xn9q/omnne923O3Acj6Q+OWBx4zbrs3b8qe/LK9b11/Y006bPiOy
3PVsO46oZ9eV1/0huO4WpohZ+1R6B0ShmLRis0mXr/X6WblydfkY+fVZ3w/v
uu8RAbvtc3jZ7xhX91yf2X0A9T9L62X3/Y4MroMzzrs0+NviHspVrPbbZvrh
uPutHZ7fnYYdzyeffm7M9LR+uJnPvHbA8qX76V+6qfjfr41a39vNQHWZZj33
NgTww83dFn44GfKP9nxQLlN4/uCNd5Y9xNnnvxcHa7Qfrpdu98N2bymnuJnb
+fWRJwfbOeCwE2OXua7/pvLxkF9atWr1mPn622JI4vqb7xoz36aH90W5u4r/
f/P7O5TfHeH6Vr3brnZ8G/nsSuuHW3n92PHx80LMD+u7Qvj3ypfWt7Q0dV3o
TOzdYPkidp3738viwA93Bo3yw92A+tNS/9JZl6OTOfakc0a+gR98XPCdXf9X
/kLc8mrLe/k1A27/Q38TfPfVt71HH3sy1TYV+1cem9or77z3oUFbROX/+3US
/V/v1b0POKb8/V51WVEttqG6i5aTl3521ovB81axgAMPP8n1Dt4S+zu1D/nD
TXcGy6ltpPJ2/DwwoWek1h1uBzXz2ReC6crbCK934IbbE5XbR897/cbiLMpp
0t8XXnpdeRm/7qVzoHOh46kYx4MTCrHrVvsulVP1QMX3dOzTthtPcg4N5Qmq
7GrXYfslP6Jv0xMKk8ctH65T2jGPq8Orbqv51eqgN99+X7Cc2inpb7Vp1XUf
vr7C21HsQ35P18QhR58S5FPpe2Sl/VQug+KnOsbyh9a+TvkOWk73jryCyr58
+cpUxz7JdSqmTJselOem2+4JynRN7w3B/uqeOvf3V0XuQxS6h+y9dcxJZ8cu
p+suiAmWfIiuD03z/fCcl14N2hUqLqB2x9qHcP8Xfpm1vK533bvW/jh8Do1q
zyXFt/U7q+t850c7lc93uK3pc7NmB+tSW1K1KVUbEp23Ss8ZrUPnWdvWvsmP
KX7mLx+uT6k9pfpC0DWi86H2dPXcszoGyu/V825J6dzqutD51n7YMmpvou3r
nIa3oWvW7k3tw7X9N47Lf09KEj9sflVliusHRdeozpWdM39enB/2r1vL79U2
GrntOKL88AWXXBscV50ff9knnpwZnHfdD7pPdK3rOrX5Sd4BUeh5pevA/y6V
dJvVCF8/9g3MX6aSHxZ6Btgz16a9OPvlYN+uiokZn/m7y4L5auut86L9i7p3
hZ49ihVpvtZbbZ+0/OSHHwveYbr2j/vtucH7XPfQyWf+fkzfB9WeT0bSZ0j5
nJWez3qe6H5RPoLahIU9go+eOaefe0mwbV1fUcvW+iy1ayjJO0/UWic8tPSM
0XWg3+pv9RGjvxW3rvbbSn641mu82v3WDs/vtOcmDq1feSs6B7rmVSatJ7xc
mrp0mnpa7vrby9+mhd4X+vvWO+8PlvX9sMqqPkqCe6O0z8qxDvcDF/XMq7X+
o2eMyqdldYz1HtS5uvPeCSP1+NJ1kuZYNwLFhItB++G+ct0KGouOq+U/qS6k
d5H+/6Ntd49cXvewtTkJo/dVkm2qfmV10jCqc1hs2m+bFEbXcqVtbLfzyHPV
+vIJ/36bn+877prS+ypue/47Ou6bgdrA2PLh9549X5M85424dm1aly1jdS//
ueJjeUhj1nvKeZHLKmfe7xOlEefQsHMQ165M0/3lw3VKi03q+RQui8ps66/m
h2099j067nzr+We/0TMwahm9h5+e+XzkfurdEl5eMRG9p6PuH713w94pjqTX
qdC7weqlVo8NX0tJ6gn65mH7XOm7id5J8svC+msyP6y6kp9vbehe9ffdyqxj
Yp7F7tmoc5j0uSR/Gnfc/P5bVBeOWkbnNlzHs+eMfhO1fV3H/r3g16f07o7a
TlSbkKT3rL5PabqOsx/b9H2H5RP73090P6vtd9Q2lOOqun3S55ZRzQ9b3o+I
qo/76Llpy/r3nE2rFOv2719rD9iIbccR5Yft2vDLqfdH3HNF9ezgvCd4B0Qh
b2Tr8qcn2WY1wtePfutfX6KaH1Y+rL0rbJq8mV3TUb+xZ6t8qp5Bdkx7cuPb
mlrOj36zpIpPUD1gx10PiDwu+m4Zvn+qPZ/SPkPC12iYcD1Dz8q4d+/BR/52
zLK1PEsrlSfqnVdPnVDvieAcjrYXtmdWtXtSxPnheq7xavdbOzy/05ybOLQd
/3rwkV/338dp6tJp6mnyGFHbl1fV8uaH1V+J1bnD58SPSUU982qp/1i/XGFU
3p/t+evg/1HfGVuB4sPqT2vdOtoPNwPFEHV+9TzTNe170Kg6kL3r9R1P183E
oSnusGNPK/9G76pK29M27J7Rdav3hr4H6Rus1ZU3337PoH6mOKPyZvRtzpbX
3yKqf1Ifu4eF7gN9f5TH8e8rv88GxW3tXtX9LV+hb19+jqj1M2bvSD03/G36
bbD99i/6LmvPtKjYaRw6ltpXa3Ol71T6248x2/kQ2jftk74r+2Xx3786BjZd
3wX13UzvLHuf6Rlc7dtTmnNov/Gfoz/d/aAgXq5nisVexKwX5ozbL6tTmgfU
9sLHUN8v/XdWJcLvfx1Pe2YKu75sbBR977Wy65mqa0LvW2vnpHeKYrVR+6l3
wq13PlD2kv677XcXXR1sxzyDUH2wWvnTXKfC3zcdO5VF16a124p7d4WxdpY6
r2mfMeaH7Xjp+tS3Xr8OquMRVWbtq65TfVe2ekZUHS7Jc0nnScfc9l33iP5W
Hcmueb9fQfl3XVu/v6ynfL51n/jPHv85Y/eCzqPqVRaXVJls/X59yrahe1Df
0uybmX7n34Np7lmrT/l1G12vut9sfXqn67e+T9f5sOOt5eXb9Cyx46pjlva8
V/PDfr21Wgxa3/FtWT8mYdMq+eEl3m8VV2jUtuNI4oflJW2dR/3mzMCf6761
+JiuBXm+JO+AKKLqhkm3WW3/wtfPf23xi3Gx80p+WF7HrnXf66Xxw/pbuUX6
O6ovqIOOOCmYF46rRaF6vh0X+UndX3oe+W2do/xw3PMp7TNEcWnbN73DFbNT
u2r/+ej3oazYsZ1bxbPVdkXn05ZVrLieZ2nad149dUIdZx0Pe2fp+OvvSnFx
I8oP13uNV7vfsn5+pz03cVj9UPup3+sa0rG37fr3ZZq6dJp6mo6pjq2tQ/eN
/rbrxfywXbt2reu7bfkY7PrevV/JDyet/8jz+PlEupe0vGLh/nnJwg8rPlzI
F0b9MO2Hm4HeFzq/yo2zabrPNE25j/6yfs5kOEdJcUjVe5WfUGl7/reX8Hc0
1RXsOlcuiE33v5kl3S+7h3Xvhcd9tO9E/n1g97b+DT8v7Rgpvqe/FWMIl0fb
sHtO/+qetXn6fh1XN0hCkvbD+mbv1+v0LLJjqdw0TdN+2bRw/9z+sa/2bbaW
c+g/w/13hXJYys9U7zt/uE7pxwPC33jtna5vsNWOZdT7v1L7YXlOzQu3NdX1
b17ez5Oz/bRvnIbef7af4X6NbRvyUtXKn+Y6Ff77QPUuf3nLVdM7NOk1GI4/
JMH8sO6NcO6i1VP84+uXOareHz6HaZ9Lce2HdTxtPfq2M+Z8L15abvPo+zu/
rhBun2DfGv15fn1K9Xl/eZ0fm2f926S9Z/36VJq+jFXv0m+Ue+dPV/1Lxy/8
LkhCNT9s8ZWkecgWz/D3y/a1WltoO3d2Xhux7dhtJfDDqlNafdT/rby77jG9
P/zvFWnbD0fVDdNusx78PCBtT+gc2PtR/4aPZVo/rGsz6r7X+8WOd6U2Q8Lv
qzOcg653up33OD8cfj7V8gyxZ7riYGEPoW/Hfr1f27P1h+taltunsto7Nu2z
VKR55zWiTlgrUX64Udd4kvbDWTy/09ZHopBf1nmRlw/HRq0O4cd60tSla6mn
2f7GtR8W4TFvLMbg19mq+eEk9R/7NqZp4TGb9E3L1pWFH9Y9HcSHcznypZuA
nhHl+9G7VtSmz65/f/lFXuxYbY5reXf+rvTc1e/j+vfXPRo8a044szytHj+s
Oll4nuXo6D1k0+w9HdUPqdp02H5b7pXFQS2GbvEVtVnSMfWPnbVPNV+aliR+
OKo9meXb2LvX6g9x/U/Yd5Bqda5azqFdZ1H9Rlr+nV9/iKpT2jdn/zuG2v2F
60mVSOuH7bqIahdkx8F/N1lZwmMiqo10uK5iWI5W2ENHkfY6tfdBuH4g9L6y
5attVzEgLaf2ammvX/PDuh7D8yz3I8rD65t3knOY9rkU54dVPwnXfX3Unihc
X7fnTNy3Lhvf096ffn0qfE3purDza9+S0t6zfn0qTXsyu7f03GpUv9PV/LDF
9/w800rYOF++N7d9reaHrR5pddhGbDuOJH5Y+TRWdtX7quUNNcIPp91mPVQb
b8n8nz++fFo/LKw+7n9Ltee53tHV6o36nhv37Be+x7RplZ5PtTxD7J6P8o16
lsn3mVew52XUs9Rfly2f9lnqryPJO68RdcJaifLDjbrGk/jhLJ7faesjabEY
rn+9pK1Lp62n2f7G+eGoY+d/C7N4eCU/nLT+Y8/5uLq65QBk4YfVvzT9aTUP
v39Nfc8y7Jkuwn0d+bmPwTtt+z2D+mUSLyLU14J+FxcLs1wjv0+5evxwVN9W
9k7Sta+/5Wltf+Jy5+w5ZMfDPK5ym/T3ngccXX5OmQ+1thxWP3qhSo53HEn8
cFSbFflL/7l09ei7XageEcbmVcufreUc2rMwqn2L+Wcbg9DfL79Oadeln4vz
3vN7t0THMo0f1vmyY6Lnadzx8r8v2n6G2xrYd/2onG55TM2r5odruU7tfaD+
zsLL+v652nEzP5HEs4exZ4Z/fg3l1oWPoZVZ11nSc5jmuRTnh5VLq+lxfSdY
Xoiw68+eM3E+yfoqtO/tfn0qqq5usSLLP0t7z9byrBR6btm1Y9epYgW6v5rV
n5biGHH3RKVrW9/pbZqVt5oftu+X1p6xEduOI4kfVl3XP39av2KAenaGYzCi
EX447Tbrwfywyq04i9A2VL+QZ7F6p56X1qa7Fj98fsS3WcuVrtTvn2FxJo0X
FzU/yt9Wej6lfYb48dUkfSpa/K7a88C+D6R9ltbyzqu3TlgrUX64Udd4Ej/c
6ud3LeemEoq5Kh9IZdb3br/tXdQ33yR1af+eSVpPs23G+WF/3VG/s34MKvnh
pPUfe8bEfRO27xeZ5UsXCm5gYKDl2+4Gotqohwl7Iz0D9M00qi286srV2h/Z
NuP6w7L7y89jq8cPW3sxH7XF8O8ze67GfdMVluek2Ln+tvvb2iepvmPlk0fW
PH2vUz6K/q9nTa3nqdbxltTewj+Hil3774kwNi/u3VnPOYzziUL1Zc2r5oeF
teuxXBx7n0c9q6NI44f9vPBKxyuRHx69xqLq31Z3rOY1a7lOK9WH1N9V+H0Q
h/Xxrvdm2uu30nhLdozr9cNpnktxftjOQ1zeg//+tLqVPWfi+vvVPaL59v28
2ngd4fpU2nu2Vj8s9K1KXsJfr223lphxNT9s7UhEpX53hT1HhZ9jYtMq+WH/
Olcdq1Hbjr0HE/anpb7n9Iz266FGOD7RCD+cdpv1UK0/Ld2P1obRfGstftg/
t4pV+rnSScbUtW+3cXXuqGdupedT2meIfSet9Ez38etscc8D/WvXSdpnaS3v
vHrrhLUS159WI67xWsdbaubzu5ZzE4W+u/j9jdj15/d1GeWHk9SljTT1NNtm
2vGW7HdJ/HDS+o8dx7h2FnZ+s44P0364sVgfT0LPDcV/fPz7JG4sCuXG6B1m
bQCTvK8tT23fmBik9cvrt19oth/2+0uJ6mtX37hsvo0xYf2Oyd/Y9zDV+zXP
6k86jpZHHZVrkpRG+WH17aS/w+OOpKWWc9goP2z+Qvvk5+DoHZik7Gn8sN+2
LGkeWDP9cC3XaaP8sN8nSHjMmDHHrHScFIMTlu/VCj/sU+25FOeHrS+QuG9X
1s+w/xyy50yc59t3NI9EOWT6O219Ku09W48f9lG8WG1szVvUMjZ3NT+svkHt
WFTzmRonw/cRNt2mVfLDfrsv6/O8EduOI6kf9tH7WG0f/T6cLG4qGuWH02yz
Hqr5YaH2NFrGvhWZH/bbThjyXFbGcNzR2iToG4e1S4nz1GHUbtPqOVF5EPYs
SuqH0z5D1Oeu7Zffx30c1r7xUK+/l0qkfZbW8s7zqaVOWCtJxh+u9RpvlB9u
5PO73nNjqE8qW4++B/l5i8rzDt8/tfjhNPU0K0s7+GHzPuHxToSeD+aXs2o/
PNKfFn640ViOZtx9qm96du7l6TRN17Lunajx/ixHuFps0e4fvS/CPlvn29qS
+v3NNtsPC4urRY19aO0Mwt9w7Xuo1fvUb6DNK/czMNoXZJLx5eOwZ3NUPwlp
/LD/bTo8dpvQNI0HFDWv3nPYKD9s+6Brc/DGO4L/q7/TpMeykh+Oattr5Yiq
M+v9pOPl71Mz/XAt12mj/LDf75ne+XHt8mycEflbiws02w+nfS6ZHw63HfWP
R1Sun8aZDOr4Xp+W9pzZtFT+ZcvG3gv62/rjuS53U/keS1OfSnvP1uqHdfzk
EcOxHD+/M+2YS0nGH7a8Wd3Pfv/y4TLYfaXj7c+r5oetPirC3z/q3XbsPZrA
D+t86ZiHPZjGObFl/XdXpXdAFFF1w7TbrIckfth8rPXR5/cVFf7mpjES4u7N
G28dGbtp+132dwcdMdJH7u8vr57XLnQsbL177X908Fxbs2bkPaZt2rmv5Zma
9Bli/SD5/UIb6odCuZ7WHsO+r6t+ERV31T2q54HlPNTybTHNO68RdcJaifLD
jbrG4+63rJ/faesjUdhzWd8swvOsj+l6/XCaepodn3A/rln44ZNOH+ln8d9L
97ue1f7zwO+TOjM/PDTkBnID9KfVYKxerfYzcctYH+NWb7T2xno3+LlIug8t
96nadaJr194xyjW2NjOKbfljBvj9BbTCD1vMU2Xz+xbTO82+C4THV7L2uYbf
/0F4/EHzjbqOdRwVb6vmOw1rs6Bnbfg5n8YPC/Ppynv1+8/TvW/vC31PbfQ5
bJQfDs6t9+1Z2PjtSYh6//vt5cN5MtY3RHjcSD3vrT6dJA7eKD+c9jptlB/2
ryehZ4Mfz9C59+f77Syb7YfTPpes3xEtH4732fKqo1osUfjf1OPGotD7Uve5
7nH9q/q1zXvhxZF+tdPWp9Les7X6YfPtfr/4wp6VUeNnVCOJH/b7ZFUMR+3J
rZ6v7T00sVh+FujeCfsk+63vhxU7ue2uB8Y8i/TtMjwObb3bjiOJH7bvpDq3
/vijyuuwZ4jOpU2v9A6IIqpumHab9VDJD+sesNiw//zWPWPTlGNk70z1l+Pn
4oZ9ph+3MdK0FfVz53Xfy1PLW+uYfOXbW5efFbZ8tedT2meIX1fwrxl9o7H9
0rNV0/TNys6V7lV/nFjzysL66ajFD6d556V99ur/+l7uj/9WK1F+uFHXeNz9
lvXzO219JArFKey4+XFmGxNc1OuHg98lrKfZNR7uXyQLP6w6/Gab/zyYJk+s
60BtiMwvfeXbW467pluFtR9WvrRyp1u9/U5F/RjadaB8krjl/PYKys+U7/Hb
GOge0DdAu6d1HVZan+GPQ2LPCX/cVotHG63ww6r/+Hniqh/67U9UxnB/f359
yu9fL3zs/Hl6x0XV4Srh99Wp4+S3TUrrh+Vh/HOo/fL7YgiP29Soc9hIP2z9
n9dST496//vjxAs9++zZrfqG32ZL14WOkS2v7fv1s2b74bTXaSP9sI6FPyam
kI/QfeTXR/Ud2M8baLYfTvtcsnPh74N9m1J901+X5vl/h72dPWe+be/L0vn/
/la7Bu9S+83ADXeUl6+lPpXmnq3VD/tjpuoa1TG2+pVI0jdRmCR+WKhNmX8+
dAzVJ49/T+ocRrUH9X9j+OsSOlZx+YX1bDuOJH5Y/cP769d1pPqjbTfc70yl
d0AUUXXDtNusB7+8fhvH8PlRX4r+89tv16hl5YP1r/98iYq72jtEaIyitOXV
2EDyvv++6cg69K9yPmx81DR+OO0zRN9gLFZu9599n7K/fX+vmHH4GPnLK6c6
aVmj3odp3nlpnr1atvyOraM/FSPKDzfqGo+737J+fqetj0Sh+f49qOedXT92
nzXCDyetp/n7o/3WtzBNz8IPC12v3yudI/8drv8fcfwZ5X5UsooPF4vDLpfL
ufXr32r59jsV+8ak+6Dasta/uOXy6DuU6rv+e03/1z1j12USlMemPh399ag8
+t4YXtaecWnqePZ+ibqH7TtY+D6Tj1Dcy/cX2n/dA1GxAb9//fD94eeb++PI
2fs1TXs8eQt9o7Jj5Xsq+27lj1thRPlhobit3oN+HUPr1ns0Ku+pEeewkh+2
HB21V0yyX3qv2rMqPF5qNZR7pt+FxwJUrrHleQvF722ejonqMOH+OfTeD797
4vbTvkFF1QPs3RvXHjtMmuvU2vFEvQ/8HOikx0/XtdpaWH3HR9Oi2opZ/+Hq
WyQ8L8oPVypz3DlM+1xS+2b/+vdj3cqR1f3h76PqtIrjhHMUra6g7/u6fkfq
1FsGfH+rXcbEgaycaetTae7ZWp6VhvrBs+e9f13VmkNr4zsmGbNaY3JH9cdj
z+m4MdGj/K9di1qf8hSqPdNq3XYcUc8uu5b8tos6VxrXxN+ezq+OW7iv4Urv
gCgUHwzXDdNusx7kL6OOp93renaqXXb4d9bXj39etbza3dq1H1Xf979xKQ5b
S5lVX1eOgL6R3PtgIfAe1v+z74erPZ9EmmeI0DdZvcvs2rFt6jhFxbrVNkvP
Cv846Z4Pv9dqeZaKNO+8NM9eG09Z/e7Xe41Zfn0zrvG4+60dnt9pzk2lYxf+
veqJVjf2vxvUUpe2ezlJPU1ltutCWFzA+mVN6oejnnn11H8UA1TuiHz5c8+P
1OcUe9fy51xwZd3Xb1oUH87n8663t5f4cJshL6g6v6gnl13vIH3XaeS7uBHo
XkgS606L5arsuf9RNR0r3cNx/ZvVgt73am+zIZ3D1+a+UX6ORY3DWw9611Tq
q0LPXj2/ax2DptE06zqthvZf37LVz7r6kEmaS9ps0j6XVA+t5Je0nkq5l+Fv
53YvNPN4NOKerYRyHVV/S/NtrFE8X9ovxb8Ud1AOSpI+hjb0beteUvw5qo+8
MI16B6TZZhbIM6p8irUmWd7GnVVd2M8hTrIdjYkjop6jlksdN35SEqo9Q8Lo
nMS1Zw+jfVWb0WY+b5K+85I+e1s1RnEjrvF2rXOlPTdx6LrU9RNuS9II0tbT
dIx1rJs5Lno1lPOpvlnU3mb8tbAmyBnR/uh7WRblU750fy6XybYBGo3FynoH
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
cvdOme3/byjnXijmftP/GRp/oL+p+Lf1/f2j/WvsfKnXEAAAAMYuqmlV7rxH
lfDDOna5tbwqhc+X7u11bW1tqV+P8Yie2+OxekLPpa++vmfQtkmeS97A6jvF
6Fk+/P2ZM2dzcaSYm+/4/bBt1fOzbb9v/8Eh6/UcrnU6hi1bva4z8Xgi9iCW
q3nHfz40ZN96lk96Hv/2v070y2N/LW+RdExt/4Prbh6RH7b+DmPSSdvJG5lP
uWbiZO8rK3Edfnf/9MTf6li2jY6V7xj/+59/MCjXuxB6p2DnFt+fd97zcKIf
3tPv+/Ldk9f//DdF/22Ueg4W27z9t38YtO32Z3bmPcaTqzf6bb71Lz9OXG/7
fP2NtwbdV/Kwuk+T2ja/rmXIfuSDk7bVPZ/kh/X5iv/zvcTf6P2C7qFi74WR
3m/iN/c8lPv7Kef/OQAAABib7N59yMeThttOtbPiZYX88DvvvFtU3WkdW21I
sw/C+DDjhyuL4q32vC2/tLR9pa+Jo1rF/pm2/3lYsVXbPslz2bKrrv2598Y9
fTt8XMyed+05Xtww+a6cl1Gc7YlVG3LPuUIxo+HaLN+gbafPXTJknTyK1tVf
8Lka02vn9/9+dKP3vzpHxbrsmPLL9vty/PAPr7/FLwu9kWJ45jE09lFtVS2g
n//qPwd5gWr6Yb0vMC+seGAYzxzpddA1fXp9l/vmd3/ot1fMXd9tDLViqtbH
OoZitE+t2eTuf2hurl++e/X1OX+eD/3/o+sW7kf+Uf9aHbPYD+t+tb7Q/aCY
rc4vHJd6933Thu33cs7B7jXxz1dO8te3qeWJgt6/XD9s/OsPb/T3u+owW1+J
7t7tuX10b94+ZHuhz+G+Qj9sf2e6xvo/QX0o72rbalkx90Il7jedm22bVm4+
AAAApMObb74z7DaaU0m+d9acwf4gnx+Wd/63n9zspvxhbsXaUE30XDpQTws/
XGns+Tmer0bvSsxbPjTjYow39lzKEbbn1Pj9inKmlSO849nn/Xc9H9u2tsxY
ciEXUs/+w40RV97rQJzoJ4OWW+xY+zjx/sCYdxtzqH/j90qKE5pftWXl+OEk
LGambQ++8+6gdcp1rbYffvvAoVxs7/qb7hx07pW6DiLfmFG9F7FjxHW31eak
MaJJKN/Z9hPnsHd29yb6Yfkt63vluCednxhufqxyziF8t1RsTvhI/HB8X+uz
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
DvPatWt9Pa1qxoeffXZXzu/my4FfsuSJ/r5odhs29A1Zd+jQEff00z1u0aLl
rr19rXvhhdd9W0OdOHGqf926fr/d6ddt3vxHP0bZfnPw4LuJx5VX37HjJb+t
crYVsz5z5mxZflj37PLlG/wx6+s1NrqnpPwGHVtt/eCDD32fLVu22u9Lyy2X
XG3Td7VVMXf1V74+LabfTOo/nbP2qX2vWLEh77hutU37U2xf/aY2qB+TpOvQ
0vK033bp0lV+7LjOIUmnTp12nZ3b+++Fx/39oP2qvXpfouO9+OIbQ35z+vQZ
P9Zb2zc1PeX6+nb236cfJ+4fIYQQQgihtKXnV3mEV1/dk/PAeu4+fvykO3bs
ff99167d/t/Dhys3trZqfviK77pvfeuqsrywpLiwcquVN11r+frS69b1+6Xq
zre0Z8/+nB9+/fXScsNbW9ckjjeWdw7HG7/yyh6/fPr0Bu9Fk34j3xtK9+LM
mY1DttM+5EVL8cPyYvnGRj///GtF7cO2l/eL9zFzZpPvR7UtXjd/fpu/ZuX0
mySfnLRf8fjjG3PbyfPm69tZs5rcgQMX74v33//AzZvXknfbI0dORG14LXHb
OXOW5nLq9R4gVJhXEF+/ffsOFtXnCCGEEEIIVVsffXQ20QPL79qzuWLFWi5f
s3fvAf+5kvWVqhcf/s5AfawrvjOohrTqShcr1d+Ka3LVSmvXrXULFlR//LD5
Lf27enV3//X+YNjfKD5oHkd+U7FG+TPbl3ySYtyS+WFj6dLVfnvFJG37GTMa
c/vWucrrWpsUw7RYZugNi/HDikmGx92y5Tn31FOd3nva/otR2H7FSHt7n/Me
MPZ7Tz7Z0e8Fn+/vk5W5ZWp7Of0m2TsBnat8qfy74r62D+VwSB0d23PLFPt+
4439buPGrbnfL168IrdP9bttq3NQH8nnWxsUszbJR9tyeWX1XU/Ps66xceWg
8w79sPLqbfmCBe0+7qw2WZ/rWhdzjyGEEEIIIVQNycvK7yoeaB5YnkW+OPa5
oRdWrqP55UqqWn544sSb3FVXTfR+NkT1ssaCNH64rq6u6vMtKQc+KU4ov6Z1
sdQW227Vqu5B63RP2TrdK1Loh+MxyvKDtu699477Zc8883JumT6HCtcV44fX
ret19fVP+HzjUPJ5sacsJNu2ru7xQcvlZfO11Ty9fLxUar+pXbYszmNWzrTO
S/kakjyseexQu3fv99upfrhJ7dGynTtfHdJX8TsC887ysMoVD7VqVVeiH7bz
jufD0jnovopj2wghhBBCCNVKej6OPbByU5MUemH5ZPuu/OlKqlp+eKxL8w8v
XLSw6vFhSTmsijsm5ebKC4W+WPdQodiqYoJar1izFPrh2FPpHYuts9xli7sq
17jQ/kdaT8u8mXJ7h5O1Mc7rlqe0dWFcV7K8aPPQpfab/KPtWx72ww/z13Wz
mPGMGQ3912roWN5ipGtjx7Mcb+VEh22KpePFftjuIZ1vLL0PSfLKCCGEEEII
1UKhH1bNaHncJMVeWLL6WpWce1gabX5Y9acbGloHsXBho7v77gdr1gZ5q40b
Nvh6WtWOD4fSMTRmVf5GcyyFvthqqFkc0eLIMWFesRSOH06Sxt9qvWpBSRbr
tLhqLJsruVg/rLizfJg8mPyd2hj6fuU3DyfbNhyHK8l7mg+NpRhu6IdL7TdJ
cdzwGuiaKLc5jmkrRzk8J7Wnrm6F6+5+JrGelq6l+lF9qDxmuwaG/ca+5/PY
5uHND6tOWDHnGObHI4QQQgghVEspHmzjgAfyn/f5eYVVV1pK8sLywFqWFPMZ
qarthzXXsOZPKlbKqQ7HG6sul6f/c60k/6v60qqnZd9r4YdjqW6weRiNv5U0
P7EtkweLsXWqhSyV6oet1pPG4iZJY1iL9cOK58Yxb32XH6uEH7b+SfLDqmcd
+uFS+03Su5B167bk4rQh2m9Yk1oxfo3rTTrf0M8mjXuO22B+2JbFueAmu1bm
h/UupZhzxA8jhBBCCKG0Ja+rfGnzxaqppWfq2AtLypGuRq60VG0/rPHC8rLF
zDssabsXXtjl6ezc7L7//Z/m6nLVUqovvXBhdetpKXaqa33sWP7ravFaxSYl
1ZKy+F8xKtUPW+6v5ulJkuYdKtYPW0xSvk3eOIyV2nFr5YdL7bdYypfWeGsb
n1soj1nvrTTHVVgrTQpzouWdX3314rxpqnEV+2E7ls4llrax/ZsfDnO8C+V3
I4QQQgghNFqk2K/mWJFvGfDGu4fU1bI860rnSkvV9sPytfKzd931QEm/27Nn
n59rSb+dOPEXNY0PS/LD1c6XNu8pv5hP5oflQyW9EzHPk+SjtUzzD9m6Uv2w
6iJbDPFPfzo3aFt9D2suF5LyIKydr7wyuC6Y5hyqdXy41H5T+5V/nDQnsM1z
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
OYdnzJzhHn74EXfppZd6P3zDDTe4Q4cODfHD+Txx7ItDbxz7YwAAAAAAAKgc
ofcK48Fx7azYC4d+OEte+L333nOzZ8/xsWHNtzRnzhw3Z/bsgfjwJRPczTf/
0k2bNi0xRhx64kK+OPTGSR4ZAAAAAAAAyif2W6EXy+eDs+yF7dwWLFjgGhsb
3ZNPPumefvppN3fuXJ87bfnSv/717e7OO+/0Y4slqzkWeuKkWHHoi2NvHBNf
OwAAAAAAAChMIY8VerHQo8U+OIt50jY2evXq1e6RRx5x7e3t3guvX7/e++NH
H33Ufe5zn/N++PrrrnN//1//3n3qU5/ydbbs90k1tvLFi2NvDAAAAAAAANUj
yQMX8sFZ8cKm7du3u4f6/W3d4jq3bt06t2bNGv/vvHmP+nmXPneZ/PAl7u/+
7r+4z3/+8+7rX/+6++IXv+imz5jufx/mTseeOPbFsTcGAAAAAACA6hH7sdiv
DeeDx6MXtvN97rnnfE70okWLXGNjUy42LD+8ZEm9X37Z5y7z8eEvfOELbvq0
aW7unLlu2vTp7tprr3U33vizXB/FfRn3c5I3BgAAAAAAgOqS5M2KiQmPRy9s
2rBhg5s5c6ZrampyS5cude3tj3kvvGnjJr9O44QX9vvhyy+/fCBf+vrr/ZxL
C+bPdwsWLnTTpj3iPv3pT7uvfOUr7sCBA36f1t+F8qgBAAAAAACg9sQ+LUte
2PKajxw54hrq6938fl+rWtLLly93jz32mP+8Tn540yaPPPLixXW58cP33nOP
a2ho8D5ZY4vFP/z3f/DrrrnmGr+PDz74IHesQv2NTwYAAAAAAKgOw/mwQh54
vHlhO5cPP/zQrVmz1s2aPcvV9/vh9vY298QTT7innnrKrVi+wvtZxYc3bFjv
Nm7c2O99611Tc7P7bxfiw1OnTnWNjQ0+h1pxYvniL33pS37dpEkT3QMPPODu
6ffMmr/4+eefz8WJ7fj5+ryYawUAAAAAAAAjZzgfPJa8cNze+LPeDbzyyive
686aNcv7WMV9l/d/V03p1U+v9v+qrvSKFctdZ2en6+7udl2dXa65fzvlUl92
2WXukn7Pq5rSmo+psanR++m6ft/75S9/2dfauvHGG328efr06W76tEfc7++/
3913331+DuOW1ha3cdMm98yOZ9yWzZu9Vz548KA7fvy4r3cm32znYR7aZNfL
ct71Xf+G522eWrJ92TaSfbZ1tg/bJ8fn+Byf43N8js/xOT7H5/gcn+OPt+Pr
33D7eH/htrG0nR0jaX24XbyNfY7Py84tXp5vv8Uc//Tp0z5H+fC777p9+/a5
Xbt2uS1btrhVq1b5OK08sOYRXly32C3r97crVqxwjz/+uK+btXrVah8bXrd2
rVvev1zrOjo6XFdXV78v7nD/H97leFE=
    "], {{0, 844.}, {482., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{311.643359375, Automatic},
  ImageSizeRaw->{482., 844.},
  PlotRange->{{0, 482.}, {0, 844.}}]], "Input",
 CellID->1491546085,ExpressionUUID->"486aee5e-7ffe-4464-a34e-31914f5235bd"],

Cell["View the final state of the TODO list:", "ExampleText",
 CellChangeTimes->{{3.8894746857253437`*^9, 3.889474690093377*^9}},
 CellID->187979416,ExpressionUUID->"db75a92b-6a80-46b5-8bf7-3ef586ced074"],

Cell[CellGroupData[{

Cell[BoxData["todos"], "Input",
 CellChangeTimes->{{3.889474692533144*^9, 3.8894746930446377`*^9}},
 CellLabel->"In[5]:=",
 CellID->1387489144,ExpressionUUID->"93cbc79b-4c0c-4d58-820b-ade59f8cfa2d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Christopher\"\>", "\[Rule]", 
   RowBox[{"{", "\<\"Go for a walk\"\>", "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.889474693446576*^9},
 CellLabel->"Out[5]=",
 CellID->603970918,ExpressionUUID->"ba865546-63f7-4267-ac40-d8d9a065f9f7"]
}, Open  ]],

Cell["Stop the web server:", "ExampleText",
 CellChangeTimes->{{3.889473069685279*^9, 3.889473074177333*^9}, 
   3.8894746914424686`*^9},
 CellID->576310274,ExpressionUUID->"9dee768c-7657-4089-9c00-43cd060dae03"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 CellChangeTimes->{{3.889473081013341*^9, 3.889473083050357*^9}},
 CellLabel->"In[4]:=",
 CellID->895527148,ExpressionUUID->"b0de1bd6-d21f-43cc-bc0b-d066899ae825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "4899ac8d-465c-4af2-841a-fdb099cff78d"],
  $Line = 0; Null]], "ExampleSection",
 CellID->921663439,ExpressionUUID->"151e9e8c-26a4-4ddb-93b7-f395aa69d2f8"],

Cell["\<\
Endpoints of deployed plugins are evaluated in the kernel from which they \
were deployed. For example, deploy a plugin that modifies local state when \
called:\
\>", "ExampleText",
 CellChangeTimes->{{3.8894737471099358`*^9, 3.889473763847451*^9}, {
  3.889473808944811*^9, 3.889473824728115*^9}},
 CellID->287202388,ExpressionUUID->"1c0a2a09-3953-4129-8383-f50746993bd4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"counter", "=", "0"}], ";"}], "\n", 
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<Counter\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Description\>\"", "->", "\"\<Count things\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Endpoints\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<increment\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"++", "counter"}], "&"}]}], "]"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "|>"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8894738330533457`*^9, 3.889473889585083*^9}, {
  3.889473954404213*^9, 3.8894739552314672`*^9}, {3.8903989505881042`*^9, 
  3.89039899469226*^9}},
 CellLabel->"In[2]:=",
 CellID->619953812,ExpressionUUID->"7c1a919f-3354-40a4-a9e2-5de703cc1774"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931424271472529], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "Counter", "Description" -> "Count things", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "increment", "Prompt" -> 
                    Missing["NotSpecified"], "Parameters" -> {}, 
                    "Function" -> (PreIncrement[$CellContext`counter]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:18000\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$ = 
                    False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3611931424271472529], 
                    "URL" -> "localhost:18000", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "Counter", "Description" -> "Count things", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "increment", "Prompt" -> 
                    Missing["NotSpecified"], "Parameters" -> {}, 
                    "Function" -> (PreIncrement[$CellContext`counter]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Counter\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Count things\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Counter\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Count things\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"increment\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"increment\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "increment", "Prompt" -> 
                    Missing["NotSpecified"], "Parameters" -> {}, 
                    "Function" -> (PreIncrement[$CellContext`counter]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "Counter", "Description" -> "Count things", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "increment", "Prompt" -> 
                    Missing["NotSpecified"], "Parameters" -> {}, 
                    "Function" -> (PreIncrement[$CellContext`counter]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931424271472529], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3611931424271472529], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-f8990ee7-970d-4c34-bbe8-b97269d142d8\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["18000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-f8990ee7-970d-4c34-bbe8-b97269d142d8\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-f8990ee7-970d-4c34-bbe8-b97269d142d8"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3611931424271472529], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3611931424271472529], "URL" -> 
    "localhost:18000", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "Counter", "Description" -> "Count things", "Prompt" -> "", 
       "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "increment", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {}, 
           "Function" -> (PreIncrement[$CellContext`counter]& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.889473877093595*^9, 3.889473889904319*^9}, 
   3.889473961324585*^9, 3.8903243470213823`*^9, 3.890398995845519*^9, 
   3.890925436754198*^9},
 CellLabel->"Out[3]=",
 CellID->607525349,ExpressionUUID->"f46ee891-92cc-4e90-8aab-c8327b34d865"]
}, Open  ]],

Cell["View the initial value of the counter:", "ExampleText",
 CellChangeTimes->{{3.889474025848365*^9, 3.88947403137473*^9}},
 CellID->1883651148,ExpressionUUID->"882f5b78-232e-46b5-a6fc-c822d5f4a53b"],

Cell[CellGroupData[{

Cell[BoxData["counter"], "Input",
 CellChangeTimes->{{3.889473921845746*^9, 3.889473922444818*^9}},
 CellLabel->"In[12]:=",
 CellID->1826074982,ExpressionUUID->"dc9655d4-5c55-4d35-aed6-25a14fc0db3b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.889473922712111*^9, 3.889473962884494*^9},
 CellLabel->"Out[12]=",
 CellID->1617131376,ExpressionUUID->"21767453-6a4b-46d1-8db7-7bb38bd10616"]
}, Open  ]],

Cell["Install the plugin and ask ChatGPT to increment the counter:", \
"ExampleText",
 CellChangeTimes->{{3.8894739241500063`*^9, 3.889473949903037*^9}, {
  3.889474011909892*^9, 3.8894740209517307`*^9}},
 CellID->234368142,ExpressionUUID->"583a1a4b-4c90-46b1-81d9-48f5cd1bdbc6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQmcXGWZtx1cUIMhEDaREQEdGJd5Z5xx9HV81c935nXcRscZR8VlFPd9
HAURQXEBNxRxA2QxQHctzRYCIUDI0l1bZ0ESAiSQfeuk9yVJp9Od7r6/cz/V
p/qp06e27uo61V3X9ftd6U7V2aqq69T51/0s5376v//988+ZM2fOt17o/PPv
F1369m9+86LL/uMk5z//+fVvfekLX//cZ9/19Ys/94XPffN/f/q5zo3veP6c
OT9xfnme8/vAwFFBRERERETE2vLo0UGpr6+XRCJufg/6eBAREREREbGyHjky
INFoVFKpVODHgoiIiIiIiJVXc2E4HJZ4TOuFwR8PIiIiIiIiVtbBwSGJRKMm
F2pGDPp4EBERERERsbKm64UhSSQSMjR0LPDjQURERERExMqq9cK6ujrTv7C/
/0jgx4OIiIiIiIiVNxQKSTKZDPw4EBERERERsfLq3BSmf2Gc/oWIiIiIiIi1
qGZBrRemUknmL0RERERERKxBdawZzYWJeIJ6ISIiIiIiYg3q5kLtX0i9EBER
ERERsfbUMUhNvTCRIBciIiIiIiLWoJl2pMxfiIiIiIiIWLOGw2EzHmnQx4GI
iIiIiIiVV8eaiUQiJhfSjhQREREREbH2NPMXhiPSnGomFyIiIiIiItag2qew
vr6eeiEiIiIiImINq/0LE4k48xciIiIiIiLWqNFo1LQjZTxSRERERETE2lNr
hFovjMVi1AsRERERERFrUO1TGBqbp4L+hYiIiIiIiLWnyYWhkKSSqcCPBRER
ERERESvv4OCQmb8wlUrRvxAREREREbEG1T6FZp4KMx7pkcCPBxER/W3vG5RN
+4cltXNEGreNyqqt6Kc+N/oc6XOlz1nQrxsiIuJM0G1HmkwmAz8WRET0VzNO
0HlrpqrPXdCvHyIi4kywoaFBEokE484gIlah6/eSCaeqPodBv46IiIjVrPYv
DIXqzTwV9C9ERKwuqROWT+qGiIiI+Q2HI9QLERGrTO0bF3SWmm3S3xARi7W7
OS6bP/guWX3GiyQ1f05h5+nP4yQ1d05a/X1eEes56j50X7rPoB831q7pemHI
1AuDPhZERByXWmH5pWaIiMWo+WxCHvRmvHme3xccJ4nnHSePv/Mtsv7dbzO/
620TlsuzTd0n2RCDUscj1f6FmgupFyIiVo86pmbQOWq2qc9p0K8rIla/WrvT
nLb+pDmy9eQ5sn3+ccZtzv/V7ac9R7af4v7/uIxbXzBHBp/dJMd2bpetc5+T
dZ9Zz1lH181sZ2y7ug/dl+5T9x3048faVLNgNBKVeJx6ISJiNclcFOVXn9Og
X1dErH7dWqE3E7pZcMtznJ9z3Xz4XPNTb2v98ifFpePbX5Fn52Qvo+uYdZ2c
6G7LzoZuzTDox4+1qWlHGg47uZCaNSJiNRl0hpqtBv26ImL167brdDObyYVO
jtvy/OOk54ZfS+fPrpSd573UZDytEW6b52S/M06QoX27ZbT/sIwcPiTDXZ3O
MqfKVicL6jK67M7zz5KuX/zY2cZ1Zlu6TXsf7n6DfvxYm2q9UOe1TyTitCNF
xFlvT0+fbN++O/DjKMag89NsNejXFXG2OpPOr4X0y4Va79P6X1/dzaYeONzR
Ib23/FH2vPl18oxze9dPvz9WJ/yqtH/7K+b33j9db9bZ+/Y3St8df5Lhnm5z
u24jU0skF2KVqP0Lo9GopFKpwI8F8fDhI9LR0W3s6uqd1DY6O3sy29DtBfE4
nnxyi/z617cZ77zzobJuOxR6ILPtbdvK+/mrz/m+fa2yZ8/+zHNoG/TxTdUn
nnhGrr12ofG22xYFfjyFDDo/zVaDfl2nor5H/d6bueztPRj4MbuW49xQDeeX
66673ez/hhsiM/I5nC5n2vm1kP71wueaml/XVVfIyLFjMjo6kmkz2h9vlOHe
HtOvcPtpxzu+0Pl9m4wcdbb32NrMcqPDw2Zd3YZpT6rtS8mFWCVqLgxrO9KY
1guDPx6sbRcvXpH5XFHb27tKWr+lpS1r/SVLGgN5HI8/vilzDPX195d12wsX
Lspse/Pm7WXdtl5r2M+fV73/j39skHvvfdQ815U+vql6xx2Lsx5Pf38w3xsU
a9D5abYa9Os6ne9Rr/p+DfqYXctxbqiG84u7/9/9rm5GPofT5Uw7vxYyVy7U
Gl/7Nz7vZMJR49GnnpDOKy6W4c5Wk/u6rrrc5L10frw8nQUHB6T7mh/JwJpU
+v/Oeu3f+JzZFrkQq0ntXxiJRk0u1IwY9PFgbXvffdm58J57lpW0/p13Ppy1
/gMPrArkcczWXGj7m9/cLnv3Hqjo8U3Vxsa1mWP7wx9CgR9PIYPOT7PVoF/X
Sr1HyYXTI7nQ35l2fi2kO4dEJrNpfjvj+bLl+c+VAx99n8l3PTdeZ2p/nVde
4uS7F0t/KibHWvebPoXqsdYWOfrkBme9edL66Q/L6MiIHIzcbtbVbei2dJvb
rWzozlsR9OPH2jRdLwyZee2Hho4FfjxY23pzobbXKXZd/Vu+7rrsayZyYWna
15wNDQ9lefvt98n114cnvD7a5rRSx1cO16/fLI8+mqqq9nW5nEzmufmBvfLT
hU/J134ck3BTZ87llm0akmvDzxoXPnKg4Hbd5T9/xXL5+tWxzLrXhrdINN6V
c73blh3ILPvwU4O+yzzw+OHMMvmOWdX9ffe3a+Wy36wz69VyLgyHlxR0+fLm
wI/ZlVxYHc/hdDqTzq+FNPls3tj4o/PGx43RfoR73vTXJuPt/493ZGqCg1u3
yKH77zG1QM2H/alG8/vBe6NyJBlP9zW8+Q/S8qF3m3X3vPm1Zlvj49ak9+Xu
N+jHj7Wp1gvr6upM/8KZXvPHma83F6rJ5ONFrdvUtG7CuuTC0nSvOfVnrmW0
76TmQfcYbrnl7oodX61Zat7R7PaOj4bkHRfWGz/4pUU5l70r1ZtZ7hPfWlpw
2/byfr7zYyH59q9WT1jvoksfziyTK/P9YdHOzDLfuDqe8xhuWdqStc+Lf9lc
s7kw33u0WiUXVsdziMXp1u00s+04c67sfcvfSduXLjLjzAw+87TJeZ3fv0T2
vedtJucd3fyU5GJwy2bTF/HAx/9N2r/7P+a2gU1POtu60WxTt6370H25dcqg
Hz/WrqFQyLn2TgZ+HIh+ubDYdlA6BkCpuVDbQa5Zs9F8v7l69QbZvbulpOPd
sWOPJBJ/llWr1sjWrbsybbFLyYXah/Kxx54y3+vrMfi1zbQNOhd6H5+3H0m+
42tr65TW1o683yUfOtRvllHzfVfV3d0r69dvMs/b2rUbzXhD9n26vl//VHfb
fX2Hsm4/ePCw7371b2LFitXmNbL3UUgdv0e/q0il1pttTub1KDXv/Cr07IS8
dt+6gxXJhblyXTlz4Re/vzJrX+/5VAO5sERzvTeefnqb83febL730fdCsdvb
tWuf+TvX7+/0/Z1vWb9zg54zt2zZKStXrjbb0O2Vug0/dbvPPLPDHJuen0t9
XAcOdDifDU+Y84t33cnmwlznGB2/U9tgxmKPmc+RyT5+zq/lNTXvOEkteIEc
uu8uOXagRUatnDe0d48M7douwwf7pPfm35u64J43vEp2vuoVZkzSkUMHjfr7
zlf9pex6wwVmmd4/3SjH2tvlWNt+OdbRNT4WjaPuQ/el+9R9T8djQiykzk1h
+hfG6V+IweuXC9VCWWnnzr2+6+XKhZprtP+D3zq//329+RzMtz8dd02X866r
dTT9fC8mF+rnmtba/I5B22tu2rTNd71C10V6jaX5cjLPfynXnHbNUJ//Qsen
j3e8xnhXzu3qmDbucvpceu/Xa4r6+gd8n7eFC+8110b2dwT2NYheJ7q3e8fL
u+uu8b6pmvV1zCJvu2T15pvvynsdotvx6wOmty1bVtr3b6XmnY99Y8mEnHb5
bx8rey60l7/90VaT5ex9Ln5sPIuWKxeueGbY1CS9j0/3Ty4sXu97Q98Hfn+v
2nY813jOeo2v42L6vQf1PXPXXY/4ruc9N2jm8HuP6bl5suc/9ZFHElnnJ/s9
qO/PfM+Pvrf1Pe732O6+e5l5TiabC73nmObmDfKb39wxYT+6Xc1JpTx+zq/5
z6/r1j2Z828ql6n5x0nyBXPkwMf/fWwc0WPS9ePLZecF55mxYnZe8DIZ7uvN
ZLu9b399uk3o8+bI0O6dRv1db9P73PFmdG7D3a87X7afOU92/fWrpOvq75lt
mz6Hzr6SpmZILsRg1Cyo9cJUKsn8hRi4di6sq7s/83sk8mDe9exrFHtMNL9c
qJ8NxYzdoNnPb1/an67Q+vbx+OVC/T5XP/vzbUP3Ueq4Lg8+2Ji578YboyU/
/6Vcc9q5WvuUFDo++7pFP/tzbVfHGnKX0+/5vfdrP8d8z5s+r/ax2dctejzj
1zjZ1y32mEWF9qHXct5rZv1+XJ/zQn9Xuu1iX49Sss6DG45kstJnv/uovPeT
UfP7+z5z17TmQtePfO3+zP3X1D1T9lz4+7u3Z5a57Lq1md+/+sMmcmEJ2n2E
veNH+uUA7/qaC/yyzMR1F034rtk+N4RCS/Kur5lBa3alnP9UzZqFjk0zr99z
o+/pXN8X2nnHPteU8tzb5xjt+1no/O83DwXn19LPr/b3r6WMZWfakS44zowZ
2vrpj6Tbfq5bLdtPO8G099S+gS0f+H8yOjRkcl3L+//JLGty4Z5dRv1db2v5
t38y81Noe1PNfpuPO87Maa9zWQysazbb1n3osrpP2pFiUOpYM5oLE/EE9UIM
XDsXavsQ+xooV5sXbRfjLqfXEvH4Y5lteHOhtlmxM53W/O6++xFTX9PPC/vz
Tpfzzs+rn012ntPvpDUDavun++9f6duW1ZsL9X2mbWPHPwNvN9cp+ngXLXo0
a/u//e0dZp5ge/1810XeGmaxcw66TrZeaI89M53XLd55THQ7Dz0UN98/6/cI
ft8/T+a6Zfy1e8D8PWl7Mm995L77lmetr22h7L8dbZusj1nbYnm3XaitmGsp
WefHN2/MZCXNUP9t1fAisYl5rNy58MobHs/c/99WtitXLvzkJQ9llln6xIB8
4HN3p/s1fjwsK58dIRcW6cSxo9I1NG0joX/r9rlJ1TaU9vr6HZ39d67rat1L
61vR6NKsdbVGk+vc5arX+nqe9nsP6/nYmw/ynf/+/Oens7ateUBrSHoe8WYR
v9qSdxnNxdq+Vd/Lfm07ppIL7ce4aNFyc/7X51Y/D+x8pG02i3n8nF/9z692
fdf9TC329cqMRzo2l33H5d80+e3ImoTseNlpsv8j75dD90RkZGBgrC3oqBx+
eKm0ffEiOXZgn7Hti5+Sww8+4OTBYbPMsJMhj8RWSvs3viw7L3iFHGluMrfr
tt057hmPFIPUzYXav5B6IQatnQv1syIaHb8G0c8Fv3X0891dRj8f9DMsVy60
c5t+HnuzpmY2exnNWfb92j7K/mzy64/4pz/dkzcX2p+9mq2834l7s6f3u+18
10X2NVspn3+uxV5z2s+xLmt/pzRd1y1aY7WfV83Q3nW1v6e3ljvZ6xbt6+Pd
vl6/ufd757S2255pn9WJf9vj6xZqy+ZaStbRMWZMbvpoSB7dfMyMMermqP/5
WWLac6HdhvUXd2z2zYVfunKVXPKr1RO86NJH8ubCR54azIyn86GvLDa3ffc3
6zLrXH/frqrIhaX0j5qs9t+3nlsK6e3zZ+dC3Za+Z7z7sLOht02o+32QruvX
Lm/p0lhR5y5V65Xe9bVGZj9GPV/m2oZ9ftHrf3s9bS/p3badLVQ7c3r7TOs5
zrv+ww/Hy5oL/frOaxtKO39pXirm8XN+zX1+tb/vLaW9Rtb8hWPz2Xdfc9VY
e9DhrHFlDi2KSu+tN8vo0GD6/pF0bdDl8ENL5OgTj2X6EtroNnXb7lwVzF+I
QarvaVMvTCTIhRi43lxof9bp9YzfOnaNbP/+9py5UK+P7OshXdZve9qX3v7s
s9ty2tdLucZJ1b43djsrby60j/epp7b6bsN+3N72oPlyoe5br8v0c7FQn0w/
i8mF+rjt58f7OTtd1y1ae8j1nNhq7WKq1y033XRnztfWXcY7h4p97aHXmOV4
PxSbc+5dczCTkbSu5t7+7k9EzG3v/q/otOXCO5M98h2rXad3rBs7F05m3Br1
57dvytz/w5ueyOzXve0zly0LNBem+4mN5yVvlimnpc5fuGlT9jnCzoXaxqHQ
e0i/5yrl+DQb57q2t88Nmqly9V/U8W/c5Yod79g+7+c7P2gN0F1u48ZnM7fb
mcSbxWzt7/2mkgv1/NHV1eu7nNbA3OW88wByfi39/KrfvWrfUL0e8La/yad/
LvzRWM5bbMYW1bFijq5/TLbNe55pF7pt3vFycMmiTOY72FAn28883dy384Kz
5Fhbmwx3tJu2pH0LbyIXYtWZaUfK/IVYBXpzod5mZzFv+zv9vtr7WZgrF9rz
WHivV7za+9T2Ku7tdtvJfOvbfSPtXKhtXu1smm8b9vfy9u2Vmr9Q+9HY6me5
1iDtawLNuN5rm+m6brHHS8h1Patq7XKq1y35+qDkel3sdlB6n15n5vruoViL
zTmXWbUznQPQvf3LV67K3H7rQy1ly4VuXdKeE8P1Kz9ozFovKxc6y+vYMV7t
7fjlQrvv4v1/PpS5/V8/fed4jXTTsUByoX6P5JfH/Goa5X6PFqOOQ2Wvb+dC
OxfZajuIYjKCn3o+KCbTNDQszbkN+zzpbfeQ6/xij5XiV+tyteuZ9ufDrbeO
txPVXJZrfa1zlSMX+vXd9Hudiz3/c34tv7nakR5adKfpX9h3Z72MHD4su/7m
XHO/uu//vcm57ZAMPrtJBrc8Y9qS7jz/TJMLnzH3v1FGjg6YtqTbTnmR9Cz8
I+1IseoMh8NmPNKgjwPRLxdq3z/3trq67HZH9hgAbl+WXLlQxz8b307+uSPs
9qv6+aO32d+DF7oesNsb2bnQO26qfr7l0l7O/vyrVC4spGZCv3Zz03XdYrcj
0n5E+R6HXZOdzHWLXxsnVzsb27drGyu//jdaO9Z9uX/PpVhszsnko7Ha4Hsv
ajDaee2LP1hZ3lzo1clm3/jJxPaqU+1fqHPX2/txH5v38dl5uJK50Ns20TVf
zakc71G3/XYhvevbuTBXvU5rKu4yft+h6fte+51pltL3g/7d+5078uVCvzFP
bO1+dpoTC51fvP3/ijmv2tnMfl/nm+dB22GUIxd6+8/le53s/gqcX8t3fi1k
1rgzn73Q5LeRQ4fk8CNLZORg3/jchFufld4bfystH/qAGWtG24nufuOrZNcb
XpXuj7g6Lrte/zrpvOJiORJfkdWGVPOhO6Zp62cuZNwZDFz93IhEIiYX0o4U
g9YvF6puu0z9XHfnRbKvXezvlHPlQm1HMv6ZnL+d19KlTZllNSPqbTr+gntb
oTkV7TY5di7UMU6LzV22GzYUHu+zHBbKhXq/XhPo9/He8RAKHd9Ur1t07HX3
9lxjuLtO9brFr2+Ra67rFlWvXbSumuv50+/Cc7U/9rOYjKNZq5j2mVqXW2GN
zzLVXPjThU8Zf3bb03LH8racY79MNRfa49nkU/s3BpEL9fX0e63vvNN/zMty
vUfLMe5MrrHm8uVCPQ/6zQHhZ75cmKsNvd9x2uN/5Tq/+I35VUj7sZXyvJYj
F/rNEWFrt1e15x3i/Fq+82shvfNUjBw7JiODg04OfEbavvp5J+u9Rtq/e7EM
7d2VlfW09qftQlW3xuj2KdTc2P6tr8vuv3+NGXtG57LQsWhGjg2Z+5mnAoPW
zF8YjkhzqplciIGbKxfafT+0HZDeppnPvc1u95IrF9pZz1t39GqP3+JmSM1B
7m2FxnSx2yrlqxdqG9Vc6jbc3+26XDXMa5/PqV632Pndvm7RLOp9TfwsRzun
yV63uOo4sPr6aT3F7zvuYueXLCbj2HMH6tgzV9/6ZJZ2dvrdPTvKkguLWb5c
ufADn78nc9/F1zTnfXw6Tmmlc6F+T+X3Gnv79VXLe3QqudA+B7rX4dq/WNsg
av1Qs479nVi+XKh9CPMdp5097fdwMfVCbQ9SzLn1z38ezz/2WF+5vvNSd+3a
V5Zc6Dcujq3dn07PnYUeP+fX0s+vhbTntR/av09Gx8Kd1vf6H31Iuq/5iXPf
3WaOCr1r+OBBM9ZM7y3Xm3ajqv6ut2l7Ux2vdHRwQA4tuttZ96fSv3yZjPYf
GhvHZtTsg3ntMWi1T2F9fT31QqwKc+VCvzac9ueH/TmeKxfa81fkGsPG1e5f
aF+/2Ncq+eZ10dzplwvtfvWTva6bDbkwX/9Oe6x4+7pFv8Mu5vWz+5EGdd3i
VdtN2ded3rE0cllMxnHHllF1DsMJmcvJgu79n/r2w7457/2fvUuuuuVJX5dt
GgosF3qP0W/d/75qPBdfdcvGiudCVb/v0XqLnh+0P57O+VDufZTrPTqVXKjv
R/u7Mb+5g1pa2orKhfnmpLXPk8X2L7T7dLtt/0vRrs/ZedGrZt9y5MJbb80/
ns9U+hdyfi3u/FpIt5+f9iXcceZc2fuWv5PWL39a+u5YKEN7dqZriEf6pef3
v5Y9/+dNpr+hS8uH3mV00fv2vPkN0n3dLzPtRrVW2HfHn8w2ddu6j60vmJPp
11iOx4A4GbV/YSIRZ/5CDNxcuVC1x5Gz+wpqH0N7uVy50M6Wqn7v63cM+vlq
t6e0+/bZeTFX/xjNqHZ+9I5Han9+2fPBe9Xje+aZHRPG2pmpudD+nln7DuVa
335+7OdY6zL26+e277XVGo33u+NKXbfo342aa4xBe4wkbRddzHNZKN/csnRf
JhO58zd4Xf7M8Pi4Ls5PnfPBm7nyuWjtwcBy4bd/tTpz+7evXe27rj0fh9ZL
g8iFlTTIXKjzStjnYL917XYZ+XKhvo80//ltw+6frTWhYs4vxY4rpo9Nz6uq
Pb+rPX+Q3/wZrnY/vKnkQn39vHOIuNp96r0ZjfNr+c6vhTS5UMedOUXHGU3n
Q20bquPH7P7H15h2pd2/ujoz5kzfHbfIcG+PGXNmuKfb+b1Xjj7xuIx0d0lf
/a1mGV234ztfM+vqNvT/uk3d9raxfbn7LcdjQJyM0WjUtCNlPFIM2ny50O7f
Z+vNRvnmL7RznX4+eq9LdBwGu++E9zPZHrNN1bm2vI/B2//Bmwvtbei1gV8+
1e+r3WW0nYx9X75cqJ+bek2jj9M7p3QxTmcuVO1rEh3v3Luu3f7WL3vb15zu
6+OOP67fEfv1j6zEdYuOg26/pn5zwum81e4yWlsq5rkslG++/IPGTCb64R83
5FxO64Te8Vnubi4uF7pzTtjL/9fFpeTC8bkJo7Eu32V0/sFMLrTGrrHH08m1
rrdmquPUkAtzO5VcaM8R51fv0/eXd176XOcG1W8ODG/28ObPXOcXHZvGfv/7
HZ+eC+zPAHvbOjarvV+/dq7aX8FeZqrzF+pz630NvN9Leh8H59fSz6/ar18/
l/WYcn0f7GdmPFKdp2JsrortZzxftjz/udLyoXebtqOd378kkwsP3hUy81bs
e8ebzPyFI0ePyp63/I0cazsgfeHbTAZ0x7DRdfd/+D1mW7pNd44KM08F45Fi
gOo5SeuFsViMeiEGbr5cqNqZze+6Q82XC/Xzxa7l6feKOm7gsmVJ532wJOsz
Sa9v7H4dquZGu9+HfkbpZ41+v62fe97j88uF+j6zr010G1rz1P4uehzeayfv
uHX5rgvs+3S7fu288jndudBuw6Tqc6avlz5u73iCftctqj1euZ/6GthjUFTq
+2xtPzj+d3W7Gd9BxwtS7T49aqExJ1yLzV5YmkGf56aid+7QQuq5yV5/KrlQ
2y7Yf8d6/f3IIwnzPtX3pTc3FMqF7jJ33/2I6Z+obULsbfjlpnznF7tvo7u+
vve0lqhtS+15Ze0xzFz1M8BeX7OEfoZoHrTf3+XKhe42otGl5nnU18t+/Hqf
9xg5v5Z+frVf91xzJ/qZNX/hmNuc/KbZru2rnzZ9Als/9zHZ87Y3yeFlD6b7
CQ4Oys7zXyJHEo3SH1vp/H666X9o5re4/17Z+3/fKvve8zazbtvXP2O2tc3K
hMxfiEGrfQpDY/NU0L8Qg7ZQLrTbF6n23IKu+XKhqmPbFTPuprYz8jvGdLbM
v75e57i/e3OhquOg+2VIr97PVjXfdYF9zaf6zSORz+nOhXo83jkQvdrttHK1
1b3rrod9X0O9ptF92NcQlbpu0XpDMfN86HcAueYH8Bp0fpqtBn2em4qlzl/o
HTt5quOR+mU779+3+3u+XOi9lveq39+VMg+Oa655Q7znd7/xUPX58Mt/tvaY
ZFPJhfZcSLmO0Z6fgvPr5M6v+rt9fymvWa5cqO0+u666wrQF1fFFM3NOrE6a
vKd1w/5Vy6S/8VE5eE9ERgYG5PDyRzLLDe3aYdbtuvoKsy1yIVaTJheGQpJK
Try+Rqy0djsdv3aQ2u7Tzi5+19d2e5IHH/TvA6N9Eeyana1eB+Wa79lVM6Pf
uOj6maPHrd9h2p+lfttobe3IeY2ln416feO3nv2dsHfOah2j231+JjN/Wjly
Yb7jU7UGq8+d9zNev9PV47fHntXv+XPtR6/hdLwPHeNj69adWdcndk3Xvl2P
x71dj9Penp3l84117rbV8nuOtL+S9ofyu37J95rmMuj8NFsN8hw3VUvNhd76
iH3eypUL9Xsrdxm/OXm0VuP9bkyPS99D+n5zb/PmQu+5Qc/Vdi3H3qdfG/1i
zi/qypWrs9pU2ur6OgdhrudXc4+dbe3Hp+0sdRn3Nv1ur5TXzpuNHn98k+/3
g5rdc30GcX4t/fyqOdddrtA4uLZ+udCd476v7uZ0fbD/sPTedovsffsbs243
/Qsdle5rfmTakO558+uk96Y/mDkQzVg0zrLuXPbkQqwWBweHzPyFqVSK/oVY
c+oYMfq98Zo1G83PUutr7e1d5rNd1Zw3mWPQrKufp5on9Vog3xjpxW4vV9/8
alPzuc6h7G2v66d+B6CvkZrrelDV6xn3uqFc4w9MRq0raz/Rp5/eVnJ7Xteg
89NsNei/+9mivm/1vPXsszsn/Teu6the+l7RcbjssWCmqm5Xz8061mYp/cpU
zcZ6rtHHp/moHMeTq2amj1n3o8/BZD9H/OT8Oq7WwPU1LWUf/vXC9PwTPTdc
J12/+KHsfOVZmXFjts6dIzvPO1WGuzrH5yvct1u2n3GCbJv3nMy4NTvPeYl0
/uxKZxu/NtvSbZILsVrU97iZp8KMRzr58zoi4nTqHVdi+XL/733r68f7x+Qb
V3Am2Lgt+Aw129TnNOjXFWvTYttSBmEtnl8LufqMF6XnqTh5PBtuO2lsfNKT
0vPWb5s7Vu/TtqBjtcSOb38l02a09cufNMvZy+g6Zt3Mtsa3r/vSfeq+g378
WJu67UiTyWTgx4KImM+GhocmtDfT9kl6DaPjvHrbjk3nPHKVMLVzJPAcNdvU
5zTo1xVr02rOhWqtnV8LufmD7zIZbf1JE7OhyXIm67n/Py7j1rnPkaFd22Xw
2c3p+Ses+9wsaPKhux0rE+q+dJ+676AfP9auDQ0NzjkqwbgziFjVajtfv36d
flbjdVepbto/HHiOmm3qcxr064q1abXnwlo7vxayuzmeqRlmnDcn9//19wXH
SeJ5x8n6d79NHn/nW8zvetuE5fJsU/ep+w768WNtqv0LQ6F6M08F/QsRcSao
83D5jSuh/V107PxcY8nONNv7BgPPUbNNfU6Dfl2xNtU5h7Stpuo33na1WCvn
12LUfKa1uwn5MJcm4zk5cO6ctPOPm5gDc6j70H2RCTFow+EI9UJEnJHqWO46
voKOtxP0sUyH1AzLJ7VCxNKc7edXRMw2XS8MmXph0MeCiIgTXb+XbDhV9TkM
+nVERESsZnU8Uu1fqLmQeiEiYnVK3XDyUidEREQsrGbBaCQq8Tj1QkTEalb7
xmnG0TE1mcMit/rc6HOkzxX9CREREYvTtCMNh51cSD9XRERERETEWlTrhTqv
fSIRpx0pIiIiIiJiDar9C6PRqKRSqcCPBRERERERESuv5sKwtiONab0w+ONB
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
MH9hr5O5TM3QyWKaD9N9/l48McsVrBem+wP2ZO538+UJRlP/S83P6s84sY+i
7u+0rFw4frvVj3EW58JHH12VyRfq//f2907L30i15cItW7bJD3/0c+NNNy2c
0vGUk2KPi1w4O1m2bGXm9dffAQAAAMqJjkeq9cJUKhn0oUzMhdqe1Plpaojx
Eyf0N8zUEOPpdpzpeezT2c2dwzC9zFzp0PnsNd+pzS+QrtXHp+e4d37vbH6O
s8zzpTN+irPu6eltxM6Q7lXnmm11p56Tzof6u97umG5zOndW58IvfumbWblQ
1cxRbqotFy5duqwqc1Wxx0UunJ1c8b2rM6+r/g4AAABQbjQXJuIJkxGDxGRC
W82J2t/Qqh+6c1GYNp1WPz/TH1FrhNpnsOkU6W081fl5hnTFTs2MQ+rWCzUP
dja/UDqaX5TOhKnnmuyXHgfVzZpOPmw8O50Rrfv0ds2Pup1uJ1PaebXUjFjN
dHf3TMiE6qXf+UHZ90UuLA5yYW1DLgQAAIDpxu1fGDSmJufR5EFTq/PWC8fH
hHGXM3NTjNX0ela9RLobz5LOVX8hHbGzHc+S9sTp0pZcIO3JF0u7kw3bnFyo
2bC7+TiTDTuTz3e2eXxWn0NtQ2rqhc5P0wZV/6/1Rs2Tq+c4+z0+05dxNtUL
6+qjWdnC/V1z15EjA2XdF7mwOMiFtQ25EAAAAKYTHYPU1AurYJ6KCfXCsfFJ
021J07W4Ce1IrX6F7hyF3WM1wx7TP/AMJ9Od4vw8VTpS89O5MKHZ8GQnG54k
B5LzpCP+Iulpdvaz+oT0mDeuJhO6OfAFmUzYs/r50u1kQpMNrfFxZlO98AP/
/vHMNegDSx6e8P9SePbZrbLoviXy+z/c7Pyt3WVyy8DA0cz9pWS5cm7Ly6ZN
z8gTTzwlv/ntjZltvPVt7za3uXZ0dOZcv6/voKxcGTOZWrcRDt8tjY0J6e8/
UtJxTPW4cuXCwcEheeyx9XLzzbdJQ8Mi2bp1e8n9RTdseFLuvfcB8/wvvC0k
jy5vlK7unik9Pj+OHTsmzavXyZ133iu/+91NZp9bnOMttU3DU09tlsWLl8oN
N9xq+mTq367208yHPic6pqs+r7p+MfvQZXUd7/Op+3JfI31MLvq3qa+BHtcj
j6yQHTv8/1b1b9td/3Of+3rmddXf7dc/39/Yrl17zHcKN/5xoXHJg4/Izp27
8z4m/VzYuDH9HDzzzJbM7QcPHjJ/47/93Y3m7yjoMawBAACgvFRLLuxzcp2r
Zry+xvmZtqNu5nIzoNunMN3mc8FY+9H56eWaXyz9jy2Qw+uc9dfOM21GW1Mn
SMeaudK9doF0NJ8ylg1Pk9b4qdK6ysmM8Zc62zpbOhOnm3am3c3psU27U85+
9PfVx0u3s37PmnSGbI85mXKls42msbkr3HkTx7LpTM6F27fvzGo7qvXB224P
Zf7/X5/8UlHb0WtinSfBrz2q5pr7Fj9olismy5VzW7nw27bXa6757YT1enp6
5TuX/TDnOnpMP/rxLyadD0s9Lm8uHBkZzXl8emy33HpHwWNY7uQ/nQMk1/4v
++6PpO/gwUk9Phs9Vs0b+prm2tf//M93Cz6XDztZK9/x6vccicRq33U1+9jL
ap7OfbwjWcvq34KNzhXi3qf56qGHl2fdZqv9edvbs793sF/LfMYTzROOTXP0
RZ/+Ss51PnXRl813A37oe8f+G9H859ffeKrfeQAAAED1kJ7XPlwd45HG5mW0
5y/sGasLjrcjnTth/FG3HWmfk/MOxs6SnuXnSH/Ta+RQ/O+kK/YG6Wp8g3Su
fJ0cWH6BdMZfKR2ps6UtfoaTGc+U3tXnS+eKV0vHw3/nLHOByYFmvNLEWc6+
Tk2PRzqWC/tWn+rs4xXStfx/Sdey10jnqtPH+yXOknqhZgz7GlzRepR9Pdje
3pF3G48//kRWRsvl7XeEC2a5cm4rH5PJhVrnsefyyKfmlAMH2ko6pskclzcX
Xv2TXxVcX2uvudA6WzHH8M53fVBaW0t/fC6aMeyaWKHncu/eFt/t/PKXvytq
G+rChfUT1p+uXFhXFy14PJqH7aw12VyYSq0p6j2jy6xZ89iEx+XNhVdd/Uvf
9cmFAAAAswe9rolEIiYXBo3mKVfNTZl8FVuQyYnaztPU86x5BNO57HiTy9pW
vFxaH/4b6Wh6nwxu+KpIy7Uy2rNQZP+NMvDkZU4e/Ljsefj/yO6Vr5HW5pfJ
vtjpsn/FeTL8zEdFtl8uA4//m7P9+Y6nOHnyL9PZ0B3DVG9vOluONL9N5Klv
iOz7rpM3XyGd1hyLM71eqPUau1azqnH87+ITn/hC5nat6eTi8OH+CTURzU5a
M4tE7jJZM9c1qzfLlXNbhbjrrkUSbbhHLrnke1nXxHqbq7bpdNG8oFnIe2w/
+MHPTBvB717+YzO3h33/hz58kXmOp/O4cmUJzVy3/ukOWbRoie91vl+bSW0n
6s0RX/3aJaat7C+cLPq+93806/4LP/rZSX+/ZPefc/f19f++NPP4vfUqfW69
7Uq1bux9XFoX+9Of6kwbSr+as7duOF250FWfM83x99//sDkm7/cKv7r2D5n1
tY2u+xp/8D8/mVlGf7dff7sdsX734H1P6HtX8/2NN96a9T52n+duT1tgOxd6
n/NvfOMy07b3pz/9dVbbWAAAAJj5RMIRaU5NbIdUaexcaMzUCsdrguNjzcy3
MuJc6UvNk/b4X0rb4x+X/r1XORdsN4gM/M65yPutc3F1rchR5/8jt8nosdul
b8910rbmi7Jj5QXS/fh5suvhc0Xavy2jw4tkcOs3ZW/8NGlfPc+MU2Py4Vj9
sDt5lux59NXSteZCGel5wLkmfEham/4mU7ecDf0Ltc5gXy/a131337M4c5/m
oVz8/Be/ybqW1HqVl6GhY/Lv//GJglmunNsqlmLHd9FrY3t/ep3sxze/dXnW
cnodP53H5ZcLtR2oF23XaC+j/QVttBZkf0egv7e1tU/YjrceWWr/U0VrwvY2
3vuvH87qN+pyzz33Zy1nz+On7VjtPKS/799/YMI2tI+qN+vY/eSmMxdefPH3
JuRmfZ7tzKfr+FHsuDOf/8I3svap/TS9eOcm1e8wbPxyofYpBAAAgNlNfX19
VdQLNVO52u1ITS1O1XFfxvKg6ffnjg/jZMXWFafLwOaPyvDAwzIsK+Xgtotl
4IkLZSD2T3Kk6Y3Sufbt0rblIhk9/AeR4SYZPvygdD7xLmlb/XLZv+ovZaT1
EhkdWikD234su2Ivc3Lj8dLW/BzTr1D33RM/3cl/r5Qdy/9W9qz7nAwfedK5
oFsjLU1vSh9n0/xZMR6pXrfmuvbU6277OtGuUbnoNa+dJT5y4Wdyjk2hGcN7
3WxnuXJuqxSKzV92LVDrULnGRNF8oznHXVYz7HQelzcX5qvtfv/Kn2SW0/xq
89BDj2ZlLM1Tfmj9027/qfW5UrH7P+q+Wlr251zW3pc+7y5aB7UfdzK5Juc2
NLvay9rtMKcrF2qfxlx/v+seW5+1Ha2TeykmF3rbe+t3ObnQvwv7OdfvV1y8
uTDXdx4AAAAwu9D+hYlEPPD5C8fHGLWdl/nZ7fYrHMuEnWO3tcXOlr3L3yFy
VOsda2Rw1y+l5ZE3SOejr5S+ppdLT+PZcmDludK65u9la+zNMrD3+042vEmO
bn6rtMdPkZYV54kc+J6z/lo5uuXnsr/xpXIo8Rw5HJ8jfWYOjNOc7ZwuB5vO
lL3OsvvXfcjJl2tk9IiTCxvfaLKrPTbOTK0Xat3Cvhb0m8PebsunbTm9aFvE
QtnRxtvnys5y5dxWKRSTv/RY7H1t3rzFdzmXeDyVtXyh/pmTPS7Fmwu3bduR
c1k7H3lrwF/7+qWZ+/T3fGh7Y3ufpcxlornSrvPly7GKtnnU9q2q/Tdq18n0
90LYNWY7Z01XLrzuuhtybkfr8oX+1ovJhToGrrtMrrqjS39/f9Y+ta2AizcX
6rikAAAAMLvRmkw0Gq2KdqRdbl3Qo5nDXuuEpl44NzPOi5lf3nH/qr+Voy03
yag8Jsf23SAtj/6LdMTOkY7EAulYe4r0rnmpHE6eJ32rz3Vu0/kM/1Y64m+S
A8tOk5H1r5T2Va8W2f8jkYEnZHDTtdK+8iUyEJsjRxvnyOGmF5i57DXvHYqd
JPtWnCFd694to/2NIkdicqDp78fHyZnh9UK73qJ1Or9+Yjqeon3d6a1/eOsw
+a6plT//eUPOLFfObZVCMfnLrqWpdq3FD82B9vJaH5qO41LsXKh5K19/Rvs5
09fcxu47qX3KtN1pLr25UOdGKJbOzq6c+aQU7OPNl8FctO2ku7xdd5yuXGj3
1fXDro1ru1ovxeRC7dtqvz/zvWbedsTaJ9bFmwuD/s4QAAAAph/9vNd6YSwW
C/yz369eqHmwc2xOCjMu6FgmbGt0MmHTS6Rz1ZnSs+afnYu5h2T40Eonw31Y
Wh+9wMlqp0uHkykPpE5z1j9HDq46Xw6vOkuGUi+Vg8tfJj0PnSs9j75cDjVe
ID2NbxI5cI2MHt0og1uvc9Z7pQw8drwMrH2e9D7+YmnfcJp0P/YSOfTYy2Rf
4znSEn+3jBxJyMjhRmmdRbnQHpND22za86O5rl3756zrRZ3LzMaezyJfH0QX
b9tUO8uVc1ulUEz+0rFPSzk2xa6Jaa6cjuNSSpnX3q7JenNhMeNZ5vKxEnKv
1lrtdbu6uoteN9fxFvP85noNp3OeinzY489MNhd+6cvfmvRrpnNSunjHIwUA
AIDaIDQ2T0XQpPsOZuuOOZruU/iidNvR+ALTn7Cr8WwnF75Mhp64UEYPrZbh
ffc5t7/eyVwvMfmxrXm+tKZOlY7EedKz6q9kYNU5MrjyVDm28gwZXHG2kxVf
IZ3LXyvdy98qsv/XzkXeM3J420LZ+NA/yLbGl8sWJ3s+7WxrQ+J8eXrVq2X7
o/8gW5a9VbY9+jE51rfWCbLLZH/j7MiF+/e3Tupa8stfuThrO3pt6d6n4x4W
Q64sV85tlUIx+Wsyx2bXs+zaTDmPSylXLpxsvlD95tPLhbfOW+p4rX7Hq9ss
hM5x6PfYZ3IuzDXHZzHac52QCwEAAGoTndc+lUwFPn+hXy7MakOaqReeJm0r
X+LksVdK67JzZGT712V0ZJcMPnO37H74r6Sz+UTZu+aFcmDN8WZ+iXYnG7am
zpZDsZfI4KpTZGjVPOnXuexjZ8iBpvOlZenfi+y91nn8O2Sk60k52rVKhvru
l8HDUTk8EJWBI/fJUM8yGexslGN7FsvQ3gdFjrU6WXSVtMySeuENN9w66evJ
vr7x+cx1Hjz3dh2XpRA6j3euLFfObZVCMfnL7sdVzLFp1rGPTceDnI7jUsqV
C+1Mo/NF6LwK+dRxVt3fuzzzHuTD22axlDaouY733nsfKLi8zhHhLq/zIbqU
kgu1HXU15UKdQ8RdRvddymu2xZrjnlwIAABQm+j8halUKujDKKpeaPocOrlQ
+wAeSrxaDjx8ngwfuFxkYJsceSosex9N58KWNfOkbe3zpGfNc6V99fGmbqh1
xIGmkxxPkL6mE+VA8nTZm3iF7FryNyJ7fi4j4ly3Hd3pHImq4yxoPyete+g4
75tFRp3rpuENTn7cqEcrI0disi/2D7MiF2p+sK9vdfzBXP74qmuyltWM5GLX
YFQd2yIfOndcrixXzm2VQjH5yzvOf6Fj2717b9by69dvnJbjUsqVCzUruffZ
bQzLjTeHPeK87pPBPt5ixs/UuS/d5f/rk1/KeTzeuf1sdB6MasqFOhaUu4zd
Z7JUyIUAAAC1h7aDMvNUVMF4pP658OQJ9UIda6Yn/nLpX/Na6Vh+voxs+4rp
Gziw6TbZ+uD5cjh5mvSuOt7JXnOka/Uc6UkcL32NZ8jBptPlUOw06UucYOYj
bG1+qbQkL3CypI47c6WMyhPSu/M22bnyfbI/+TbZlfpH2dv8eidTvl7a4m+R
9vg7Zf/yf5bO1EUyMvSEjA6kpKVp5udC7TdYar3myit/mlnennfBm3+8c4Z7
0fFBcmW5cm6rFOz8pdfqfuzd25K1r0JjpSxevDRrec0e03FcSrlyoT1nic4N
MZ3YmeiHP/p53mX1ub/l1jvklltuN8+JyyWXjB/vhz58Ud5t6LnO/i7EbkPp
bRuabxxcbS8bRC70zjfoYs8xWmjMoXyQCwEAAGoTbUeaTCarrh2pWytMz2M/
bmdigXTH/0IONb9Kula+Ugaf+ISMDq6T4bb7zHyCPU2nyKHGF8nhpuOcDPh8
6Wt6ofP/U8xcE72J00wmbGs+xfFlTv67QFoaXyujbd8VGV0rh3ddJ20r/0r6
UmdKZ/MCOZiaJ0edfR52sujBxHnSvfI8OZR8l7O/tTJydM2s6F9oZzydY60Y
vPOQ79y5O3Of3Y9O21j29vb5bsObR/2yXDm3VSz2mKv5ron1ubKPzW5Pa3Pg
QFtWPphsxir2uMqVC3VMIfv5fDhPHU8zj/azVC/69FdK/o7p2l//Pmtfufon
6nwO73v/RzPLabtJl8bGRNY2Ft4Wyrk/zYH2svo82Niv7fXX35pzO/p4K5UL
7fdprr8h3b99PH5zybhojVvHqXFfN3t+SnIhAABAbdLQ0CCJRCLow/Cdo8Ie
i9TUC53fTb0wcZaTrc6VnsZzpT3hXM8eTcnoyFrp2Ph+2b5C5xtcIP2NJ8qR
VWdIX+N8M15NV/JUZxsvldb4GdISf4nsT71c9sXPl72rNBdeIaOyVg45ufDA
yldLj5MLO5qddVML5EjyBDnkrNOXfIXJhQeT75FhJxeODqye8fVCnV/BHsdx
4cL6otbT7xDsed31ut6lrj57HkGd59zb30zn1LPH5c+V5cq5rWLZsOHJrO1o
Hyy/nLPoviUTjs3b5lDnp7AzRjF1z6keV7lyofars7OKyWvxif2QNcPYfwuf
+ezXSn5s2h7T/jvU3zc++XTWMjonot1OUt24cXwZ/Vv2tofWbGvXzLQ/oPY9
tJf54H9+csLx2LU5zXbemuHg4KBpq+r9m5vOXGj3h/TLsi523dTNtd55VHSc
KTvT6nEODBzN3E8uBAAAqE1CoXozT0XQFF0vdHKh9jHsjp/p5KuzZV/jG+Vo
d8TZwtNycPeP5KmH3yj7Y+dK56qXyqEVL5f+ptOkt/lk6Uy+RFpWvlLaVv9f
aX3sX2TX6lfLnsf+SnY3vlak9Qon7KyWgzuvk/0rXmX6InakTnWy4Hw5nHih
9CbPcLLoudK14mVy0MmhI0fH6oUzPBcuW7Yy6xqylPnW7ZqL5gI3L2hWee+/
fnjCNbPmIx2/xL7+ta+b/bJcObdVLFqT9O5Pt/3FL30zq92iorUxv2PTvmt2
fzfXb1965aSOqZTjKlcuVHS+Cb996rzx+ljsueFd87W7zEd9qGHCtvTvSvdz
4Uc/O+E+v/5z2m/Tu5zmGj1erbH5zb3h93firT2quo2rrv6l+buzc3ClcqG3
fqtqPV1ff/1uxEWPwfteULUPpWZG/em9T79jsCEXAgAA1B56LR8OR6qiXtjr
ZD5XzX+at0wOTM21xp45MTOHocmGyVNlf+LV8mzqI3JsYIkZE6bzmR+bvoE7
lr1Cdt1/nnSuOFu6Vp0u+53/71/2f2So+wbngddL6673yu5NF8jOpleLHLhc
RkdSTi681smF55v2ph3aT9HNhWZf50jnynOkz8mFo4OrZXSgecbnQr3WzXed
nQ9td2ZfW+rchi5tbe1ZbUBzqfO729fqftfo5dxWsfz8F7/x3YfdD005fLjf
1McKHZv6zW9dnndsy3IdVzlzofKIZ/yffK5Z89iUHt/NN99W1H60/WN//xHf
bSxf3ljU3Iu6jD5XufjTn+oKbuOee+6vWC7UuqdfDle97W41J+bKrl5vumnh
hH2RCwEAAGoT7V+o9cJq61/Yk3hxpl6Y1ZZ0LB+aZZyfbYkz5alHLpDWJz8l
QwMNzpYekoHOa6Xr2ctkX+OXZFfjf8n22EflwGPfEOm6zbn/QTnWc410PvUm
2Zk6w1nmAhndf7mMHEtK745fScvyC5ycd7q0JxaY/R6KneD83/k9ebZ0rDrH
ue1dMuxkwtH+lLQ0/oPJhEYnq86kXKgZxb4+vPPOe0vehp3XdJxSG51n/pe/
/J3vNbrW2XbsSOc2+9p5z559vvsp57aKQfuxLXnwkQn9x/QYvOj1+l13LfKt
a6raTvGBJQ9P+lhKPS6776c9/4IfmlXcZfPNt6E549Lv/CBnvvrJT6+Vzs6u
sjxGrVHa31fYai1Wx5wpdK7S/q5XXHFVzuPV9qjalrIQ2kfR2w7YzdtaU/TO
P6J/pzZ2++at1jwQfthtYLW/rB9aM9a23t7vSfzaJmtG/fWvr/etHbrZ2u5T
aKPvHXc5XR8AAABmP9pOT/sXVkM7Uq3NuWrm602cYH6aemFybqY9qcmKmhGb
01mxd/VJ0rP2TGld+9ey58n/kEPd14mMNjpbfMIJP0/KYFtM+g/qeJHPyvCR
1XKs/ZfSHnuDdC4/U/pN1rtApOMK5/6kHNnzc9m/4rxMvVD33+dkOJMLE2dJ
56qXOVn0Hc6yKWcfSdnf9DrpbTrRzLM4E+uFlUD7Nmn9Qa/3tT6Vq85T6W0V
i47PoX0aNfcUyiNdXd3muLR2qu0pvfWjoI6rXGi/Os1cOm+85s+Ojs5p25c+
vi1btpmans6tN5nxkvW7Dx1fV49X68k6lqlm61LRvnf6uupjLlf+nSr6t6V/
b7nGO3LR5037b+p7Ro9fn4Ogx54GAACA6iQaiUo8Xq25cDwLprPZPDMeTXdm
ubnSt3q+HF53inStOUt2Jv9S9qx9q/Ru+pT0bbvYyXk/lCPbvycDLVfLUOsv
5NiWrzrrvVlaV5wpR1efJQdXnWqy3uGn3ykHd3xJejf8m3Q0vszUC824p6kT
TR/DHjNfxhnOfWc6P18rfTu/Jn07viZt8XOy64WxBUXXDQEAAAAAAKqFUDjs
5MJ44O1I7VzYO5YLe8f6GfY0zTeZq9vJhjrujP7e52Ys5/eu2Hwzdqn2N9S+
h22Np0j7qvnStdLJjrEzzLgxffFT5ciavzDLmLaqzjqa53R7umzbo/OlY8Vp
0tt0Rno/2o50LIOasVFTp0iHc5va6uTJAyudZXTcVCeras1wprUjBQAAAAAA
cNF57ROJeNCHkc6BY2rfQpMHnZ+qttPsGRtrpit2ajqDOflOa4iZPJYZ/+UE
ORifa+p8Ooe9q97fG3/B+HJOltPfO82YNun2ogebFmS2mc6C89Nj3Tj/1/FJ
3f93a9vV5pPT/R7jJ46Ng0O9EAAAAAAAZh7azyQajUoqNXFeskpjz0WhdUKT
DfX3RHrcF81Sbi7U3/vGaoUmx8XTNUWTHzXzZY0ROpY3nRzYN/azp9FZX382
zR9ro+os2zjf2NN0yli9cF46B461a+3UWmTqlLTNC8xPdz6NdN3wZLPtLnIh
AAAAAADMIDQXhrUdaawK6oWxedmO1fNMzVBzobYXdetymgtNW9PsrOXW6tw2
pna9cNyTJhobWy82XvMzbUid7Gf6Fo7lwcx4qW4mHGtHSr0QAAAAAABmMpFo
1OTCoOuFWr9zNbU9rd+Z+tt4u8+usbyWyVfa/tPS/f9B62dRxk8aa3c6nhHT
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
TCTisn//fmlpaUFERERERMQa8sCBAxKNRk070ra2tsCPBxERERERESur1gi1
XhiLxeTIkQEZGDiKiIiIiIiINeTRo4MSGpunQn8P+ngQERERERGxsppcGApJ
KpkK/FgQERERERGx8g4ODpn5C1OplAwNHQv8eBAREREREbGyap9CM09FIu78
fiTw40FERERERMTK6rYjTSaTgR8LIiIiIiIiBmNDQ4MkEgnGnUFERERERKxB
tX9hKFRv5qmgfyEiIiIiImJtGg5HqBciIiIiIiLWqOl6YcjUC4M+FkRERERE
RKy8Oh6p9i/UXEi9EBERERERsfbULBiNRCUep16IiIiIiIhYi5p2pOGwkwvj
gR8LIiIiIiIiVl6tF+q89olEnHakiIiIiIiINaj2L4xGo5JKpQI/FkRERERE
RKy8mgvD2o40pvXC4I8HERERERERK6v2L4xEoyYXakYM+ngQERERERGxsqbr
hSEzr/3Q0LHAjwcRERERERErq9YL6+rqTP/C/v4jgR8PIiIiIiIiVt5QKCTJ
ZDLw40BERERERMTKq3NTmP6FcfoXIiIiIiIi1qKaBbVemEolmb8QERERERGx
BtWxZjQXJuIJ6oWIiIiIiIg1qJsLtX8h9UJERERERMTaU8cgNfXCRIJciIiI
iIiIWINm2pEyfyEiIiIiImLNGg6HzXikQR8HIiIiIiIiVl4dayYSiZhcSDtS
RERERETE2tPMXxiOSHOqmVyIiIiIiIhYg2qfwvr6euqFiIiIiIiINaz2L0wk
4sxfiIiIiIiIWKNGo1HTjpTxSBEREREREWtPrRFqvTAWi1VFvXD1/l1y4Yp6
OSP8Y5lfd+WsUh+TPjZ9jEE/z34ePnxEensPS3f3Qens7ENERESsCfXaR6+B
9Foo6OsxxKDUPoWhsXkqgu5fqHlpNuZBv3xYbdlQz4VBn5MRERERg1aviYK+
LkMMQpMLQyFJJVOBH4vW0oLObJVSH2vQz7drT8+hwM/BiIiIiNWiXhsFfX2G
WGkHB4fM/IWpVCrw/oW1UCu0a4ZBv/YqdUJERETEiVI3xFpT+xSaeSrMeKTB
tqkOOqtV2qBfe21DH/Q5FxEREbFapb8h1pJuO9JkMhn4sQSd02otF1IrRERE
RMwtNUOsNRsaGiSRSAQ+7kzQOa3WciHjjiIiIiLmVq+Vgr5eQ6yU2r8wFKo3
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
5Ib++WXKC0U5x6B54aYf/7jrsf9Wr6Ve4w8rVnQd94tLLsnMzSb23DN67Bvf
yPS/Hnss8z6eP/ro6MVjj3UePfDA1Fxpe6s1VF64+i//fc92/em++4bKC9cd
cEDmNZ8+7LDMvFD3Eh+3Zt99u/Ju31zmtFr/jmJ4Tz31nGPdjl6s4zWgKJpf
WNvRl2qfioU0v9DP0dLmEupnyT0q/HGeWeNLVeuL5y7myQv9nFC5Zta8RvLC
0eWFr732ZvTAA2tcPqY1WvK26x/+4U/Rhg0vRQ8++Ej06KNPuusMcl+6l8cf
fzp6eM2j0ZbX33Y5nX4+l7xwbLyZmu8988z6Wce++GI7+sR/+GSuY2PPPz8Z
XXLJ5dGJJ54afefvj4hOOfX06Iorr3Fr5WSdo/tZcdeqDq13k3bcffc/3HWc
f02NcfUfk3hNId2H5pNqHuoZZ57t1td5770/dl37P//nf+ycp/V8/Ps98Bvf
6jz2dMa9/+pX77m1es4446zosMO+6/JqvTfPPvtC5n1ntVlrIimG0fjVU0/9
kXvPRv07NNe8UKZ+eNrAuWFZ80L5/Z13DpQXamym/5hej7S2aIypf5zmPubN
zXpJ3oef88XXbp1wQtcxylGHyQvjuaR5DJIXJts87HXdXMmJCZcn+tdXnfT/
HXI93FH/DmI0Vq0a63yX67+t25PFOl4DilSvNxZcvdCvCSbzt2SeF+9Robwu
a69D5Yl+jtcvL9TYVH/9Uf2jcayD3IP1+17U9+ko8sI//vEfXP0sbbyl5p9N
TWWvW65c5PIrrp6VX8RjMZXn9Wqb5v597YBvzDr3rz+3Z7Rmx7lzyQuVsySv
q9ci6/gnn3x21vFahyZ5nPLfZJ0t6esHfjN1XaCzzzmv67h9/3b/1Lbo/v3j
lG/GjylHTD7fpk2vRN/61iGpbVG+q3uLz1fOnmcs7ZFHHTOrXf4aRmn0efnN
b34/67y0Nuu9/cyOGNf/md6zUf8OzUdeqP/utU7pQssLNTfNz9n65YWi/CR+
TONR09qi54+PeXiffWblbqPKC+X/bNjQVUvzc9ddKi/8gD4TD+29d9dzvLFo
EXlhRfg5YdlzQ+t4DSjKTL2w5uqF1m0ZJKfy1//UWNKs+l8sKx8UrU/jzw/U
P8olk7W/5DFzyQnJC3vrlRe+/vo70d/suVffHKFevy/12uece37fc59++vnU
c999973UGp1P9bhh8kLVotLy1LgOmSWZ7x38d4d2Pa7aVp6cSpQrv/zylq7z
R5UXZuWEflvitXSGzQtVe8xznnLD5Lo9aW3ef/+vz/rZQsoL9bNBcsMy54Wy
dv/9B8oLXzn//K7Hk2vpaE6f//hbV11VbF64caOrmcXHPHnoobt0Xiha89TP
hZO5OHnhriktJyxzbmgdrwFF0Xqkml+ovHAh1QvF38OwNcC8vthRLzRm1fw0
FjSt/qi8M+2fXjVI8sIZ850Xau+G+DHNxdNYQNV7Hn/imej0H/2489in/u/P
zMqp/DxBeYf2Aly77olo9epadOxxO+fsqQ756qtvdJ2rcafKieJjVDdSDvjE
E89Fd975czcuM9m/DZIXqg6ZPP+Hp5/Z9zzlMxonGfPzG43HzFrXNCu//dKX
v+LGSsbXGFVemEdcK9V6OnmO1/jY+DlrtYnUY/SZ0Wcj+XPVS/UeD9rmhZYX
DpIbli0vVP6gepJ/3S2XXpo7L9S6ov7jr15wQdfjybG2yb0jkrnZO9cudjXL
NDp20BxLY2P9Y8pWL9R8yaz7Tb7WefNCuX+vvTLff/LCXU8yJ9T/p/3Mup0+
63gNKIpywWajGbVaC6teGOdq/vqjmhfYr24Y1w5bKXMPlWdmna96oJ876ljl
lcPkg+SF/c/plRfGeY5yt7T5hP6aLJq7Fv9c4xb9fsd/LHb+Ty/qPK56lv/Y
9Tfc3JVTvvPOb2edrzxu2Lxw7drHZ+Uct9xy+5xe+8WLb5h1TeWvb7098z6o
Nqg8MHmM5grG1xhlXqjxvG+//Zvo97//L9Ell14+63HNOUw+T551Z/7xH//7
rDHGqjH78xb1t4Dk8/lzBbParL8H3HDDLa6mrPmMzz334sh/h+Y7L8ybG5Yx
L9TPkuu0xHtX9MsL5QFvjdUHvvSlrsf8PRz1HMlzB1mP1F/HtF9euPWZZ9z6
NmOf/I9dx/hr4wySF2q/C+21kSY5TnO+1iNNztccJC/U2jv+tcgLd1298r8y
54bW8RpQFDeOtF7fkRe2zNsyTG6lHM/PDTXW8/zNT6Tmd5prmJxDmLfm59cV
8+5DQV44Yz7zQs0N9HOzQdaZ8cd3ak3PtGNUX4zzDl3ff0xjFOPzVSNMO1/5
iJ+3DJIXaq3RZA6idW3m8trv9Z++3HU91Qh/+9s/dB3z0ku/mPW8/njMUeWF
J5182qzXPjnnU+1PPk+evFBrCSWfT2sDJY/TujtZtb+0Niu3VE22qN+d2Hzk
hWl5X7/csKx5ofal1/zC+Ofx3hV58kLlX/4x8TonGlPq//yX118/0rywn+Qe
i/O1T0WvdUOt8sLk+N609428cOHLk/eVNTe0jteAoqheqH3tg6C14MaR+vle
ct/CuH6oumBabVD/aA5hnnmBy739LV7fcc35yAnJC3vrVS/053ip1tXc8Xie
/NDf/2HT5lczj9Mak/FxmssY/zxeb0R1qF7Po3Uqh8kLV668d1YeonVSh33d
/Rw6dtZZP0k9NjnXT/caPzaqvHBi4sFZ1zjm+z/oOkbjPZPH5MkL02qPGkOc
lNwTxL/vtDbfeuuywn5vfMPmhRLH2k8cckjq471yw81nn935+Z8HXCdylHmh
/PGuu7qurzwkT16oMY/+Me9cc437+WsXXtj1PNOTk33zQuV+2oc+zeazzho6
x3rryiv7PrdFXvj4QQdl3u9vbr556LzwmcMPT32PyQt3HYPke2XMDa3jNaAo
ml/YbDajMAzN2zKXHEtrxDzm7Vff7x/NIcwz5lS1R/+f+aoVkhf21isvVK6U
jNdF+eKiRVdl7jfhzylTXSqLf834uf01YbLyopi/18RA40jXPTHrnm66+bah
X3eNz0zLjdKOTeZ+fu47svVIU3Lz5LjXYfNCP7cfhH/fWeuRFvV745tLXhiP
jVz17/5d5jFZueFrF1/s/v/+RO1rmLyw15olm3bkUIPmhRKcdHLXc2z2rtOr
7qS1TeJjtFeCfqYxpZ0c+uCDU8+bz3Vn9Lzx2E5/3ZXxv/ort4/DXPJC5Vmq
f6ZJ7gNhve6M+OvEau9F8sJdyzB5XtlyQ+t4DSiK8sK6xpFOql5o25b5yLU0
HlT1vXhviqx/VEvsleMpz3w0kWf22g+DvDCbnxf69bderrzq2sy8UDS3S/vW
ZcX32kcinkMXS9vTop8bb7zVnevnCN875tiebX9+fWuovHAqZd0Z5TfDvu6a
O5i8Xr1xf9/XOxav2TOqvFDjV5PXWLLkxnnJC4/+3rFD5YUyaJuLMJe8MM7t
krXAvLmh9pkbtFYo7y1f3nW9f7h3deaxyo3i4zQ3Lm9eqBqkn1MkZeWFWmfU
v+a/PPVU13l6zlHnhX6OtemMM7se++WS6+aUFy6k9Ui1lo3/HFl1bfLChWnL
lreHzu+SuaGuZXUf1vEaUBTNL2w0my4vVI5o2Zb5zLnSpI03VX64bEceqbqg
9iTUnhVZa9LMd3us3/uivk/9sYGa95XnHD+u77WfoNap1FxBHZ+s9Smn+PWv
f9c51q8XKj/S+NM0WsdSe1zov+M5adpXPT5Xexr0avs994wPlRf6zxFTrqXx
oL3O0xhQv94Z561aYyV5vWsXX596Da3j6R/nz61M5oVpc/4kue6pZV545o/P
mfV82tc+6brrb3LzTuP/9+upu0peqJzOX0/lt7fdljs3fOmcc4Z+Xq0F419r
45lnph6n3M2fK5jcp6BXXij/z0MPD5wX/nn9+u5cxMtL9Ryaq1hkXqi9Gvz9
KVQzS4673RXzQtUuk2vtZOXk5IULk58XDlPz83ND8kJg9GbqhTW3r/309Pum
bRl1XhjXEzVHMO8/yiOH2ZuQvHAn7QURf69rvc885/h7KGhP9jznaI7h3Xff
03WucrT4cX+Pic095hdmiethqjv22lPQv99B97U/8sjvzcpFNF8x63itqZo8
3n+Nk48pR0+7TnJNUuVe8WP+viAxrR/qn5+W0xaVF5599uw5k8nxqMk1hPLY
VfJC8deP0XhS1QCzjlUumFY3HNjGjS6/8a/16xtv7DpG+dea/fbrOia5d0S/
vFCSe1f0ywtl3QEHpJ6TnH9XRF4or/z0p12Pq867q+aFGs/69tVXz6r1uvWD
esxDJS9cmLSHrlidPx+s4zWgKKoXjo2NufmFW7duM21LEXlhTLler/ww3scw
zxxE8sLeVHuL42qt6+HvFZBGa3DGxyf3otD+cr/81XuOv8ee77alyzvn++us
XHjRJZ2fa5+BrOfXep3au1D851AdLj7/oYfXpZ6r/MgfTzloXqi1WJK5iGgP
i+SxYbgpdR8+f60ara+ZfFz7PfrXSVsH1c8t0/aGbybG9mpep1VeqJx21muT
MibX/xtBTHtMnHHm2TPOOKvrc7Er5YXi1wKzckP9TI/d8a//1bzkhtrfL5l3
qT701N//ffTIV7/aNa8urpOpljdoXijJvSv65YVabzQtL9QegnnzQtX41OYs
qmXmzbGSdVNd+8/e2jdlyAt73WvyXP+6/rl+XTTpv99339Cfb4vfS1SHdbwG
FKlWq0XtHX2SdTuKzAtjmkeo8aUXbH7C5YHak3DYferJC9Np7wZ/jKfi+ORe
CTHt/+DH4dqn3n9c++rFj2mdmbTc8PLLr+4cozU+458n5++lrfWpdsXrjoo/
H1JrUfr5atpcyWOPO6HrOQbNC+WbBx2cmhuqlqj9DJU7Zc2fS879U/6WPEb1
1KuuWhw98MAalyunzbvUaxVfw58v6d+/XmfljFltGVVemDavVPtqLFt+l5t3
Gh+XzB9F80X1vBp/rLYn713jTwdtcxHmIy+U9Ucd1ZUb+vme6lP6Wfz4+u9/
f15yw6z8K0l5jfbxS56fNy9M7l3RLy/UeqPJNihn+T8bNuTOC/v5U7OROy+U
LZde2nXMhtN/WKq8sJfke5PMC3tRvvinOeSE5IUYNet4DSiK9qZw8wtbu/78
wrKxfu+L/E711+gUzUVTzqcajmJ5rbvp7w8Y5y/vvtu9V5xyTH+c6MF/d2i0
ctWYW2NFdbDkXLjkeMdkbnf8CSe7epnqf8qV/PxV+Y5/rub5+TmJ2qE8Qve2
5Lobu/bPmEteqJxlmDVylEOl5S2HfPs7A11Hr6F/ftoY0TxGlReqBpz1nP6+
i2n5bC967/1cf1fMC+P8z4/J137ta117vfs5YL/9DfP6w4oV0f177ZWaE2j9
UdUP/5yyL4S8t3RpV97W63mSe1dkzROM+fMKXS589NE9j/9zSi7ZMy/0ch3/
PrJyVo2h9MfeKteKX5fkc2tdH/9cf0ym1mnN+960Tjihc17zc3+T+doPmhf6
102j9YVUM9YaO8PsV0heiCJZx2tAUZQLql4Yhu0Fu3/hQmX93hf9vervPZEn
Rldcn3ad8R15WJ68aWXGHHeNkex3rupu2psiea7qiWljN30aiziXvFA0hjW5
vmcvylezarBaeyctZ83Kq9L2gswa3xr79qGHFbYe6Vtv/TLz/ffzQknbEzKN
rqcxpf65u2peKJpvqHwsGatrP4rk/vXzlRuKanHKlbRnoNa/2fr00/N+b6gm
i99LVId1vAYURWvNKC8MWgH1QvLCkXv6mfXR1w/8Zs/4/KSTT4t+9av3el5H
eZPW4UzmB/p//bzXujJaM+b6G25Oze9Ux9RYzbTcyH9uf++N2Ff2+VuXy2re
X/wz7a8+7GulWqfGavr10bT8WWNB+61ZqvG2qmn6Y2R9Gtt7192rel5jxYqV
qeer7qu2/s2ee3X9/Jprr+ucq/cjeZ5ex+Rz6H3xj/H3mfdpj0rl98k1UE86
6dRZx7bbG1PX84k/L5pb+MuUz1veNhfh/9u0ed7jaK1T2j555/5/2sM+69hk
bmidAwDdNpv8XqI6rOM1oChxXqj5hdQLyQuLor0FtWfFsmUr3P4AGsup9WZ6
5WNZ3nzzVy4fUx1pkPOUH6odWtNT+5Vn1duyKBfSecOcOwjlfKplrV5dc/U0
7TWx4q5V0ZNPPts3H0yzZctbbuyu9v/QdZP7PPajnF1zM3VucpyuBb2P+txk
rUPkv1/KEdeueyJ6/IlnBr5vS//7lVdHFlPH+533O87PDe3zAGAn/X5Y/45i
12YdrwFF0Rqkrl4YBOZ54f9Vv8I8VyuK7tX6vbf+ngWQz5/ffNs89gbKSr8f
1r+j2LVZx2tAUTrjSEuwf+F3nxs3z9eKonu1fu+tv2cB5PPP7/3BPPYGykq/
H9a/o9i1WcdrQJHq9bpbj9S6HRv+6+8qUTPUPeperV9v6+9ZAPmNciwpsFAx
hhRFsI7XgKJorZlGo+HyQutxpKJ8SbW0XTE/1D3p3sqQE4r19yyA/KgZArNR
K0QRrOM1oChu/8J6I5oKp0qRF6I41t+zAAaz7Z1fmcfhQFno98H6dxLVYB2v
AUXRnMLx8fHS1AtRHOvvWQCDIzcEyAlRLOt4DSiS5hcGQct8/0IUy/p7FsBw
NHaO+YaoIn3uGTuKolnHa0CRms2mG0dqvR4pimX9PQtgbhQfa43+mRxxs3nM
Dsy/ze7zrc85+SCsWMdrQFFUI1S9cHJyknphxVh/zwIAAJSddbwGFEVzCmsf
7FPB/MJqsf6eBQAAKDvreA0oissLa7UobIfmbUGxrL9nAQAAys46XgOKsn37
tNu/MAxD5hdWjPX3LAAAQNlZx2tAUTSn0O1T4dYj3WbeHhTH+nsWAACg7Kzj
NaAo8TjSdrtt3hYUy/p7FgAAoOys4zWgSBMTE1EQBKw7UzHW37MAAABlZx2v
AUXR/MJabdztU8H8wmqx/p4FAAAoO+t4DShSvd6gXlhB1t+zAAAAZWcdrwFF
makX1ly90LotKJb19ywAAEDZWcdrQFG0HqnmFyovpF5YLdbfswAAAGVnHa8B
RVEu2Gw0o1aLemHVWH/PAgAAlJ11vAYUxY0jrdd35IUt87agWNbfswAAAGVn
Ha8BRVG9UPvaB0GLcaQVY/09CwAAUHbW8RpQFM0vbDabURiG5m1Bsay/ZwEA
AMrOOl4DiqK8sK5xpJOqF9q3B8Wx/p4FAAAoO+t4DSiK5hc2mk2XFypHtG4P
imP9PQsAAFB21vEaUJSZemHN7Ws/Pf2+eXtQnP/xP/6X+XctAABAWSlWso7X
gKKoXjg2NubmF27dus28PSjO//yf/2L+fQsAAFBWipWs4zWgSLVaLWq32+bt
QLH+5V+2mX/fAgAAlJViJet4DSiK9qZw8wtbzC+sImqGAAAAs1ErRNUoF1S9
MAzb7F9YUf/0T/9s/t0LAABQFoqNrOMzoGhaa0Z5YdAKqBdWGHVDAAAA6oSo
rjgv1PxC6oXVpjH0+i5knVIAAFAlin0UAzGfEFWmNUhdvTAIyAsBAAAAoII6
40jZvxAAAAAAKqter7v1SK3bAQAAAAAontaaaTQaLi9kHCkAAAAAVI/bv7De
iKbCKfJCAAAAAKggzSkcHx+nXggAAAAAFab5hUHQYv9CAAAAAKioZrPpxpGy
HikAAAAAVI9qhKoXTk5OUi8EAAAAgArSnMLaB/tUML8QAAAAAKrH5YW1WhS2
Q/O2AAAAAACKt337tNu/MAxD5hcCAAAAQAVpTqHbp8KtR7rNvD0AAAAAgGLF
40jb7bZ5WwAAAAAANiYmJqIgCFh3BgAAAAAqSPMLa7Vxt08F8wsBAAAAoJrq
9Qb1QgAAAACoqJl6Yc3VC63bAgAAAAAontYj1fxC5YXUCwEAAACgepQLNhvN
qNWiXggAAAAAVeTGkdbrO/LClnlbAAAAAADFU71Q+9oHQYtxpAAAAABQQZpf
2Gw2ozAMzdsCAAAAACie8sK6xpFOql5o3x4AAAAAQLE0v7DRbLq8UDmidXtQ
Dk899Wx09PeOiz7/+X2iT3/mS9Fff24fAMACo+9vfY/r+1zf69Z9CwCgvGbq
hTW3r/309Pvm7YEtxQ1f2efr5rEMAGD+6fud/BAAkEb1wrGxMTe/cOvWbebt
gZ0zzzzXPGYBAIyevu+t+xwAQPnUarWo3W6btwN2NMbIOk4BABRH3/vWfQ8A
oDy0N4WbX9hifmFVUScEgGqibggAiCkXVL0wDNvsX1hBmmdiHZcAAOww3xAA
IFprRnlh0AqoF1YQa8wAQLWpH7DuiwAA9uK8UPMLqRdWC7VCAIBQMwQAaA1S
Vy8MAvLCimGtGQCAsAYNAKAzjpT9CytHex1bxyIAAHvqD6z7JACAvXq97tYj
tW4HivXpz3zJPBYBANhTf2DdJwEAbGmtmUaj4fJCxpFWi3UcAgAoD+s+CQBg
y+1fWG9EU+EUeWHFWMcgAIDysO6TAAC2NKdwfHycemEFWccgAIDysO6TAAD2
NL8wCFrsX1gx1jEIAKA8rPskAIC9ZrPpxpGyHmm1WMcgAIDysO6TAAC2VCNU
vXBycpJ6YcVYxyAAgPKw7pMAALY0p7D2wT4VzC+sFusYBABQHtZ9EgDAlssL
a7UobIfmbUGxrGMQAEB5WPdJAABb27dPu/0LwzBkfmHFWMcgAIDysO6TAAC2
NKfQ7VPh1iPdZt4eFMc6BgEAlId1nwQAsBWPI2232+ZtQbGsYxAAQHlY90kA
AHsTExNREASsO1Mx1jEIAKA8rPskAIAtzS+s1cbdPhXML6wW6xgkdtll10WX
X3FjqtN+eF6031cPyTx33789OPPcpKOOPiXzOl/e+xvR1VffEt13/2PRCy9s
iqY2bIkef/zFaNU990XHn3Bmz/YfedRJ7voX/+zavveq54nb85V9Dup67Mdn
XZzrPi5bdH205+f3m3XtL37p69E5514a3XHHWPTMM2HUDl+LGo217pxDvn3M
rOO/dsB3cr92/nP3u8f5vK7u89yfXBbV6mt23FM72rjxdXdv9foj0fnnX576
OgxDr/3Mc4TRhh3v/UMPPRldc82t0fePPT33Nb518JHR0qWrojVrnomC4NWo
3X7V/feyZaujvzvk6J7nnnPOpe51OOnkc/o+z3e+c6w79tIdvzdZvwsHHfTd
vte54IIr3bHHfP+0eXvv5vL72Ovzr891nnvC3Fj3SQAAe/V6g3phBVnHIKLc
6N13/9jXpk1vuLg7ef7pP/pprvNl9b0PpLZh8ZLbo3fe+UPPcxXnf/3Aw1LP
X7Xqvs5x/e5XOWZ8bDIHmJr6Re572f9rh3adq7xPr1Gvc5T3+ucor8r7fD7F
/r3ucb6uq9fqF7/4Vc9z9Pgpp5w79Ofv24d+P9q8+a2ez7Fu3XPRF/baP/Ma
yk3vu++xvvf34INPZl5n8+Y33TGPPba+b5tvvW1l55r6W0Da74I+S/1y5rfe
+p07Vjn2fL13c/l9zPP5f+ON91wObf29tauy7pMAALZm6oU1Vy+0bguKZR2D
SDIv3PL6bzqSudqWLb+ODjv8+K7zk3Ho22//PtMdd47Nen7VA7vjzt9Ga9c+
5+L8ycmXZ+UgaXW3UeSFve5D8bxfa1RuE8f48T088eRk9NBDT3XyjdhtS1d2
zvvRGRekXr/X66nnUc2z1z3Ox3VVH0rmBE89FUTNiXU7/t2a9dlQPjPoZ++I
I06I3nzzva7rqCapWmEyx1YNUbW05DWUe61fv6nr2JdeestdQ5I55+TkS6m5
4XznhfLzlRM9r5OWF871vZvL76P/+fe/B5LPLz+7ZLH5d9euyLpPAgDY0nqk
ml+ovJB6YbVYxyDi54XXX7981uMaf6d6TXyMxnb6j/txqD8eLo/TT++OYRWn
JmN25aF+bqVcMXmd+c4Llf8Mch8auxhfs9lcN+seLrzo6k4OoDi7Xx0pvpaf
L8yHvNfVuGHVhfz3PFkf1TH+50L3lzymF70GGmfrv6/f+OYRXcdovKbywfgY
/a0geZ077xzvPK5c9byU/FQ5rp/H3n13Y9Yxo8gL5cSTzsq8TlpeONf3bi6/
j70+/6pHany0n2/O1xhi7GTdJwEAbCkXbDaaUatFvbBqrGMQ6ZcXiuK/8IMY
PhkPziUO9Ws5DzzweOZxyXqc5mX5j1vnhRs3ztS2VPvKipWXLV+dK1cQ67xw
bOyhrjqdn/v4lP+GXm43SHuVK++sr76XOUZYz/HKK+908j5/rKvqh34OtmjR
DZnPp7mn/rHJHHRUeaHanvX6LaS8MDY+/nDn+r3mC2M41n0SAMCWG0dar+/I
C1vmbUGxrGMQyZMXil8T88eSDhuH6hrxeUHwSt/agz+uMRm7W+eFcXyvHCDr
GOUGmocnvebKiWVeqPchrhXqvvqtNaL8yj8+bw1J72HcnjPPvKjnsZdcuqRz
rD9H88qrbu78XPlKv+e85577O8dfu3hp12PznRf6f8fQvMZen5uFlBfqbxrx
9fX6z+fnE+SFAFB1qhdqX/sgaDGOtGKsYxDJmxcuX35v5zjV7+KfDxuHXnfd
ss55V+WML/1Y288/rPNCP8e56aYVc35PLPPC7x1zauc4zfPMc13No4zPybN+
qN67eFyn3tM8z6F6ovhzIDWHM+1vFVn0uY2P1zxG/7H5zgtPO+28Th1Z0uZf
LsS88JRTz+1cP8/auBiMdZ8EALCl+YXNZjMKw9C8LSiWdQwiefJCfyxfr1hY
a1FobF8W/5p+Lnf88b33oYg9/XTQOcefyzbfeaHGRva6j2S9T/GxP3ZQYy/1
WmpdlWHmYFnmhWed9bPOcTffcneu695wwx2dc1TX7Xe83rud+Vk49P348077
1WBF70V8/Msvv5N6rfnKC7975Ilu/5T4/1VTTc6/HHVeOMjvo//575UX6m8F
8fX7jYfG4Kz7JACALeWFdY0jnVS90L49KI51DCJ+XqhxdlpPJKYxhBrj568P
ov0F/fMHWRffX0t0zZqnOz/vt+9CTOvSpNWHit6nIm1c4Iq7aqnHqi627tHn
Xb6VN0e0zAu1V1183BlnXpjrutrjcpDar9aTiY+/K2UNmLzimqPy8LznaE/D
tM/KKPJC/eyWW+/u/Ex/1/CvM+q8cJDfR//zr9fI/x5QDqm/3Tyy9tmuvJp1
Z+afdZ8EALCl+YWNZtPlhcoRrduD4ljHIJJ3/8KZOkJr1l7wg8Sh/vhTf+xl
3vjSr0tpvGP886LzQu1/kHZtjR3UmMqsvRhfffXd1D0gkyzzQs27i4877gc/
ynVdjR2Nz9H44H7HK2eKj89bk+x1P889N5X7HL/m7H/uRpUXir+Phj+v0Tov
9H8fB/n86/OtvwXM52cTM6z7JACArZl6Yc3taz89/b55e1Ac6xhE8uaFS2+/
p28cet31y108nMU/r9FYm1m3yOLvXe7nV/OdFypH6HUfqqH0eg7NgdPrsmzZ
6mjK22dBtAdjv/Mt88ILL9y5TqjWe8lzXX+tT/13v+NVh46P77UObT/a80PX
0BjNvOdob0mdo7Vj/Z+PMi/U2jxxDqicKv68jzovHOT30f/896JaYtbasZg7
6z4JAGBL9cKxsTE3v3Dr1m3m7UFxrGMQ8fNCjY9UHS6m8Y/xY/46kFlx6CDr
XPj7NpxzTv85aeLPJ/Prln5e2G+emb9n4nytO9OP6mn+nhwXXXxNz+Mt80J/
XRGNK85zXf/11+vb73jlzfHxek+HvR/teRhfJ8/eicrHO/lN+FrqZ+vZZ/vP
d/T3TMyTF8qll13XeSwIXnW1yrKuO6PXwv8e0N+E4mvmXYsIw7HukwAA9mq1
WtRut83bgWJZxyDSa90Z7WkfP6Y6i78WZGzYONTfd+LnKye6HlPM/JPzFjnx
mjSagxgf//LLb3cd7++3nVYH8fm1nmOP6147c1R5ofh1uH57Kljmhf6aMMnc
KYs/Zy9tPZM0eg/Tcvw0+jwotxb/2NWrH+hco99eF6Jjst4D5Wr6eZ792p9f
v7Fznay9PNM+h+vW7VyzRXNly5oXJj//ukf/7xp514nC4Kz7JACALe1N4eYX
tphfWDXWMYj0W4/U3+M8bY2QYeNQ1Vn8eXj+2oZqk8Zb+nGo5jbG/69ao3+t
K7y1UvrNb/Nj+uTe5sPkhSeeuHM/t/N/ekXmcX9/2HGd41bdc1/Pa1rmhfLC
i5s7xyqP7nXsbUt35tmq3+Vti7+GkNYz6XWsn8tfcsnina+9t5fea6/9suf6
RXpMx8THqy7qP75mzTOdx/y5q2mf2/i4LVt+nfm7kJYXJj/Xg7zPlnmh6G80
w7zPGIx1nwQAsKVcUPXCMGyzf2HFWMcg0i8v1Ng71VD0uPK4ZC41lzhUNZtO
jP36b7pqTf54T19aG/y6ph5Pxvwxf81Q7S2XfHyYvFCvX5zfqr6WVlMVf6zl
j864oOc1rfPC886/vOs1z1qX1K+/yQUXXJm7LXrP/L8LZOXzWvsmrqupZu2P
E1Ydy58T9/zzG1JrffqZ//cArV+aPE57OsSPv/TSW6l1Tz239j2Mj1t97wOZ
vwtZdeu0dWEWQl4oQfBKrr+BYHjWfRIAwJbWmlFeGLQC6oUVYx2DSJ79C5cu
XdU5RvtL+I/5cWitvia67LLrMmk/N/9c1V5e8+onqqXEa2X4+6v7tCZpWhub
E+u6ckPlgMpb9Jyaz+fXgyRtTmMcF6sdve5D67H4eYW/r7vO1V4NGvOoGqH2
p/BrneLPSUtjnRfK44+/2PV6aq6h7umoo09x/9YYTj+v0x7zg7ZH6/L4r4ve
Q+WBWidTfxdQ3uU/nla7TH5OtPfkBRde1dk/UON3Q2+fFVH7k9dRzufvx6J9
GG66aYWrSep4za+dnHypq1bY628kvcYz+38PGWVeOOjvY7+80K/Paj9T9qmY
f9Z9EgDAVpwXan4h9cJqsY5BJE9eqDwmXvsxGVcPsi5+sr4iqhv5c5f66XUv
yXg7jXKZc39yWer5edfpF3+dE9VU/b0IsmgNzDzrspQhL9R7rlwvz2uh4/rl
ulmUu+R5Do1hzspDzjr7Z52adi86ptcaR6r1vvBC//dR41H1uU2enzcvVA66
adMbI88LB/19zFMv9z8TWX+jwfCs+yQAgC2tQerqhUFAXlgx1jGIKJ6PY+or
e+xJrhpYHA/ee++DnZ/78+v6WbGilnptxeOqHcV7CGTReELtcdDrfhYvud2N
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
xyAAgPKw7pMAALbivFDzC6kXVot1DAIAKA/rPgkAYEtrkLp6YRCQF1aMdQwC
ACgP6z4JAGCrM46U/QsrxzoGAQCUh3WfBACwV6/X3Xqk1u1AsaxjEABAeVj3
SQAAW1prptFouLyQcaTVYh2DAADKw7pPAgDYcvsX1hvRVDhFXlgx1jEIAKA8
rPskAIAtzSkcHx+nXlhB1jEIAKA8rPskAIA9zS8Mghb7F1aMdQwCACgP6z4J
AGCv2Wy6caSsR1ot1jFI7LLLrosuv+LGVKf98Lxov68eknnuvn97cOa5SUcd
fUrqNfTzq6++JbrvvseiqalfRE89FURLb78nOvPMi6I9P79f6jk/Putid2y7
/eqs59F5vdqcdNwPfhStXDkRPf74i9HUhi3RCy9ujh544PHo2sVLo6/sc1Cu
1+7EE8/q+zzHHne6O/a88y/PPEav90033xWtXftctGFHW9aseSa67vrl0fEn
nDnU++c759xLc78men3zXPP8n14xb5+l+X5frtjxnPr3IL8Lixbd4M67dMDz
kp/nn3vtfuLJyejmW+6OTjn13OgLe+2f6xpf3vsbM78T9z8WvfDCJncdXW/V
Pff1/CzIkUed5F7vi392ba7nid+f5GsafwYuvOjqvtf5+oGHuWP1+sW/s/q3
/j/v90PM/4zk/Rxetuj6ru+KI444IfNY3c9hhx+f+d1iybpPAgDYUo1Q9cLJ
yUnqhRVjHYOIYsF33/1jX5s2vRF96+AjZ51/+o9+mut8WX3vA7POv+OOsZ7n
KBfY/2uHzjpPOWG/59u8+c3o7w87LvPedd3JyZd7XuOdd/4Q3XDDHX1fu7ff
/n3q6+NT3qtjf/GLX8167Itf+rqL+3u1pdlcNyuWzfv+ycsvv5P7c5Hn9ZU3
3nhv3j5Lo3hf5PvHnp7rnpVv+ecpZxrkd0nv4VNPtXq2e+PG1/t+ThYvud3d
X6/rBMGrLhdLO3/Vqvs6xw1yzyedfE7mZ+DCC3vnhspB42O/8c0j3M/Uvryf
TZ/+rjPo51D874kVd9X6Hq/X+I47x4b63hwV6z4JAGBLcwprH+xTwfzCarGO
QdJi6C2v/6YjGZtu2fJr93d2//xkXqj8KEsyBovzpJhiwAcffDJ65pkweuut
33U9b7KW4ceLcXvfeOO3s2I//TzZZlFsrvysO9Z+xbVJtTqd5z82Pv5w39du
cvKlnjWIrLxQ5yhX8uPV59dvdLWxZH70/PMberah1+uvXCLv58J/fXtdU7n3
fH2WRvW+qOaW554ffvjpofNC5YTJHEa1bH2e9bnw7//NN99ztcO066ge6F9D
n2ndt+4/+VnQ63TIt4+ZfY0R5IVq89cO+E7mddLyQo0l0O9x8jPT7/PqtyPv
51DP439H+HmhHo8/h/73Sqxef8TkuzeNdZ8EALDl8sJaLQrboXlbUCzrGCQZ
Q19//fJZj//dIUdH69Y91zlGNS3/cT8vPOb7pw0UR8fnvbYjvk3GpIopNf4u
PubKK29KjVk15tT/uXIstdmP8ZVzJZ9//fpNncdffvnt6LtHntj1uMb7LVu2
OrOOkXztYkuXrsq856y88MSTzuqcrzGDcVwd07hA5V/xMX4NtN/7N6ys13eU
n6VRvi/9xp1q7GLynEHywnvvfbArh0qOK9a1/Ht/5ZXZtdvTT+/+G4v+jpIc
d6pc2v8sKFdMXmcUeaHo7zVZ10nLC7M89NCTnb8NjOJzKH5emPxbjb57Lrr4
Glfrjo/R79h8/e7MhXWfBACwtX37tNu/MAxD5hdWjHUMInnyCsVVYfha52/v
fpw1bF6oeUPxeddcc2tm2+L6gvKlQePFZ55pd57Dn7P0k/MWddUSeo011djN
nXnKO7Pal8wl5HvHnJp6ray8UHPo4nM1LyrtXNWX4mNuW7pyoPdvGKPIC/t9
lkb5vixZcnvPtt9004qh88KDDvpu13lnnfWzzGPXrNn594ofnXFB12ObN7/V
eUy14qxrfPvQ73fVvS644Mqux0eVF/Z6HRdSXhg7//zLO8cs7vP5KIp1nwQA
sKU5hW6fCrce6Tbz9qA41jGI5M0rVAeLj/PH/w2bF2o9kPg85QNZx2kNj1NO
OXdWjpAnXjzr7J+l1pQeWfts5+fn91gDRhRTahxgfLxfv/JfOz9OV30ybX2R
rLwwjpMlbS5lTK+D+McstLyw12dpFO/Lztzx7Z7Xe/XVd4fOC7UOTnzOXXc3
eh6rcZ/xsaofxj/X6xD/XONm+62JojWE4uMfe2x912OjyAvjz7fGw37nO8fO
us5CzAv1Oxofo8/efP3uzIV1nwQAsBWPI2232+ZtQbGsYxDJG8svX35v5zjV
K+KfD5sXKo6Pz9O6m73mLg0bLyqHip8jXptRMWI810s1qTzPpbUO4+vceOOd
qa+d6g2axxb/f9q8t6y80M8rHnnk2YHWSVyIeWHaZ2lU74vm+MX/nTWnT3W7
+Ji4ljlIXqjXKO13I4s+61qTxa9hX3fdss41rrrq5lzP6/8twv/MzHdeqLzz
kkuX7HxNd7xGyc/oQswL9f7Gxzz00FPz9rszF9Z9EgDA3sTERBQEAevOVIx1
DCJ5Ynn9XV3zoeLjND8nfszPC392yWIX82bxr6lYza/RKCfQ2DnV9XrVzAaJ
F2+9bWXn+nG90Z9H9txzG/o+j2g9y/gcf01V/7VTbqfXRWMa458lxwlm5YWq
v/jrkuhx1Z0Us/uvdb/3T3Pcer3+g+Sbo8oLsz5Lo3pflDvG6xGte/T51OvE
81i1Lon2qBg0L3zppZ3jP4fd+8DP5Y4/vvc+FLGnn96Zj/q/M6PIC/X/Wv8m
PjZZFx11Xqh8vddnO1mfz5MXXnPtbZ1jes0LLpJ1nwQAsKX5hbXauNungvmF
1WIdg4gfQ99zz/0uPo9p3pTytLZXQ0mu7TjIPhXJtRN1/bTxe7Jx4xuuBqRj
esWLWXmL9r6Lcy3VVeKfKwfLim2z+HUFxcZpr53ywmScrfzOX++k1z4Vmm+Z
tTeB8iTl3Gl5yiD7VAyyJ58/hlDrw2Tx90qYy2dpVO/LOedc6tZvif8/+fcJ
f26g9sz055zlzQvj901172F/D/15h1pzKc85/n3543FHlRfqdfXXivX3URx1
XtiP1n31z/PzQq13FH8OlT9rjRm9dv7vm44Z9r2bT9Z9EgDAXr3eoF5YQdYx
SBzr5c0rtDdbcl3HQfLCtDF2ioFVW/LXWExKyxP8eNHfs/qWW+92dSH/fK1f
GZ/nj1+9+ea7cr1GqjfE56i2lPbaxXlhMib185VeeaEoN9J+6Gn7bYjiWOU5
w75/g+zxnjce1/zP+fgsjep90evl537+mj3i75+pHHeYvDA+Pm+dM41yr/g6
eWuO2r8xPsdf62hUeWHy91218bjea50X6pr+eXn2L+x8Pyxf3bcdRbHukwAA
tmbqhTVXL7RuC4plHYNI3lhetZS08/048bod+Z3i+yz92qKah8b9KcZL7nOm
OWnDxIvJnFIxa/xYrzUffdpTLz5HuV3aa+fnhYrr/Xltl1yy2P28X17on696
p+acaW+A5D358+T8Nuh+er3+aWvh9IvH9T6o9pfFnyM3l8/SqN6XOI+Ox4rq
tY/zLv07OcZ0mLwwvob2PRj297DRWNt53rQ9CdP4+3/qtYh/Psq8UMbGHtr5
un9Q8x11Xqi/G/X6bPufQ8m7r33eMbtFse6TAAC2tB6p5hcqL6ReWC3WMYj4
MbTGYqnuEPPrbldffUvq+cOuO9OPcpi7d+R08bWTuVTavvYxrVOpGqHWnUle
1x97qHlhedqifQfic+68czz1tfPzQlFt1B/Hqlg5b16YpLGP/l6OExOPprah
TOvODPpZGtX7EueF/t6A8c/8HDDOtYfJC4Ng598AkvlJXqpZJdvXj19j92uv
fl7Y728B/uuSNy/UNTXOOz7v3J9cVup1Z/Texp9Dfy+U11775UB/KymCdZ8E
ALClXLDZaEatFvXCqrGOQaRXXqE5N/Fjqomkxcmjygtj/poe/ly2YeNF8ePp
PHO5/Pz0PG//hF55oSz21hl9/vkNbq3RYfJC8etpr3nnlzUvHOazNIr3xc+x
4vVunn12Zn927YmZzEOHyQu19mx8jvKsfsfr90Rr5vg1Pn/fCY0l7ncNvT7x
8ck9OPyxsf3q9P7aTMced3rqZyCZF4rGD/vv513ee1G2vDA5Ltevs958y93z
9jszH6z7JACALTeOtF7fkRe2zNuCYlnHINIvr/DHjKXN8xs2L1y/fiYmVy7Q
67g1a55JrcXMJS/098/TPLdex5540lmdY5O5Qr+8UPw1I2N+Xqj5WXFdsVZf
07Mt8XHa/zzv+zesUaxH2u+zNIr3xc8L1ab455d76476790weeFpPzyvc45y
zF5ryPrjNv3xsv7nQHR/vZ5Tr098bHJ+nL+mqsYi97rO8+s3ZuZzvfJC8XNK
X9nzQtXf/Vr+sDXeUbDukwAAtlQv1L72QdBiHGnFWMcg0i+WV8wUz/VTLJWM
+YbNCzXuLz5PcwrTjtF6IW+++Z47RvHhfMSLonvwY/Cs9S8VP2pcanxcvf5I
5muXlRdq/UPNO8vKCyUeh6g2xftpJJ3n5St+exdSXtjvszSK98XPC1VjS675
qv/3x2AOkxcq7/BrnVn7Yajd/rxTf80e8euOur+sPT39Omna6+jXZvV41r6N
fu6kcaFZn4GsvFDimutCygvFr2/2+3tMkaz7JACALc0vbDabURiG5m1Bsaxj
EMmTV/h1HK2n7z/m54WKr7TmZRatDx+fp/l3fiyp655x5oUuL9J4NtU5/H27
k2uVzCUvlOu82lEc+6ruozlIGnunx/01+fXfyTwhT14ofk6Xlhf6+7Mrjtca
+prrpfVJFdOvXv1A1/n+PDC/DVqjptfrf9bZP8v9+oxq/8Jen6VRvC/JuXqq
0fnX13ov/uPD5IWiuaz+dZ97bsp9nvU5V41Qr4f/eVadLnkN1QxfS9xbvJaT
7l+vg/YG8Z9Ha5Kmtac5sa7rM6U8SfuE6Hfwoouv6arDp71O/megV16oHNC/
r1HlhXoten22L7l0SVf+1y8v1Hsb/81J9Ls2zPfIfLPukwAAtpQX1jWOdFL1
Qvv2oDjWMUgyhs6K5RWv+vUZzY2KHxtknwp/73G58qqbM/fs684Zn5m1PsRc
80Lx93/rRWMD0/Y3y5sXip+PJPNCxa2qeeVpS3IPh0H2htC+Anlfm1Hlhb0+
S6N4X5L5jp7Pv0ayZjdsXijaHzJPu7WGUHK/l5juR+OE81zHX2snjV9/zKLf
P60b0+sz0CsvTLtvi30qRLX5+Lw8+9r744r9fU4sWfdJAABbml/YaDZdXqgc
0bo9KI51DCKK0+OxfcrTso67asdjcQx1770Pdn5+4oln5Y7bVqyozbquaiGa
a5iWHyo+vummFantiecnPrL22Tndv2owaXtBiNbT0LqmWfmB/9r12xtQx8br
nmzaNHvMnlx40dXRxo2vp7ZFY01Vf+rVhn7C8LXcr8swr+9cP0ujeF90neTj
ca6h1zT5mGpqekw1sGHWqlRd79FH16e2W+97nrG+ui/dX9Y+lnpd0u4rzeIl
t7s1j5K/XxrbvG7dc6lr9iY/A8m9AdPoWnGe2W++Xvw3kH5zi/025Mlv/Vw7
nvuo+8zKC/X+ak3S+BpZ43aLZN0nAQBszdQLa25f++np983bg+JYxyBlothN
6zNqnJtqOL3W7hgFzT074ogT3HNr3J/aknd/8fmmeFV7OaotGt9m1Y4yKNP7
MgjlKHG7h/08x78Tum9dQ9fLs05r1rX0mdLvl+btWr8+SGfdJwEAbKleODY2
5uYXbt26zbw9KI51DAIAKA/rPgkAYK9Wq0Xtdtu8HSiWdQwCACgP6z4JAGBL
e1O4+YUt5hdWjXUMAgAoD+s+CQBgS7mg6oVh2Gb/woqxjkEAAOVh3ScBAGxp
rRnlhUEroF5YMdYxCACgPKz7JACArTgv1PxC6oXVYh2DAADKw7pPAgDY0hqk
rl4YBOSFFWMdgwAAysO6TwIA2OqMI2X/wsqxjkEAAOVh3ScBAOzV63W3Hql1
O1As6xgEAFAe1n0SAMCW1pppNBouL2QcabVYxyAAgPKw7pMAALbc/oX1RjQV
TpEXVox1DAIAKA/rPgkAYEtzCsfHx6kXVpB1DAIAKA/rPgkAYE/zC4Ogxf6F
FWMdgwAAysO6TwIA2Gs2m24cKeuRVot1DAIAKA/rPgkAYEs1QtULJycnqRdW
jHUMAgAoD+s+CQBgS3MKax/sU8H8wmqxjkEAAOVh3ScBAGy5vLBWi8J2aN4W
FMs6BgEAlId1nwQAsLV9+7TbvzAMQ+YXVox1DAIAKA/rPgkAYEtzCt0+FW49
0m3m7UFxrGMQAEB5WPdJAABb8TjSdrtt3hYUyzoGAQCUh3WfBACwNzExEQVB
wLozFWMdgwAAysO6TwIA2NL8wlpt3O1TwfzCarGOQQAA5WHdJwEA7NXrDeqF
FfShD30IAADHuk8CANiaqRfWXL3Qui0olnUMAgAoD+s+CQBgS+uRan6h8kLq
hdViHYMAAMrDuk8CANhSLthsNKNWi3ph1VjHIACA8rDukwAAttw40np9R17Y
Mm8LimUdgwAAysO6TwIA2FK9UPvaB0GLcaQVYx2DAADKw7pPAgDY0vzCZrMZ
hWFo3hYUyzoGAQCUh3WfBACwpbywrnGkk6oX2rcHxbGOQQAA5WHdJwEAbGl+
YaPZdHmhckTr9qA41jEIAKA8rPskAICtmXphze1rPz39vnl7UBzrGAQAUB7W
fRIAwJbqhWNjY25+4dat28zbg+JYxyAAgPKw7pMAAPZqtVrUbrfN24FiWccg
AIDysO6TAAC2tDeFm1/YYn5h1VjHIACA8rDukwAAtpQLql4Yhm32L6wY6xgE
AFAe1n0SAMCW1ppRXhi0AuqFFWMdgwAAysO6TwIA2IrzQs0vpF5YLdYxCACg
PKz7JACALa1B6uqFQUBeWDHWMQgAoDys+yQAgK3OOFL2L6wc6xgEAFAe1n0S
AMBevV5365FatwPFso5BAADlYd0nAQBsaa2ZRqPh8kLGkVaLdQwCACgP6z4J
AGDL7V9Yb0RT4RR5YcVYxyAAgPKw7pMAALY0p3B8fJx6YQVZxyAAgPKw7pMA
APY0vzAIWuxfWDHWMQgAoDys+yQAgL1ms+nGkbIeabVYxyAAgPKw7pMAALZU
I1S9cHJyknphxVjHIACA8rDukwAAtjSnsPbBPhXML6wW6xgEAFAe1n0SAMCW
ywtrtShsh+ZtQbGsYxAAQHlY90kAAFvbt0+7/QvDMGR+YcVYxyAAgPKw7pMA
ALY0p9DtU+HWI91m3h4UxzoGAQCUh3WfBACwFY8jbbfb5m1BsaxjEABAeVj3
SQAAexMTE1EQBKw7UzHWMQgAoDys+yQAgC3NL6zVxt0+FcwvrBbrGAQAUB7W
fRIAwF693qBeWEHWMQgAoDys+yQAgK2ZemHN1Qut24JiWccgAIDysO6TAAC2
tB6p5hcqL6ReWC3WMQgAoDys+yQAgC3lgs1GM2q1qBdWjXUMAgAoD+s+CQBg
y40jrdd35IUt87agWNYxCACgPKz7JACALdULta99ELQYR1ox1jEIAKA8rPsk
AIAtzS9sNptRGIbmbUGxrGOQNF/4wheilStXurWQxsbGoo985CPmbQKAKrDu
kwAAtpQX1jWOdFL1Qvv2oDjWMYhP+d8VV1wRbd68OXrppZc6Pv7xj5u3DQCq
wLpPAgDY0vzCRrPp8kLliNbtQXGsY5DYQQcdFD377LNd+SB5IQAUy7pPAgDY
Ui548cUXR7fddls0Pf2+eXtQHOsYRHbbbbeuPHDDhg3khQBgwLpPAgDYUr3w
wgsvjJYuXRpt3brNvD0ojnUMIn5eeOedd0af+MQnoiVLlpAXAkDBrPskAIA9
rfHRbrfN24FiWccgsdNOOy3aY489Ov9PXggAxbPukwAAtrQ3hZtf2GJ+YdVY
xyBZyAsBoHjWfRIAwJZyQdULw7DN/oUVYx2DZCEvBIDiWfdJAABbWmtGeWHQ
CqgXVox1DJKFvBAAimfdJwEAbMV5oeYXUi+sFusYJAt5IQAUz7pPAgDY0hqk
rl4YBOSFFWMdg2QhLwSA4ln3SQAAW51xpDvyQvYvrBbrGCQLeSEAFM+6TwIA
2KvX6249Uut2oFjWMUgW8kIAKJ51nwQAsKW1ZhqNhssLGUdaLdYxSBbyQgAo
nnWfBACw5fYvrDeiqXCKvLBirGOQLOSFAFA86z4JAGBLcwrHx8epF1aQdQyS
hbwQAIpn3ScBAOxpfmEQtNi/sGKsY5DYEUccER199NEdDz/8cCcvPOecc7oe
22OPPczbCwC7Ius+CQBgr9lsunGkrEdaLdYxiOy2226dHDCPM844w7zNALAr
su6TAAC2VCNUvXBycpJ6YcVYxyDykY98JNq4cWPuvPCkk04ybzMA7Iqs+yQA
gC3NKax9sE8F8wurxToGAQCUh3WfBACw5fLCWi0K26F5W1As6xgEAFAe1n0S
AMDW9u3Tbv/CMAyZX1gx1jEIAKA8rPskAIAtzSl0+1S49Ui3mbcHxbGOQQAA
5WHdJwEAbMXjSNvttnlbUCzrGAQAUB7WfRIAwN7ExEQUBAHrzlSMdQwCACgP
6z4JAGBL8wtrtXG3TwXzC6vFOgYBAJSHdZ8EALBXrzeoF1aQdQwCACgP6z4J
AGBrpl5Yc/VC67agWNYxCACgPKz7JACALa1HqvmFygupF1aLdQwCACgP6z4J
AGBLuWCz0YxaLeqFVWMdgwAAysO6TwIA2HLjSOv1HXlhy7wtKJZ1DAIAKA/r
PgkAYEv1Qu1rHwQtxpFWjHUMAgAoD+s+CQBgS/MLm81mFIaheVtQLOsYBABQ
HtZ9EgDAlvLCusaRTqpeaN8eFMc6BgEAlId1nwQAsKX5hY1m0+WFyhGt24Pi
WMcgAIDysO6TAAC2ZuqFNbev/fT0++btQXGsYxAAQHlY90kAAFuqF46Njbn5
hVu3bjNvD4pjHYMAAMrDuk8CANir1WpRu902bweKZR2DAADKw7pPAgDY0t4U
bn5hi/mFVWMdgwAAysO6TwIA2FIuqHphGLbZv7BirGMQAEB5WPdJAABbWmtG
eWHQCqgXVox1DAIAKA/rPgkAYEt54fLly6N169ZSL6wY6xgEAFAe1n0SAMCW
1iBdtmxZtHYteWHVWMcgAIDysO6TAAC2VC9UXvjII4+wf2HFWMcgAIDysO6T
AAD27rzzzmjtunXm7UCxrGMQAEB5WPdJAABbWmum0Wi4fSoYR1ot1jEIAKA8
rPskAIAtt39hvRFNhVPkhRXz4Q9/2DwOAQDYU39g3ScBAGxpTuH4+Dj1wgra
fffdzWMRAIA99QfWfRIAwF69Xo+CoMX+hRWz7777msciAAB76g+s+yQAgL1m
s+nGkbIeabUsWrTIPBYBANhTf2DdJwEAbKlGqHrh5OQk9cKK2bLldfNYBABg
T/2BdZ8EALClOYW1HXkh8wur6fDDjzCPRwAAdtQPWPdFAAB7Li+s1aKwHZq3
BcXT34hZlxQAqknf/9QKAQCyffu0278wDEPmF1bU7bcvM49NAADF0/e/dR8E
ACgHzSl0+1S49Ui3mbcHNliDBgCqhbVmAAC+eBxpu902bwts6e/GjCkFgF2b
vuepEwIA0kxMTERBELDuDNw8E9aiAYBdk77fmU8IAEij+YW12rjbp4L5hYgp
btAYI+11vPvuu1NHBIAFRt/b+v7W97i+z8kHAQD91OsN6oUAAAAAUFEz9cKa
qxdatwUAAAAAUDytR6r5hcoLqRcCAAAAQPUoF2w2mlGrRb0QAAAAAKrIjSOt
13fkhS3ztgAAAAAAiqd6ofa1D4IW40gBAAAAoII0v7DZbEZhGJq3BQAAAABQ
POWFdY0jnVS90L49AAAAAIBiaX5ho9l0eaFyROv2AAAAAACKNVMvrLl97aen
3zdvDwAAAACgWKoXjo2NufmFW7duM28PAAAAAKB4tVotarfb5u0AAAAAABRP
e1O4+YUt5hcCAAAAQBUpF1S9MAzb7F8IAAAAABWktWaUFwatgHohAAAAAFRQ
nBdqfiH1QgAAAACoHq1B6uqFQUBeCAAAAAAV1BlHyv6FAAAAAFBZ9XrdrUdq
3Q4AAAAAQPG01kyj0XB5IeNIAQAAAKB63P6F9UY0FU6RFwIAAABABWlO4fj4
OPVCAAAAAKgwzS8Mghb7FwIAAABARTWbTTeOlPVIAQAAAKB6VCNUvXBycpJ6
IQAAAABUkOYU1j7Yp4L5hQAAAABQPS4vrNWisB2atwUAAAAAULzt26fd/oVh
GDK/EAAAAAAqSHMK3T4Vbj3SbebtAQAAAAAUKx5H2m63zdsCAAAAALAxMTER
BUHAujMAAAAAUEGaX1irjbt9KphfCAAAAADVVK83qBcCAAAAQEXN1Atrrl5o
3RYAAAAAQPG0HqnmFyovpF4IAAAAANWjXLDZaEatFvVCAAAAAKgiN460Xt+R
F7bM2wIAAAAAKJ7qhdrXPghajCMFAAAAgArS/MJmsxmFYWjeFgAAAABA8ZQX
1jWOdFL1Qvv2AAAAAACKpfmFjWbT5YXKEa3bAwAAAAAo1ky9sOb2tZ+eft+8
PQAAAACAYqleODY25uYXbt26zbw9AAAAAIDi1Wq1qN1um7cDAAAAAFA87U3h
5he2mF8IAAAAAFWkXFD1wjBss38hAAAAAFSQ1ppRXhi0AuqFAAAAAFBBygvP
PffcaMmSJdQLAQAAAKCCtAbpueecEy1evJi8EAAAAAAqqDOOlP0LAQAAAKCy
6vW6W4/Uuh0AAAAAgOJprZlGo+HyQsaRAgAAAED1uP0L641oKpwiLwQAAACA
CtKcwvHxceqFAAAAAFBhml8YBC32LwQAAACAimo2m24cKeuRAgAAAED1qEao
euHk5CT1QgAAAACoIM0prH2wTwXzCwEAAPD/s3cmzrIUVf7/s34xEzMRjqGh
Y2C4BAqCjoLIgMiAbIIgyCqyyCaLiLLc28sVBIF5igzy8PbyEAERRPYd2QQE
4THzHszU733zkc3pvLV219J96/ON+ASP29XVWVlZWXnynDwJAO3D2YWdTjQe
jRsvCwAAAAAAANTPjh073f6F4/GY9YUAAAAAAAAtRGsK3T4VLh/pO42XBwAA
AAAAAOrFx5GORqPGywIAAAAAAADNsLa2Fg2HQ/LOAAAAAAAAtBCtL+x0Vt0+
FawvBAAA+IBXX309+tOfH228HABQH2+/vT265w8PsH8btJJut4e/EErji187
IvrHj+zpuOHmWxsvD8BwfNekTX5qr681Xp464Dmcn+t+8avoHz782ej//ctn
or2+fGjj5QHIy0GHnTB5/q/pXt94eerkx1f1J9d+2DGnFP7+o48/Ff3zxz7v
nvsPfXzv6Pm/vNT4NQHUxW5/Ycf5C5suC9TPVw46atJ/zoM95yc/f4DrT8VK
/4bGrxHg1tuHkzb5oU98ofHy1AHP4fzssedXJ3Uotv3+D42XCSAPe33l0Em7
vfjylcbLUyfnXnjF5No1P1b0+9859QdTz/05F/648WsCqAv5yLW+UHYh/sL2
8dl9D57q/2bFnpPx6Objrnvvj/7j6JMdZ5xzSePlKQp2Ic/hLGjezPZzTz71
bONlgsVBfaHvF9VHNl0eC3bh7HbhpVesTj33nbUbl+reQ31sxnYgW7Df60eD
Af7CNqLYKOxCyEL3cZntKuxCnsNZ0LrCvfc7LPrIJ7/oxopNlwcWC/Uli/qM
YRfObhe+9vobbpyv+3vkcadHf3/r7aW691Afm7EduDjSbneXXThovCywWJx1
/o8m7f1Tex+Y+3uMRzcf2IXLB88hQLUs8pgQu3B2u3DZ7z3Ux2ZsB/IXal/7
4XBAHClMgV0IHuzC5YPnEKBaFnlMiF2IXQjVsxnbgdYX9vv9aDweN14WWCzK
tguV4+vKlWujU868KLpxy23Riy+9Uqg8zz3/QnTtDb90a8BP/t4FLufYHcM7
K7n24Z13Rz/dVdZTv39RdN7FP422DrZFr7/+RqFzPPTw425dgupR5b38yl70
m62DaPv2d1K/pzVMvx39zvH0M8+nHvv0s89Pjn3iyWemPnvhxVcmn6ks/u/K
u3/zr37j7oPGCyrTy6+8Gnv+bb+7x33/xNPOm9zTf/ro5ybnzSrjrPdMcfr+
/D6G580339pV1lF0+tkXu7I/8uiTue9Fkl34xpt/d+c889xLXZzgvff9qVBe
8pdffjW6ff1OV4+nnHlhtPbzLdHDjz5RqJ387Y033XVeeOlV0Wln/dDVl+7X
vPnRk57D++7/s8tPqPtxwSVXumdR9VDk3GU9i/qOvqtz6Fw/u36LO3fad8po
17nv767v+98K96p4663tk8/uuvu+DX8/+/zLHTdu+a/C6xJ93/H98y5z61d0
XVk5EfU8+PL4Y9WGlGtffdhJZ5wf3X5H/Hu+zOdU+f31/3qm1Ka3/nabq5Pw
u48/8bS732rzF112dXTnXfe671bdBuPKLP74wEOuD1Cf37v2ZvecxH3f9rnq
C/0zpj7S/13vj7LbfVz9qY2ofaidKOewPUfZduFTTz/n2uHZF1wenfmDy6L/
vOX2zDZZ1bOq719/0y3O/lO/q3p48KHHJp/PaxfquVEOa5Vb78Cy7r3q45e3
3uHqT/Wofz/7XLH7nodZ+g+1d38Nr772t9RjH3jwkcmxf911L+xnRfuhRem3
RJ19wCKj+u8qjnRd/sLmywOLQ1l2oZ4Rn/M55GOf/nLmmEl96cGHn5C4tvHD
e+zr+oYyrlnn0VqipN/618/u5/rEtHMoZ2FaPh/VxQ8uuiLx+9889tTJscee
+P3U3zr+5HMmx2o9hP1M71v/mcYIWjORVC7l4r9q9boN58+ztjSujPPeM+W4
9cdqzK3xQ3iO62/6de77GtqFss0PPPTbiXWh92na+fQ+2uerhyden85x2U+6
qefQu3e/rx+T2k5U7lnbcvgcqt1+7t8Oif0t1bdsxKxzlvUs6hgdm3SeAw87
PnHeqIx2nRfrJ1d92s80hrC/o78d850zE6/puO+enWl/ayy055fi75Frux/f
O3HPEY1//XEaF2ssaJ8jcfQJ36v0OdW98ft6WNSn+pwMGv8fcdxpib8Zl+Oj
yjLr98J6su1L9pD9/kmnn5f425a4ez1Pu7fX/9WvfyvxHMqlqTnMsuxC1VHa
O1FtUjZUHc+q+m29C+LamFCeKNnL89qFGvfb885772WnffwzX048XnmPi8xz
VtF/2Ht80y9vS/2dPfbcf3Ks7Kd5+qFF6Lfq7AOWAa0v7PX7zi5k/06wlGEX
qg9Pet4mz/An9kmcy1Jfqc/zPIMq7zzXq3mpPL+jd1JSvyl/UZ5z+PeVfGDh
OaqwC2UPJNkEFvXL9hx5riMsYxn3zLYZ66u0zGMXpo1LPfJ1xJ1Lc5dZbdqj
90fcOeR7ShsfWuQfnaU92+dQdm6eModtqIpnUfPXec6h39IYL/x+Ge06L0Xs
QvnHssqhMUbSb2m8ljTezdMm7PhKe7bFncuOr8p+TuX/SDuHjlVsgd4lWb8n
/1lVbdCWWf6IrPPIH2D9J7OOCedt90L1l6ffUK4km1NuVrvwgl19YJ4yizh7
o8xnVT5n28aTkO1j95lo2i5UvECe51rHyCaa5T6V0X9UYRfm6Yea7rfq7AOW
hd3+wo7b137nzncbLw8sDmXYhbav1jOv2EyNH+QntJ/H7RmtmKKPfupLU8fp
/2WH6FmWvybsQ265bba8uiu9GzaU+dNf+HdX1iuuXosOPeq7Gz7XuNCe4/4/
PbzhGM0RnnDque79us/+h20o73EnnbWhLFXYhfbdo35YNs+lV3Si/Q85dsPn
NhZJPi+dx85P6xj9zWPjbMq6Z3E2jL6nuVDV51HHn5Hpt7VYu9CicYraue6x
rXdPXCxI2HY1BpNNIBtCY7/QN65YofAc4dzxMbveexoTbPn1Vnd94XsvK544
73Mo9E5XnIximT6119c2fK5Y76qeRY33w3uq78pXKV9b+Bu6hnC+sox2nbtf
yGkXWuQP0bhLfZ3qJ6wXxd+Fv6MYuPA8qgs931d3f+7GIeEzoeu050gaM+t+
a1z17ZPPnsylVPmcqt9UXJf6ztAGtMfrWdYxumfhfiAah1XVBuPK7M8jf5Xu
nd5XU/30d8+efN/7RUPfqPpI/3fdG9tuy2j3IvQF6VpUdz/80TXu/RqW2zOL
XajnJfwtPVeK+VU9qc8K6ztca1Hms6r+Ku5ZUxvS3GHYL3vKtAuL3ntdhz1O
/5bdq7UL/etudvfMtkfZ/EXLWlb/UYVdmNUPLVK/VXUfsEzIX7iysuLWF2at
e4J2UZZdqBiJ8H2h59uOBXwclkVjC3se+fPCY9Qf2mdcvqCiz6Limuw5VJbQ
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
o7WGytGWtA+w5pGS1oaEZUnKZ605PMX62Fxwyktmvy872/5m2m/Z8W/SvVb/
KnsnnK+Ly4Ew7z2zdTfPu9Jj33dZOdtsvJbGReHnmgOUPR43ZlI9677ZdTdJ
63N0/5L2i9a5da5HHn1y5msOn8O/vfGmG8PFtW3dc+XGyzpnWc+i6ieMu7bj
Fq0NCeOrq2rXadixfDhWtXkQsvIC5RlnCs076B4ltQn1B0lzUvIL+GPz5jSs
6zm1vqe0dVa6n/64uHnCOsss7DphxfvFHaP7oTmzsJ+OGxPO0+49ip3U9cfN
G+od5e3uPHWZheJS1ebi+gz1+2qvF5j9A9QGq35WNX8rP1ZYHtX/BZdc6frn
tDLlIYyjTTou773360aTxhV6d6etlcvLPP2HR+0nrqz6f59rz845Kp7Xfr9o
P7TI/VYVfcAyIB+h/IXr6+v4C2Hh0TtTz6b8P3qeNdat4nc0L6tnXTF1+r1Z
+my9vx99/Cl3DsURqbxJ+xpkIVtDe9jpHIvQ18g21phB9yOr36jrnjWBrk33
VzFfs95boTlQ2WWqpzA+uWzULn170npXxQjPeu3z3ld95/4/PezqULZ70b27
Niu6R4898bSrF80haZxa9W8u43O6SGXWWFXlUb+Y1ReU0e7t+0V9R9VtRPmX
1WfIj1jlvlF5UT3r2dD1qx6aHL8Wufdaf3b7+p0uLqWq9lpG/6Frkj2r9ilf
ZFqe9iZZ1j5gkdGaws77+1SwvhAAAAAAAKB9OLuw04nGo/hcAwAAAAAAALC5
2bFjp9u/cDwes74QAAAAAACghSgm2+1T4fKRLmb8MAAAAAAAAFSHjyMdjUaN
lwUAAAAAAACaYW1tLRoOh+SdAQAAAAAAaCFaX9jprLp9KlhfCAAAAAAA0E66
3R7+QgAAAAAAgJay21/Ycf7CpssCAAAAAAAA9aN8pFpfKLsQfyEAAAAAAED7
kC3Y7/WjwQB/IQAAAAAAQBtxcaTd7i67cNB4WQAAAAAAAKB+5C/UvvbD4YA4
UgAAAAAAgBai9YX9fj8aj8eNlwUAAAAAAADqR3ZhV3Gk6/IXNl8eAAAAAAAA
qBetL+z1+84ulI3YdHkAAAAAAACgXnb7CztuX/udO99tvDwAAAAAAABQL/IX
rqysuPWF27e/03h5AAAAAAAAoH46nU40Go0aLwcAAAAAAADUj/amcOsLB6wv
BAAAAAAAaCOyBeUvHI9H7F8IAAAAAADQQpRrRnbhcDDEXwgAAAAAANBCvF2o
9YX4CwEAAAAAANqHcpA6f+FwiF0IAAAAAADQQiZxpOxfCAAAAAAA0Fq63a7L
R9p0OQAAAAAAAKB+lGum1+s5u5A4UgAAAAAAgPbh9i/s9qJt423YhQAAAAAA
AC1EawpXV1fxFwIAAAAAALQYrS8cDgfsXwgAAAAAANBS+v2+iyMlHylAebz9
9vbonj88wHxLAf72xpvRa6+/0Xg5AMrgjw88FL1Oe6Z+AQCWBI1Z5S9cX19n
/AqNMRzfFf3jR/Z0fGqvrzVennl59PGnon/+2Oej//cvn4k+9PG9o+f/8lLj
ZVpU7rr3/mi/rx8TffgT+7j6Envs+dXGywWLxxe/dsSkn7jh5lvnOtdBh50w
Odc13esLfz+tz9K7VH9TW/6HD382+uWtd0x9/oOLrph899snn914vS4bWfUL
0ASbbRwD7URrCjvv71PB+kJoiltvH05sgg994guNl2devnPqDybXI8658MeN
l+nFl16JvnTgkZP3lvj7W29X8luvvva3qd956unnYo/7/T1/dJ/buhIf+/SX
G68vWDw++fkDJm1kpX/DXOfa6yuHTs518eUrhb+f1mfdctv6VHve68uHTn1+
0unnTT47+IgTG6/XZSOrfgGaYLONY6CdOLuw04nGo3HjZYH2stn600uvWJ0a
t3TWbmy0PLffMZ74Ly1vvPn3Sn7v5ZdfnfqdRx59MvY42X/2uE9/4d/dOPmM
cy5p/B7C4rEsduH9f3p4ql1/48iTpj5fNrtQz+N/HH2yQ/79psuTVb/QbtRG
fXst412S93ybbRwD7WTHjp1u/8LxeMz6QmiMzdafao2c3iG6liOPO70yv1wW
WuN44mnnbbAHF8EufPPNt6aOueDSqxq/b7DYLItdKBQr+uE99nWxr4ort58t
m12o6yur3ssirX6h3aiNljmeyHu+zTaOgXaiOH23T4XLR/pO4+WBdkJ/Wj4P
P/pEtMee+0/ZXlqLsyh24bbf3TN1DGswIYtlsgvTwC4EqA7sQoDZ8XGko9Go
8bJAe6E/LZenn31+gw34lYOOcuviF8UuvOmXt00+V86ZpusMFh/swmbALoRl
ArsQYD7W1tai4XBI3pkW8tvR7yZoj4Cs47Xvgj/+hRdfjj1GOUZu/tVvorMv
uDw68weXRf95y+2ZvqC0/lQ+bdkz+s3hnXdnllHHuGN3fScrx+4DDz7i+vzT
z77YsdK7wa1dmbdebZnlF0s7VvWu4y689KrotLN+GF17wy+jhx5+fK78wA8+
9NiUj/CnK9e6vyuve5N2oa2Xs87/0eRzrX20bbFIXNh99/958r2nn3k+8/jH
n3h6crzqOe4Yxf0qx+GlV3Sik8443+UN6l93c/TEk8/kvu9lt1XLX199fXIN
uv6k4/Tc+ePUJpKOU73541Q/ZdbJq6asWc+W4q/TrquIXajr0LperQf6/nmX
ufylzz3/wuTzqu3Ce+/70+Rawr0U8tqF9v4JPVdxx+m61G/onpz8vQuiH1/V
j+4Y3ln4mqbaxLMftIl/+ujnJuVVXLr/e1Yb1+dX7up7Tv3+Re4+XN39eWnr
E9PqV/2N/8y+e9TOV9d+4dqv+kSVr0iMf/gMqJ71TlS8ftJ33npr+6Qsd919
3+TvupfX/eJXri2cee6l7ri47+s+6nd0X3V/f3b9lql2HMcLL74S28c9+9wL
LvfuKWdeGPWuvTn2WVc5bl+/062R13EqY9bvVVlm9R8aT5xy5kXuOf3N1kH0
8ivxz4Hetfq+XTuhtmufoTzviFnPl9Qn6D37m60jd59Vr2q7Rd/vs9QpwCxo
fWGns+r2qWB9YbuQPWJ9Sle+bzskobGoHet3r71p6nO98z7yyS8mrmXTfg0a
/8adO22MFdoYabaM3s95YhP1Lv/svgcnllWfqe+etW41prLniztGOTu1P0NS
GWQrqV5m+X1vFyqvy5/+/Ojk703bhbofSdc77ds8OvdvfWrvA6d8olnH2/t+
4KHf3tB+NP6Iy5HqkT1h67TqthrHll9vnRqnJB133ElnfeCT3WPfxONkm/jj
jjr+jFLrRPaKP+7jn0nPM6sxd1p589iFGl9+9evfSiyrcgXLjqjaLrQ+tvA5
zmMXPvnUs67P9Mep/jWPFV7rwYefkHitqkPV/yzPsC1jGnFtXO8G/XbSd9Qv
aaw/S7ny1K/WHPrPzr3wCtfv2ePDOkp6L3m2b3/HjemtfbyxzzrK2TDhd22f
q/et7C7b9jx6H4TPTVodHnjY8S7HdFx51Z7ts6l28q+f3S/2PLIzvF2r58/u
F2TRvgtx11dVmTVHlPSOVj1etXrdhnPkaa/Hnvj93G2s6PnCPkHtRu+YpGvQ
fFVWGeapU4BZ6XZ7+Atbih0/ZeX61jyj7dOsf1E5Q/L0oSJu37E67UKNqcMY
y6R+W/nQZ6nXLLtQY+i0vt4iP2bR39d1a/wbzoVvRrtQc6j2nqVdk3zc9nfs
/dW8R9pcQZ62UZddqGfPfjfJFxjO08jWiDvOjpnteL2MOqnTLtTcfZ7nau/9
DnP9nf//RbMLFXNhvy97JLS79UwljeFD5Jsven2z2oV2LiILxZTM2sfktQs1
bo/LxRySFNche+1z/3ZIrutR2wtjEEK78JvHnhr7XWsXyrea6/d23f84n5+1
sVR25XlOO4/utX32ktC+sq8FvtmqypynzmXz23Pk+f067cIjjjst8/sXpuRb
m7dOAWZht7+w4/yFTZcF6ifcByopPkNoLOWP0xy1/7tiGew5NK+9/yHHRhdd
drWb0zvmhO9tsMPCuJ+67MLHdvWdYVnkb1L/qxhO63vy7/FZ8qFk2YUaH9vP
VUcaj8tmPeHUczeM94rEvqTRtF0oO/WSH6+6McAhxkelNqO/eRQrlPe3Xg38
2Gn+kcuv7E2O01jRxvKE87oqk3wAP/zRNdEx3zlzg42lthHel7rsQmHtNV1X
VhvMe5yd7ymjTuq0C/f80iGJ5T3smFOm/G+WRbILdT/sd1XmcH2u2s5HP/Wl
qWvQ/2uMet7FP432+erhG/q5onNciv/wz6M9l+YS/d8VT2mfIcVmhnWrdnr2
+Ze7+S2/F71lVr9hXrvQPu+q6yuuXnO5TMOyKEdX3O9YX7pv4zr/ZT/pujoI
fX/6HRtXGva59jjtJ6t4VPno/Rye4gPD39P9vOCSK90zF953PRNhTKK1seyz
oBzZ6gOUIztsH/7/NQehZ0Xzbd8++ewNz0xcH1JVmX1dy3ZSW9O4IvzcxlL6
e2Lnu3WMfbdkreuwFD2f7RMssnE1N6O2FzcvEBePXUadAsyC2pHWF8ouxF/Y
PnT/7VxqXGyGCMfeWn/gPzvuu2dP9V1xa4g0123fQxr/2c/rsgutjyCuHGLt
59P98UGHnZD4e0mk2YWqC/uZ1miF39e7LlzTU8b9btoutNi8M7Iv5vk9G4+b
FktqbSmNeeLan1DMlfbRCL+vsYk9TuO6qtpqFpor99/VuCX8PG6Mvu8B39xw
nNbg+c9VP2XXSV12oeIQbDn0W3Hl1Zg4rJdFsQu1/svOCekcces3tb7Ill+2
RXiMfMg29lfnmnXcmCfvjGLZbB+vf8c997+/549TZdf7J2ltXd4yZdmFakuK
pbTHqC7CMXq4pnXrb7dNfa5+KpzTFHa+KezT4+xC3f+4a5LP0Pb7+nfc/Q/9
UFq3aT8PbSydJ/QnaZ1nGBsuGzCc13G+a2MbhvMYVZVZ7SfOhgvtJc0/h8cs
Qt4ZT9w8peZc7DF6nquoU4BZkC3Y7/WjwQB/YVs5/uRzJv1KUiyp8rHYd4f9
TOupNbco7Lr6ENlX/hyKcbSf1WEX6n1nP4ub9/RoLYl9P8WNL9NIswvDeJ2k
c2uM4utV69vLuNeb1S606+2SYknDGFI7f2HnoTVWSoq3DNuxsD72Ou1Cey81
tg4/l308GRe/b2uobsIcGYce9d3JcTYuq6w6qcsulD1qy5sUVyUbxJ5HLIJd
qLkgaxPq+tWPxP22PS5uTsAT2jWz9iN57EL5QuxvKd9Y0vk0frXHqi+Yp0xZ
dmFSvIXaqbVllWPFfm795TpOe/8klcfGPcoXGfecinD9rkU5cezvyYaOO07r
1uzv2fkcEdpYSTmI5Be0xyWts1T+OH+M/FR1lDm8Fxbr65VtFH6+KHahxhFJ
x9p4mXDdRFl1CjALLo60291lF+aP24LNhXIZ2L7srzFry20Mqdapz/I7WmPt
z6H3tv2sDrtQ84p23JhW1jDHjuyOIteaZhdqvGo/m2Xtz6xsVrtQ70c7vxo3
R2vn9K19ou/asWE4dxuiuVx7bZozKbut5sX6+m0dyxfifQEaQ8mflDRGtOvx
vL+kzDqpwy5UXdryKm4x7XfkK7Hlbdou1L2390Fj76T2oHtky56Wj1bYeDPr
Iy9CHrvQxmJkrVUXNpZ+lr068tqFWhOXdh59Pmk3Zr1j+AykjfGF7pd8WcKW
J+xz02xz+fP9cXG+fcv1N90ydV677s/aWLqGJD9xmDNA1xx3nGJ9k96dVZQ5
q+/UWou0trYodmFa7jo7NxLu01RWnQLMgvyF2td+OBwQR9pibK6yMBYhjCGN
G+OHyK7SXgOa55I/UXN/dnzShF1o/SJ6t8m3mYY9j3JLF6nPrPWFYR4E5efT
mheN8apcI7BZ7UJh813ExZLaGFIbe6TYPVvWuNjiEBtXZWP46rYL7dqnn1zz
s8nftV7F/13zMfb/bUyyzQNkfY5l1kkddqFi3YqUVz5De3yTdqHWDNl1muon
0/ILKtenLfudd92b2o/ZfjdPvt7Ye5vDLrQ+TI3bs85pfczWvzZLmdLswjT/
nLB+deXd9X8P+/Cic4OesM9N29PC1qH832n3NbQHbK5aa2Mp50zS7+V9Nu37
MLQLqyhz6JMMsbHrygkQfr4IdmGanS1uv2M8OTbMKV1WnQLMgsag/X4/Go/H
jZcFmiPMEW0/s32ixmVJ59A6JcU0peXy9jRhF1qfZ1GK+kiz7ELNGSflRPW5
MmQ3pY0hZmEz24XWjxLGkmptkS2P3XszXO8kmyjrt2xbOsT4Ouq2C+1aG7vn
hsa3/u9+ryzvP7TjP7uW1vpsyqyTOuzCcB4nT3mtLdakXRiSZbspr8ys/dgs
9ld4LUl2oe3PFAeXdU7Ng03udeAvKVqmrH0q0s6jPP/+WGsXbvv9Hwq3qTjC
fKRpx+bJk52E5l/9edLe55Yy7MK6yyyUB2HSphfULsz6XTtXF9qFZdUpwCxo
vNBVHOm6/IXNlweaQfPTtm+xsaT77P/BeE9r3cLvyp8Yl/8tjSbswrhceHkp
ktta5Nm/UGNvuyYqDr0vyuznN7NdKOR39ee0saR2LwvZL/Y7ql9b1jz+Wut7
tuP4uu1CrY+aPDdm3a9yK+pv1gdoc+p5u/jwb32Qd0M2YhV1UoddOEt5be7S
RbILhfwhSb+rOapZ+7Gs+k8ij11of0e+kKxzWr9n2h6cecpUhV1o/TkizfeT
RhG7cNb7KuwazTrtwrrLLDa7XVhWnQLMgtYX9vp9ZxeS47bdKJ7J9y1ad6C/
heuG4va1DXPDa3wq34X2fdCeBJo7Vg4CG69TlV0YxofZsba9Pr3b9G5JQ2X3
/77nDw8Uqss8dqG9PsUAqs6S8ugX2bchjc1uF9p9NK1tYmNIw7WH4XqttNwS
cedT7oay22oR7Poo5ayzZbA+QJvLwPtzrM/M5oops06K2IU2f1ARu1A+0aLl
tXZF03ahrit89pNyhVwY7BWb1Y9pXa3mRfTvPPHAWXWVZBfa3JZx84ch2rci
7V4XKVMVdmHYV84an1fELrR1qGso8o6y+zXUaRfWXWax2e3CsuoUYBZ2+ws7
bl/7nTvfbbw80BzX3/TrSV/kfSp2LBm317jWONt3p96rSfOqdiw0j12YNn6W
/ZF0rM29Nms8VV6K2IUh2sdC+xna78umLaNcm90utOvlfCypjSHV+9bvE+YJ
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
9i8EAAAAAABoIco1I7twOBjiLwQAAAAAAGgh3i7U+kL8hQCwTPzxgYei119/
o/FyAAAAACw7ykHq/IXDIXYhACwFim341F5fi/7fv3wm+ocPfzb65a13NF6m
uvjBRVdE//iRPR3fPvnsxsuzGaBOF4fh+K7JvdAz3nR5AADaxCSOlP0LAWBJ
uOW2dWcTevb68qGNl6kuTjr9vMl1H3zEiY2XZzNAnS4Ot94+nNyLD33iC42X
BwCgbXS7XZePtOlyACwqZ5xzSfQfR5/suOve+xsvT9u5/08PT9mF3zjypMbL
VBfYMMtbp+o7fD+iPqXp615EsAsBAJpD8Vi9Xs/ZhcSRAsSj8Ykfq6z0b2i8
PLA79u/De+wbffFrR0SPPv5U4+WpC+zC5a1T9R3YPOlgFwIANIfbv7Dbi7aN
t2EXAiSAXQiLAnbh8tYpdmE22IUAAM2hNYWrq6v4CwFSwC6ERQG7cHnrFLsw
G+xCAIBm0frC4XDA/oXgePGlV6LrfvGr6IJLroxO/t4FUe/am6NHHn2y0Dn+
/tbbLkfkpVd0opPOOD8658IfR/3rbo6eePKZ1O+9+urr0W9Hv3NoDVnasa+9
/sbk2Pvu//OGz7WWx3+u8vi/a2+DS69YjU79/kXu2uK+K55+9vnJ9//po5+b
jFVOPO28yd+Hd96dWsY7hndGP76q7+pRdfCz67dEzz3/Qup3Xnjxlcn5H3r4
8cnfH3/i6einK9e6379q9bqZ7+8bb/49uuvu+6Ird51L9+Yn1/wsuucPD0Rv
vbU99zmUx1i5Xy758aobU19+Zc/lEdTf/f3315C1HnPW8tx7358mvxHuVZFU
h2pfN//qN9EpZ14UXXz5SvSbrYPo5VderfyZ0vPjy/P8X16a/P1Pf3406qzd
uKs8F0bnXnhFdP1Nt7gypp2rqA0zSxsMeerp51y9nX3B5dGZP7gs+s9bbp+6
jjw8tqv96rd1rXr+VK6sa63iWpqo022/u8fdez27/nfUp/g2IZ5+5vlCZU5q
488+90J0Tfd6V8/q39RvhN/Vs3X7+p3uPug49fdF67Gqe5HXLrR9jHjMXGfS
86Y6Xl37hetn1Jeq/7bvhjx17t+NupcXXXZ1dMPNtya247+a91nSe0aojP64
Bx96LPE4ld8fF3dfAQDKoN/vuzhS8pG2G73zNCay+Twsyhuu8XTa/MHbb293
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
KjepPS6p7Wm9WtIzW+e9CO1CldfaTrqGrDzQ9nmLizWw6HN/rPLt+r/rPWCv
Q+/KtPOE8zl2btTalza3t+6Zf0/J7rT+ydDOt2s90nKbAgDMg48jHY1GjZcF
6seOU8QsaxaUF92eI4wni8P6KPUu9H+vyi7M8rlZP6h8YxvKm8MutOtQNLct
P0sS4djpgQcfmZzHjveUS6KK+y5bU/dN8YGaC1DOSBunFNphNk4qj+0kH1cR
u7BoecJ7kmYXhr6PjWX9ILb5U3sfWEl923Fqnt84/uRzEu2HNBumrDYYh/y8
yg0jX5H8ifKt2DVloV2odVz2/BrPK1elYqLz7A1S5bWE1FWnVdmFaf1E3j41
LYdwnfcitAvD9QtJvsqk5y0rb6e1ORXX7P9ufaQiKY7GE8Y32Dh7GxOvNbb+
77Jv/d81x2L/X+uO/XHKh+r/HudzBAAok7W1tWg4HJJ3poXItzexrXa9+2c5
h97T9n2o8X3Wd2w+uUPMOKzKfSrSzmXt1FntwricK3nRONufJ8w/X9a9Vp48
xfrZ+fE0rB1mcx3KZsn6LTu+SbIL5ylPeE+y9qlIK6vyqNRpF2pNU9bxYdye
/SzNhimrDXpkm2tcnrbPhCe0CxUHZ8fcIbIpld8yKea87GtJo646rcouTGvj
ZdiFdd6LcK16SJjfKOt5y4q51FyFP9bahcpN4/+e991o60nPsP+7XccsP7r/
u11fq/gb6z+092rt5x98P8/+mgAAs6L1hZ3OqtungvWF7UN7Gk/GxHt9baZz
6L1v39t5ctDZtRI2t+ky24WzjpuEzalXhV2o8xcd21k7zMY1Hv6tbLvG3ps4
u3De8oT3ZJnsQvkFso6//Y7x1LXbz9JsmLLaoPZhS8qhmkRoFwrFAJ51/o8S
98vzaH1yuL94WdeShzrqVCyrXVjnvciyCxW7UOR5m9Uu1Pr5ov2Cbed2XbD8
45P7vutd4//u1+BaH6D1j77w4svub+pz/d9kI87TbgAAsuh2e/gLW4odW+RZ
NxaH1jrY9/bDjz6R+R2bu9vmpy9iF9o9gxfBLrS/p3GJ7I00lLPO/9vmnCzb
LlRcZji2kp2n3PKaE1dck2ICQ/ve2mF27JS1XkfYfc7CMWYZ5QnvyTLZhVp7
mXW8crAk1V+aDVNWG9Sekbbu9XzIz3HaWT9035EvRLG+1h8YZxeG911lVx3H
jffVBuycUlnXkoc66lQsq11Y570I7UK1vXBPCbsOMOt5m9UuVG5i//c8sZua
A7FlDO03GxehtbbK4xbX5mysgPc52pw2eWKwAQBmZbe/sOP8hU2XBerHjhmE
1jEUPYfyf9tz5MmfaePSNNaMK09W7I5dv7QIdqHNC2BztRalbLvQrlXT+CZp
/3Ctn0myw7SPnv97uJ9AHNbuD8eYZZQnvCfLZBdqX5Ss4+3+juFzkLoWroQ2
qDwhtt41Vk7KVWLLkmUXWrSOWbF14b6pPpdVWdeSl6rr1LOsdmGd9yK0C2VD
KW+Uckrbv6etYy/DLrSxmyKrz9O+LfZ47dNpP9d7zn+m/Tv61908+X+bB/XF
lz54nx5w6HFT/59nTg4AYB40P6v1hbIL8Re2D71z7busd+3Nqcfrna04OOU0
t3nCbb61tBz8Qnts2d9UHjf/mc5p7Y+082h/+ibswqQ9uew+3WEOySKUbRfa
8ZRyrCQdZ/2voR0mH7D9TNeXZCsobtAeG44xyyhPeE+WyS5Uu86a87d7ato4
a5Fmw5TRBm+4+dbJObJiCOxeFEXsQk+Yq+PCS68q9VryUnWdeqbsQhNPOAt1
2oV13ouk/Qv13rB9uv5tc3tayrALH3r48am2qf4o7TxXBvsQyh9oP9f+qbaN
2ZzNytFtj/W+RT1/shn9cdpruMq6BwCQLdjv9aPBAH9hW7FjO71rk/LJyzaw
a8LsGO7oE7439U5M2u9Ca4js7+l8dl1RuIdFnI0mwr3Rq7YL7boR2T1x57Dv
b9G99qbE31N5ZIMI+dbsXlVl24W27Jf9pBt7jOaH7P5gcXaYHRv6sY3myP3n
yjdkczUkjTHLKs+y2oW+TEnrcBUjZ49V7hf7eZoNU0YbtHlg0+xC+fbsb1m7
UH3IPl893CG7NtxvPenZs89WWc9THqquU4+t26x5ryzqtAvrvBdJdmH4mVB8
ZVwemjLsQmHnsDT3qfdO3DkeC2zWONvZ5pTRdfm51Lg+5/SzL56cy+b8km0Z
HqsYn6Q9KQEAiuLiSLvdXXbhoPGyQDPIR2jftfJVhOM4jfmtD0NjGrsvlfYX
sOfQeDLcY0lxODZftzjupLM2lMeO9zWOCdenyMdg35V12IU2LlJjkbgciop1
sucR8oWG43+d3/pXtZbLfl62XWj3tVbdhns8K14zLm9kaIfp+qxNb8dL4XXb
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
99G1mJtbXo8lc+XK9eDxJbNnz3Ebk5Mz5ssv/5Dtja7z7NkL22dV/letHjUn
TjTNZ5/d2Xg+by+UYyv3evDgKft6ulaqMciDpaUb9looXJ9YfZb099HRT8z+
/RP2tXXNQu7d+2r9XM7Z+3HgwIS5fPlTu29W9Bk4ffrcxnVUH9fZ2aWOzv/x
49X178Pc+rkes/dSP9+//6hv++dxb/Qdnp5eWD/GaVOpHFm/DmfM/PxV+7jQ
fXH3SPerHbqGupY6H11b3SNdawAAACgO9Vv84ov7Znn5s6gLfvrpLfPgweP1
/7MfRXOFqjHtF2Xzwtdf/+6WzQn8l+/s2DjuIPUoVb5waGjINBqN0s0v9L1Q
8wyzoPHz9eu3bCT1Jl1evml+9avhxN41ek7frxg6rr+t2LnzYOKxhoYOrZ9H
8mdc13pk5Gji/nJAuVJeXqixvBw7rXfP4cNnuj6+0Foaf5/ned36TVKPIOck
qnf46KP9ieckT05DLqb5pkn7v/XWx9YX01B++e23dyYeQ3NZ03oa9bp/Xvdm
YmLa1lwnXfOFhav2vrjHdL+S0DXTtUs6H30vnzzp3/8pAAAA2x3Vfd6//zDR
BTXOlSu6cbDcL8wbup81/7BflMoLX2vtL5P3XEC/nlTzDgcJO7+wVr75hR9/
fKBl7Lqy8qDnYzYac6njbj+0NkZI6IXKf7U7zq9/XYmei66rHK/d/hrjDw8f
7tkLL1y43OJsaaEcU7f4r6F8WdrruPv6y18OtT0n5ahiyLXeeuujTO9rbOxY
9BjK72b9XNTrF3PfP697o89slmMof9jOC3fvbv/ZVuja63cXAAAAsDXIBR88
eGLzfzEX1O97fRd0hE7o5w3zqhPLSmm80HPCpMhjvQmXMxwkL5QDKl84NdUs
3fqFZ86c3+QQsb4zWVHNdTimlY9o/Ku6xZibKPfuE3qhC+UYdYzx8Umza9fm
/GGjMbvpfFRnGDuOXEoemLReY7deGB5PPV3ltaqf1TUIvWRqarMXZyHmN7q2
ynnqvYXX2d/evX/VmobOHPMXfUbD96W/6x7s23cymn8LfT+sP1boXNX3SLk3
rYvpn6PyZ3nun9e9iX02laNUPlrno99PxD5PsesqBw+307XUNVV+PDxfvY7+
/QAAAIB8SFpXwndBjW1VcxUjdEL9XePaImpIRWm8MOM69Zon2AvqOTOIPUlt
HWm9Ubp8ofqM+rWk/jhW437lXZK+CzHCcbHmfYVoLpe/TVi/Ght7Hzp0etNx
9DuYcEzto/lm4XFiv7dRHV8eXigv9Y8Rq8tUvas/3h8aOtzx64jQYcL8lvwh
7B+rkA+GhPnYr7562PJ8uLZlLJemeZr+OWmdE99hdP/8Y+j3bSHnzl0K3HIh
t/3zuDd6P3pf/nH0miGa8xren9ALNdfV30Y/x95TWPd77Fh90zYAAADQGe3W
ldBz7ca/MScULt8op+xnDakoixe+/fZvzbe//e/mP7//X7b3TCzUL0Zr3G9H
5IXqO1O2fKFYW3sedcMwP6ScSNr6K6pV9PdRHV0SoYv4/XtDL9TYOAk5in+O
PuoH4h+nVptJPI7mKPbqheqxo74hilgdo0Njez8H1A1h/i/Gw4dPWt5T0nb6
TPrbKYfs49eP/v73o4nnpDyzfxz1W3H41zdtfRO5nLuG/jzBXvfP496E7089
e5LQ2p5pXigv9Z9fXIz3pdG/E/7vWpLuIQAAAGTDz+eFLii3y+JySU6oGtN+
r1noUxYvhGTkfmXtO+OQG/pzDdNCNYrXrt3adAyNk5PGwbHX84+pOYmO0AvT
ai31nL+tjz+eTpp/6ND98F1rK9epUE+SrNcpCf9clc9Lws9vxXKFDv/3Auph
49B99q9v7L77tObbDm08Pj5eazmO6j87odf9s5J2b3w3zXLf/B494fZ+7W27
PsDqoeu/d+X4AQAAoDtUFxU6oepIs9bHJTmhUO2Pe7yTeru8wAsHA+eFooxe
6JCvTUxM2XUNw5q5MP8R5jg++GBfy/PKn6eFfzy/TjT0wrTvldaESfJC//x9
R0nCn5OXlxe63sZXr96y+Sb1TvHnRubhhRcvLiZu53taWr7Ud2jfC0+enGq5
vlrTIu2e+q/nX8Ow5te5+ief1DKtNdLr/jE6vTf+XMx2v2cQfu1reCw/B6vj
pl3T0AuV+wQAAIDukcupp+jmPqOfpeYM05xQuGP666z1k1fZC1VzqrUQ33jj
zWh8//v/bWtXVcNaZl6uaz9savV66eYXtkNrE6g/huoHY37oj8nVxyNLvjEW
WrPNEVunIgmN65O29R9vtwaD8Ody9eKFWodOfVDS1h7I0wvT/u3xPS2tfjLJ
C9UDpdt7GtZh+vnkMNQPVtc/7b30ur/o5d74vzfI8nuGtNxjt9dUsVW5UgAA
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
P7+4uGjm5+bNxYsz5syZM3ate7mh6NYN2/khvkgQBEEQBEEQ5Y1OxvJpToAT
Fo+8b2x0zLrezMzMy5rRhUsbecLFxZduaOtJ1/9ULlHuWKvVzN69e22eUWS5
n2mfhU4dkSAIgiAIgiCIcke78X8WH8QJtwY3L1CoJlRuJ8eTE6pWVHFlcdF6
oOYXXr161fqh3NDmDOfnbVw4f8FM1ibNvn37bP3pw4cPW16jFz/EGQmCIAiC
IAhiMKKbsX1WH8QJtwZ3XdV39MCBA2b/epw9e9bm/5QHdOvYLy0tWS+UBy5e
WXz553osLMzbPOKl9W3mZudsj1K55YkTx83ISNXmHLX+oXstfU56zSESBEEQ
BEEQBDH40YkL4oRbg+6D+Prrr83k5KSpVqvm2LFjtq+oyxOqdvTS3+YVqvfo
8vKSWb561Xqhm2P4si/pJfu89lHecPbirK0l1XHVq3R4eNge+8aNG7bmWLj7
Kk90f3fgiQRBEARBEATx6kU3HogPdkfSNdN98H++efOmOX78uKlUKnb9QeUI
tW69wvndgrde4ZW/9ZtZWlq0taSKxaUlm0d0cwzliHPywtlZmzecWQ95po4t
LxwbGzVDQ0O2zvT06dN2G9Wk3r5929acrq6umrW1tU3u6M7d5aRjqA+ue28u
3DH8/V34nzHnpvpTr+22d8dx2/v7htea1+f1eX1en9fn9Xl9Xp/X5/V5fdOy
nX88H//19Jx/7uH5+8f18Y/p9gsJjxeen3su3Nc//9hxB+X1nz9/bp4+fWru
379v7t27Z91Lrnbq1Ck7709uNjq62xw9etTUJmtmaqppfVCepv6iL9cqnNvo
Oaq5hc4D9di1a9fM/wMaEli6
    "], {{0, 675.}, {451., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{261.43408203125, Automatic},
  ImageSizeRaw->{451., 675.},
  PlotRange->{{0, 451.}, {0, 675.}}]], "Input",
 CellID->281002211,ExpressionUUID->"a6d84755-96a1-43cc-8672-8f56f169ad96"],

Cell["View the new value of the counter:", "ExampleText",
 CellChangeTimes->{{3.889474033572493*^9, 3.889474036919137*^9}},
 CellID->457176607,ExpressionUUID->"54e3b863-bca2-451a-ba39-a1dfbddeeb61"],

Cell[CellGroupData[{

Cell[BoxData["counter"], "Input",
 CellChangeTimes->{{3.889474038151309*^9, 3.889474038693171*^9}},
 CellLabel->"In[13]:=",
 CellID->1907463776,ExpressionUUID->"4b7236db-11b2-4c6f-a5d8-2fe6c68ca7ec"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.88947403894915*^9},
 CellLabel->"Out[13]=",
 CellID->1485341704,ExpressionUUID->"772e94d3-df50-4985-a6dc-97268419837c"]
}, Open  ]],

Cell["Stop the web server:", "ExampleText",
 CellChangeTimes->{{3.889473892932796*^9, 3.8894738971951838`*^9}},
 CellID->2023959105,ExpressionUUID->"1978b8ba-17d2-4b18-8383-736dff9972d1"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 CellChangeTimes->{{3.8894738982275467`*^9, 3.88947390025556*^9}},
 CellLabel->"In[4]:=",
 CellID->1818981862,ExpressionUUID->"3af5fe9c-a4dd-4518-9399-2d5d90dbde78"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "da23adee-dfcd-4f6a-9205-99a1573fbf73"],
  $Line = 0; Null]], "ExampleSection",
 CellID->597873462,ExpressionUUID->"6907c361-efc4-446b-9590-445c655cc792"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "730ba87e-3b43-484e-b792-bf4713706221"],
  $Line = 0; Null]], "ExampleSection",
 CellID->383291521,ExpressionUUID->"f57594bf-f01c-41cc-b979-e233d8650408"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "f884e7aa-e408-49b7-a41a-aadf6d073888"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1677136094,ExpressionUUID->"902c6450-a0d6-42e1-b56d-a6cfe1c7cf82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1903464983,ExpressionUUID->"7a126ea0-0c32-4faf-a197-641aa2b62352"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"b2a46d0e-5af2-4942-bde1-ee6cd9bc336a"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"43128148-40f4-4173-a599-59c4d1023305"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "e0a8d167-a867-4019-b3ab-f9e1cbf476dd"]
}], "History",
 CellID->472079922,ExpressionUUID->"be06909b-e576-4433-a281-1f1aeed1b5e2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "3dd84a78-d1e1-4a19-b6be-f206ccb6f016"]
}], "CategorizationSection",
 CellID->1442657036,ExpressionUUID->"b4cc9a10-b1f4-4a5b-a25b-3f4fdd26ab8e"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->1646429422,ExpressionUUID->"993aca31-458d-4ba3-a4bf-1b5811269aca"],

Cell["Wolfram/ChatGPTPluginKit", "Categorization",
 CellLabel->"Paclet Name",
 CellID->1212503959,ExpressionUUID->"0d34c942-6e76-4412-a239-0a3e2aac94e7"],

Cell["Wolfram`ChatGPTPluginKit`", "Categorization",
 CellLabel->"Context",
 CellID->1081712530,ExpressionUUID->"bc6bab4d-9c68-43ec-b53f-8ff59b997d4b"],

Cell["Wolfram/ChatGPTPluginKit/ref/ChatGPTPluginDeploy", "Categorization",
 CellLabel->"URI",
 CellID->1893419855,ExpressionUUID->"ffe93d74-5e77-423c-8a55-90fafcd2997f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1294821739,ExpressionUUID->"d7df0952-d28b-4671-8db6-41695258a343"],

Cell["XXXX", "Keywords",
 CellID->1617172322,ExpressionUUID->"9dd93ff3-14a7-4952-868e-97cc815fd1da"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1262179422,ExpressionUUID->"86de037b-21a3-4ecd-85f5-96f98dd05436"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->606080488,ExpressionUUID->"f3aebcc1-8c5c-4bd4-bfa9-b739c7209563"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->879824095,ExpressionUUID->"9d6a20bd-2eef-4716-b51b-c459b203a41a"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1778655070,ExpressionUUID->"cce32400-3e47-47da-a779-c20a1d364cce"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->883395250,ExpressionUUID->"8649aeb0-d743-421e-a624-574b167d4bfc"]
}, Closed]]
}, Open  ]]
},
WindowSize->{700, 770},
WindowMargins->{{Automatic, 356}, {Automatic, 73}},
TaggingRules->{
 "DocuToolsSettingsInternal" -> {
   "$PacletVersion" -> "0.10.2323", "$ApplicationName" -> "Mathematica", 
    "$LinkBase" -> "Mathematica", "$ApplicationDirectory" -> 
    "/Users/christopher/cvs/Mathematica/", "$DocumentationDirectory" -> 
    "/Users/christopher/cvs/Mathematica/Documentation/English/", 
    "$UseNewPageDialog" -> ""}, 
  "WelcomeScreenSettings" -> {"FEStarting" -> False}, "Paclet" -> 
  "Wolfram/ChatGPTPluginKit"},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (November 18, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"02af9b38-5847-4462-9a83-6598f90ff537"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[85839, 1719, 487, 13, 58, "ExtendedExamplesSection",ExpressionUUID->"e17586ef-c0f9-4026-b318-29459c49dc32",
   CellTags->"ExtendedExamples",
   CellID->523415970]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 833279, 14916}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 117, 1, 74, "ObjectName",ExpressionUUID->"cf546770-fc27-4178-86b9-6c76b7743af6",
 CellID->2036062166],
Cell[700, 25, 925, 19, 123, "Usage",ExpressionUUID->"28e7573e-710b-4465-8242-4a06f5ae31e8",
 CellID->2092392664],
Cell[1628, 46, 731, 17, 28, "Notes",ExpressionUUID->"4374a6a6-e1a0-4503-9992-d74d486ab093",
 CellID->1798784223],
Cell[2362, 65, 599, 15, 28, "Notes",ExpressionUUID->"eb41cced-7422-463f-9147-04988e3f3795",
 CellID->1024735286],
Cell[2964, 82, 847, 20, 28, "Notes",ExpressionUUID->"7f69d1f7-9102-4e84-8a1f-07341c4c055e",
 CellID->1735908722],
Cell[3814, 104, 550, 14, 28, "Notes",ExpressionUUID->"db4d2f57-a9e9-4797-93d7-9ceb51458254",
 CellID->1630866714],
Cell[4367, 120, 243, 4, 27, "Notes",ExpressionUUID->"05d69e1e-e912-4deb-8d8b-181fb6f1c34e",
 CellID->178889690],
Cell[4613, 126, 185, 2, 27, "Notes",ExpressionUUID->"fc3833f6-4b26-4871-82f3-c6d714ec31a8",
 CellID->1165676712],
Cell[4801, 130, 755, 15, 45, "2ColumnTableMod",ExpressionUUID->"5d228e9b-6128-4256-a82d-0c1f022513e4",
 CellID->1738984238],
Cell[5559, 147, 196, 2, 27, "Notes",ExpressionUUID->"72f88175-2618-4ef4-b49b-29f6c62bedfe",
 CellID->1973568911],
Cell[5758, 151, 641, 11, 43, "2ColumnTableMod",ExpressionUUID->"04f93e12-36b6-4951-9abf-00e3e0d2219c",
 CellID->1484738809],
Cell[6402, 164, 370, 9, 28, "Notes",ExpressionUUID->"fa6c7d7c-8976-451b-97bc-ad01c9835782",
 CellID->1737601310],
Cell[6775, 175, 961, 21, 49, "2ColumnTableMod",ExpressionUUID->"d7a6c1b4-c37e-40d9-acb6-37385a5b188b",
 CellID->1289514234]
}, Open  ]],
Cell[CellGroupData[{
Cell[7773, 201, 459, 13, 34, "SeeAlsoSection",ExpressionUUID->"15f78e16-a1af-4409-9375-ccd55f541822",
 CellID->2039137142],
Cell[8235, 216, 2180, 54, 23, "SeeAlso",ExpressionUUID->"edaa3921-2e40-49ab-9817-55f9ea164173",
 CellID->86423121]
}, Open  ]],
Cell[CellGroupData[{
Cell[10452, 275, 435, 12, 47, "TechNotesSection",ExpressionUUID->"1b20e0a0-6471-40aa-a172-84a409563d0c",
 CellID->814449275],
Cell[10890, 289, 100, 1, 19, "Tutorials",ExpressionUUID->"54fc0ae8-d630-4a4d-b8bb-b26f1dea589b",
 CellID->388198947]
}, Open  ]],
Cell[CellGroupData[{
Cell[11027, 295, 117, 1, 34, "MoreAboutSection",ExpressionUUID->"afdf4e86-e313-4fe8-bbf4-8d9a872db585",
 CellID->404382643],
Cell[11147, 298, 101, 1, 19, "MoreAbout",ExpressionUUID->"16cca966-37bb-478b-a0d5-64b5c6effcb0",
 CellID->1820821793]
}, Open  ]],
Cell[CellGroupData[{
Cell[11285, 304, 472, 13, 34, "RelatedLinksSection",ExpressionUUID->"2a3ff21e-fb6a-46e7-8d9e-536f39452e5e",
 CellID->909905201],
Cell[11760, 319, 103, 1, 19, "RelatedLinks",ExpressionUUID->"60752c2a-8ef3-49a1-9bea-7cb156508a15",
 CellID->545662920]
}, Open  ]],
Cell[CellGroupData[{
Cell[11900, 325, 531, 14, 70, "ExamplesInitializationSection",ExpressionUUID->"00766500-63d6-45c9-a957-a9bbc523089d",
 CellID->1201523750],
Cell[12434, 341, 227, 4, 47, "ExampleInitialization",ExpressionUUID->"f1583514-0533-404e-bd26-af386bd5d22f",
 CellID->1220933509]
}, Open  ]],
Cell[CellGroupData[{
Cell[12698, 350, 443, 12, 73, "PrimaryExamplesSection",ExpressionUUID->"b4b63811-622c-4c97-bb9f-fd0fcbfaacf8",
 CellID->1023238678],
Cell[13144, 364, 257, 3, 24, "ExampleText",ExpressionUUID->"ddde5435-aacf-4099-b303-8660c4934633",
 CellID->374440937],
Cell[CellGroupData[{
Cell[13426, 371, 949, 21, 104, "Input",ExpressionUUID->"4c0ee421-71dc-4cfe-989d-3f35108998f4",
 CellID->428262334],
Cell[14378, 394, 70986, 1309, 61, "Output",ExpressionUUID->"756d76f7-d0c5-439c-8348-e0362144586e",
 CellID->2010343509]
}, Open  ]],
Cell[85379, 1706, 185, 2, 24, "ExampleText",ExpressionUUID->"2270c8fd-dbb6-4fd0-9577-43b2b832bc7a",
 CellID->1129729877],
Cell[85567, 1710, 235, 4, 27, "Input",ExpressionUUID->"3634bc9f-131f-45a0-8ce1-05b383133cf9",
 CellID->1952056595]
}, Open  ]],
Cell[CellGroupData[{
Cell[85839, 1719, 487, 13, 58, "ExtendedExamplesSection",ExpressionUUID->"e17586ef-c0f9-4026-b318-29459c49dc32",
 CellTags->"ExtendedExamples",
 CellID->523415970],
Cell[CellGroupData[{
Cell[86351, 1736, 241, 5, 35, "ExampleSection",ExpressionUUID->"3a39a644-2a76-40fa-9fce-98ef207fac0d",
 CellID->959189678],
Cell[86595, 1743, 411, 9, 26, "ExampleText",ExpressionUUID->"b3cbbf46-1e84-4dbc-a65d-04ec3e8af36b",
 CellID->726188294],
Cell[CellGroupData[{
Cell[87031, 1756, 877, 20, 123, "Input",ExpressionUUID->"88260ee7-e80c-42e4-82c3-bb133e611cc6",
 CellID->1020351672],
Cell[87911, 1778, 9976, 198, 53, "Output",ExpressionUUID->"7dd06605-3e68-4921-8a1b-02e9ab3b777c",
 CellID->1015065423]
}, Open  ]],
Cell[97902, 1979, 188, 2, 24, "ExampleText",ExpressionUUID->"d455e7be-ec66-4f33-9bfe-1507a39230e8",
 CellID->325808286],
Cell[CellGroupData[{
Cell[98115, 1985, 682, 18, 66, "Input",ExpressionUUID->"c1e65441-e113-442b-8041-656903d1c0a7",
 CellID->1993786874],
Cell[98800, 2005, 71087, 1313, 61, "Output",ExpressionUUID->"bef284d7-1325-4418-aa9c-2ec1f8776a1a",
 CellID->1653139383]
}, Open  ]],
Cell[169902, 3321, 312, 4, 24, "ExampleText",ExpressionUUID->"3b1b94af-3b8e-4679-b46d-6c3da7fdd2e7",
 CellID->1536036706],
Cell[170217, 3327, 139212, 2287, 493, "Input",ExpressionUUID->"ba484bc5-c335-4eec-955c-0d91b77c8bb6",
 CellID->476559101],
Cell[309432, 5616, 240, 4, 24, "ExampleText",ExpressionUUID->"a4df7a33-1800-4b31-ab52-f7b767e9cd8a",
 CellID->655976286],
Cell[CellGroupData[{
Cell[309697, 5624, 200, 3, 27, "Input",ExpressionUUID->"3285e59e-fd52-4594-a1ca-7aade8c1ea7c",
 CellID->972899323],
Cell[309900, 5629, 43891, 928, 453, "Output",ExpressionUUID->"1e98b6c3-ad49-4e4b-bfe3-b41da3de006d",
 CellID->570947987]
}, Open  ]],
Cell[353806, 6560, 185, 2, 24, "ExampleText",ExpressionUUID->"ee35cb36-d580-4ea9-8e8c-3fecd6c5ade2",
 CellID->1820825470],
Cell[353994, 6564, 234, 4, 27, "Input",ExpressionUUID->"a29047ac-c603-49ae-a6f7-a1de767a57f0",
 CellID->971704540]
}, Open  ]],
Cell[354243, 6571, 265, 5, 35, "ExampleSection",ExpressionUUID->"97378e9e-619d-4649-8b5b-9910e6455c36",
 CellID->2088663764],
Cell[CellGroupData[{
Cell[354533, 6580, 244, 5, 23, "ExampleSection",ExpressionUUID->"0a61a72c-dfe1-4a89-b435-d55a8accc5c0",
 CellID->1404187686],
Cell[354780, 6587, 247, 5, 26, "ExampleSubsection",ExpressionUUID->"406a0834-353c-454c-a6ff-4c60e9cecd26",
 CellID->1484641719],
Cell[355030, 6594, 246, 5, 22, "ExampleSubsection",ExpressionUUID->"c6befcac-5957-4f91-8cf7-8393bab90f78",
 CellID->760876740]
}, Open  ]],
Cell[CellGroupData[{
Cell[355313, 6604, 249, 5, 35, "ExampleSection",ExpressionUUID->"ad9b81e7-d822-4ad7-9437-bfb4bf8953f1",
 CellID->1937734942],
Cell[355565, 6611, 196, 2, 24, "ExampleText",ExpressionUUID->"3bb7e803-af35-4b11-aa10-6c815b785c85",
 CellID->1274307077],
Cell[CellGroupData[{
Cell[355786, 6617, 3302, 73, 389, "Input",ExpressionUUID->"4da1c156-9ede-43e7-825f-4a813266e782",
 CellID->41348088],
Cell[359091, 6692, 88296, 1627, 61, "Output",ExpressionUUID->"3e51b7bc-14cd-4148-92c4-c09df08d0c43",
 CellID->2066586559]
}, Open  ]],
Cell[447402, 8322, 194, 2, 24, "ExampleText",ExpressionUUID->"f5d36ea9-bfc7-4d39-82b9-b3597439e9dd",
 CellID->1668834681],
Cell[447599, 8326, 195945, 3217, 557, "Input",ExpressionUUID->"486aee5e-7ffe-4464-a34e-31914f5235bd",
 CellID->1491546085],
Cell[643547, 11545, 204, 2, 24, "ExampleText",ExpressionUUID->"db75a92b-6a80-46b5-8bf7-3ef586ced074",
 CellID->187979416],
Cell[CellGroupData[{
Cell[643776, 11551, 198, 3, 27, "Input",ExpressionUUID->"93cbc79b-4c0c-4d58-820b-ade59f8cfa2d",
 CellID->1387489144],
Cell[643977, 11556, 319, 7, 28, "Output",ExpressionUUID->"ba865546-63f7-4267-ac40-d8d9a065f9f7",
 CellID->603970918]
}, Open  ]],
Cell[644311, 11566, 212, 3, 24, "ExampleText",ExpressionUUID->"9dee768c-7657-4089-9c00-43cd060dae03",
 CellID->576310274],
Cell[644526, 11571, 234, 4, 27, "Input",ExpressionUUID->"b0de1bd6-d21f-43cc-bc0b-d066899ae825",
 CellID->895527148]
}, Open  ]],
Cell[CellGroupData[{
Cell[644797, 11580, 258, 5, 35, "ExampleSection",ExpressionUUID->"151e9e8c-26a4-4ddb-93b7-f395aa69d2f8",
 CellID->921663439],
Cell[645058, 11587, 383, 7, 41, "ExampleText",ExpressionUUID->"1c0a2a09-3953-4129-8383-f50746993bd4",
 CellID->287202388],
Cell[CellGroupData[{
Cell[645466, 11598, 989, 24, 123, "Input",ExpressionUUID->"7c1a919f-3354-40a4-a9e2-5de703cc1774",
 CellID->619953812],
Cell[646458, 11624, 70430, 1300, 61, "Output",ExpressionUUID->"f46ee891-92cc-4e90-8aab-c8327b34d865",
 CellID->607525349]
}, Open  ]],
Cell[716903, 12927, 202, 2, 24, "ExampleText",ExpressionUUID->"882f5b78-232e-46b5-a6fc-c822d5f4a53b",
 CellID->1883651148],
Cell[CellGroupData[{
Cell[717130, 12933, 199, 3, 27, "Input",ExpressionUUID->"dc9655d4-5c55-4d35-aed6-25a14fc0db3b",
 CellID->1826074982],
Cell[717332, 12938, 192, 3, 26, "Output",ExpressionUUID->"21767453-6a4b-46d1-8db7-7bb38bd10616",
 CellID->1617131376]
}, Open  ]],
Cell[717539, 12944, 279, 4, 24, "ExampleText",ExpressionUUID->"583a1a4b-4c90-46b1-81d9-48f5cd1bdbc6",
 CellID->234368142],
Cell[717821, 12950, 109989, 1808, 402, "Input",ExpressionUUID->"a6d84755-96a1-43cc-8672-8f56f169ad96",
 CellID->281002211],
Cell[827813, 14760, 198, 2, 24, "ExampleText",ExpressionUUID->"54e3b863-bca2-451a-ba39-a1dfbddeeb61",
 CellID->457176607],
Cell[CellGroupData[{
Cell[828036, 14766, 199, 3, 27, "Input",ExpressionUUID->"4b7236db-11b2-4c6f-a5d8-2fe6c68ca7ec",
 CellID->1907463776],
Cell[828238, 14771, 169, 3, 26, "Output",ExpressionUUID->"772e94d3-df50-4985-a6dc-97268419837c",
 CellID->1485341704]
}, Open  ]],
Cell[828422, 14777, 187, 2, 24, "ExampleText",ExpressionUUID->"1978b8ba-17d2-4b18-8383-736dff9972d1",
 CellID->2023959105],
Cell[828612, 14781, 236, 4, 27, "Input",ExpressionUUID->"3af5fe9c-a4dd-4518-9399-2d5d90dbde78",
 CellID->1818981862]
}, Open  ]],
Cell[828863, 14788, 251, 5, 35, "ExampleSection",ExpressionUUID->"6907c361-efc4-446b-9590-445c655cc792",
 CellID->597873462],
Cell[829117, 14795, 256, 5, 23, "ExampleSection",ExpressionUUID->"f57594bf-f01c-41cc-b979-e233d8650408",
 CellID->383291521],
Cell[829376, 14802, 250, 5, 23, "ExampleSection",ExpressionUUID->"902c6450-a0d6-42e1-b56d-a6cfe1c7cf82",
 CellID->1677136094]
}, Open  ]],
Cell[CellGroupData[{
Cell[829663, 14812, 111, 1, 72, "MetadataSection",ExpressionUUID->"7a126ea0-0c32-4faf-a197-641aa2b62352",
 CellID->1903464983],
Cell[829777, 14815, 476, 12, 26, "History",ExpressionUUID->"be06909b-e576-4433-a281-1f1aeed1b5e2",
 CellID->472079922],
Cell[CellGroupData[{
Cell[830278, 14831, 485, 13, 21, "CategorizationSection",ExpressionUUID->"b4cc9a10-b1f4-4a5b-a25b-3f4fdd26ab8e",
 CellID->1442657036],
Cell[830766, 14846, 135, 2, 35, "Categorization",ExpressionUUID->"993aca31-458d-4ba3-a4bf-1b5811269aca",
 CellID->1646429422],
Cell[830904, 14850, 153, 2, 35, "Categorization",ExpressionUUID->"0d34c942-6e76-4412-a239-0a3e2aac94e7",
 CellID->1212503959],
Cell[831060, 14854, 150, 2, 35, "Categorization",ExpressionUUID->"bc6bab4d-9c68-43ec-b53f-8ff59b997d4b",
 CellID->1081712530],
Cell[831213, 14858, 169, 2, 35, "Categorization",ExpressionUUID->"ffe93d74-5e77-423c-8a55-90fafcd2997f",
 CellID->1893419855]
}, Open  ]],
Cell[CellGroupData[{
Cell[831419, 14865, 111, 1, 31, "KeywordsSection",ExpressionUUID->"d7df0952-d28b-4671-8db6-41695258a343",
 CellID->1294821739],
Cell[831533, 14868, 100, 1, 70, "Keywords",ExpressionUUID->"9dd93ff3-14a7-4952-868e-97cc815fd1da",
 CellID->1617172322]
}, Closed]],
Cell[CellGroupData[{
Cell[831670, 14874, 120, 1, 21, "TemplatesSection",ExpressionUUID->"86de037b-21a3-4ecd-85f5-96f98dd05436",
 CellID->1262179422],
Cell[831793, 14877, 148, 2, 70, "Template",ExpressionUUID->"f3aebcc1-8c5c-4bd4-bfa9-b739c7209563",
 CellID->606080488],
Cell[831944, 14881, 137, 2, 70, "Template",ExpressionUUID->"9d6a20bd-2eef-4716-b51b-c459b203a41a",
 CellID->879824095],
Cell[832084, 14885, 136, 2, 70, "Template",ExpressionUUID->"cce32400-3e47-47da-a779-c20a1d364cce",
 CellID->1778655070],
Cell[832223, 14889, 137, 2, 70, "Template",ExpressionUUID->"8649aeb0-d743-421e-a624-574b167d4bfc",
 CellID->883395250]
}, Closed]]
}, Open  ]]
}
]
*)

