Notebook[{

Cell[CellGroupData[{
Cell["Wolfram/ChatGPTPluginKit", "Title",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.89031997276921*^9, 3.8903199749590263`*^9}, 
   3.890324437784*^9},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1794729738,ExpressionUUID->"1015c4c4-5333-4d66-a440-d995b8dcefe2"],

Cell["Build plugins for ChatGPT in just a few lines", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.889455054148019*^9, 3.8894550891009693`*^9}, 
   3.890320051868421*^9},
 CellTags->{"Description", "TemplateCell"},
 CellID->287059966,ExpressionUUID->"00529c8a-80bb-4452-b629-8f49b68e8c40"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"573f94f8-67fa-4e61-872c-b7396503afc9"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "/Users/christopher/git/ChatGPTPlugins/ChatGPTPlugins", "Refreshing" -> 
   False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"d6aa008c-8fb8-426c-8a64-a5334333b60e"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->637527297,ExpressionUUID->"fca654cf-d7ec-43ce-99d4-76e34573bbbf"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Assets\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Assets"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9df18aaf-a186-4ab1-a0c3-f703ff0efb3c"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->152470063,ExpressionUUID->"af7b0712-4488-408c-94ec-9dfdcfa0dcf3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"default_icon.png\"", 
     FileNameJoin[{
       NotebookDirectory[], "Assets", "default_icon.png"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Assets", "default_icon.png"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPNGIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->616357970,ExpressionUUID->"ce4d3376-119d-48db-bec8-1caf06a1cb78"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"eb0d049d-57b7-4f68-94d5-15c507a1389e"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1125365796,ExpressionUUID->"01f72a37-6f99-440c-a17a-dcb4a320a4aa"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"7de8e4cc-52fa-4e24-8b62-2496aee151ee"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1134454243,ExpressionUUID->"eadc673e-9954-494b-b27a-4f745ff01202"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"14a99980-1738-47c6-b62b-c8963848c293"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1412644035,ExpressionUUID->"8a643d36-32ac-46c7-b0ad-c7f22302ff11"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginKit.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "ChatGPTPluginKit.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "ChatGPTPluginKit.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->655010840,ExpressionUUID->"ebd44351-d2a5-4edd-9540-806dd6eee437"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"c165c5f7-ebda-49e9-9b70-fc243748f1ed"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1712698778,ExpressionUUID->"99b1b838-8c6b-451e-99ec-45ff0abd533b"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"e84f32fb-26d3-4b08-977b-62e642ca14c7"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->457557458,ExpressionUUID->"d410978c-a01e-4dcb-90c6-5ef419f7e176"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginCloudDeployment.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPluginCloudDeployment.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPluginCloudDeployment.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1368090892,ExpressionUUID->"c7388450-627c-4043-84b6-dee149a7212e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginCloudDeploy.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPluginCloudDeploy.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPluginCloudDeploy.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->396213415,ExpressionUUID->"666bacfa-cedb-429d-a8bd-3f6fdc5b7255"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginDeployment.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPluginDeployment.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPluginDeployment.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1959560205,ExpressionUUID->"5821ea1c-6e9e-4902-bd37-eaaa44b17b43"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginDeploy.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPluginDeploy.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPluginDeploy.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->29256699,ExpressionUUID->"ebf2756c-75db-40b1-a190-3ae6d8b77244"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginEndpoint.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPluginEndpoint.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPluginEndpoint.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2091068577,ExpressionUUID->"bd12bbcf-d178-44a6-b964-0872656af8f2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPlugin.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ChatGPTPlugin.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ChatGPTPlugin.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1019690484,ExpressionUUID->"91a29393-e2a5-4827-9367-a7409932a52c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"d89ca0de-bf6c-4e4f-8d4f-7d015d6a29c9"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1838234506,ExpressionUUID->"4b0fb483-eca9-4629-9f4d-4b8fc17efccc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"InstallChatGPTPlugin.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "InstallChatGPTPlugin.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "InstallChatGPTPlugin.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1507596600,ExpressionUUID->"27744e51-12fa-4495-9ba9-ee158f03e49e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bb077508-1438-46ef-896b-f8efe72fd7fa"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->16505247,ExpressionUUID->"02668344-0cde-4433-b684-c4db2fe4e274"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ChatGPTPluginKit.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ChatGPTPluginKit.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ChatGPTPluginKit.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->378295866,ExpressionUUID->"8d01ae45-5a33-4bd0-b8ef-395cdb08f385"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CopyButton.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "CopyButton.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "CopyButton.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1161766448,ExpressionUUID->"1e57e0d1-f353-4219-8d0c-db0bdde26980"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Deploy.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Deploy.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Deploy.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1467024742,ExpressionUUID->"48510218-c1f0-406c-8688-35a7c43f4249"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Endpoint.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Endpoint.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Endpoint.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1025087587,ExpressionUUID->"59d95143-e13d-43ad-bbd4-32994747549a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Export.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Export.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Export.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1533258475,ExpressionUUID->"7fe82a1c-41fe-4562-b6a9-8a13f7540dab"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Plugin.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Plugin.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Plugin.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1818908972,ExpressionUUID->"27e80b71-3339-4ef0-b71b-a35466c3d6c5"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->973377359,ExpressionUUID->"c6111381-2589-4c9b-90a5-1a5eb40eba0b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->22849867,ExpressionUUID->"865bf54e-30b5-461e-b6aa-6a3c98803650"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1785625503,ExpressionUUID->"943da6f1-78a0-4641-b803-de7d3855dbef"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2071345743,ExpressionUUID->"4f8a4c97-ede1-4122-8bb2-a15dcc7bc254"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f292db61-5866-4a7e-9c19-709a6dacf98e"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"6a04f3e0-4124-4bd1-9d6b-e7fd64fc4f11"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d8a9e522-e061-4524-9e02-bbf4e303c530"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"a23c0b4d-9298-450f-b4d8-9c0a5efb1123"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
    InsetBox[
     StyleBox[
      TagBox["\<\"Image Placeholder\"\>",
       Annotation[#, "PlaceholderImage"]& ],
      StripOnInput->False,
      FontFamily->"Source Sans Pro",
      FontSize->16], {0.5, 0.6}], InsetBox[
     StyleBox["\<\"Replace this with an image\\nthat you would like to \
display\\non the landing page for your paclet.\"\>",
      StripOnInput->False,
      TextAlignment->Center,
      FontFamily->"Source Sans Pro",
      FontSize->10,
      FontColor->GrayLevel[0.5]], {0.5, 0.4}]},
   ImageSize->250],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"799b0e90-86d4-45e8-a77a-54614828436f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bf43c447-d8ba-4bb3-aa73-4f710b6e161d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"d45088e8-68c9-42d6-9fe2-400e1e8a4b74"],

Cell["\<\
Deploy plugins that allow ChatGPT to call APIs that run on a local Wolfram \
Language kernel.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8894551045620213`*^9, 3.889455170295644*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"3bec3897-f4da-4bb9-bb79-f7b8048bf72a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6b6f887f-a30a-4e0b-95b2-7e1df1f8e2b1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"de4559fc-9370-43ab-b69d-7a9325a6f874"],

Cell["\<\
The ChatGPT plugin mechanism works by making HTTP(S) requests to a specified \
web server. The web server hosts manifest files including prompt information \
as well as information about availible APIs. This is given to ChatGPT which \
can then request to call those APIs.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.889455641107538*^9, 3.8894557200362186`*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"6a750b2f-a25f-42f9-9703-7203a5e5a2bf"],

Cell["\<\
ChatGPTPluginKit works by deploying a web server to localhost providing all \
the specified manifests and APIs.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.889455722260363*^9, 3.889455748215559*^9}, {
  3.8894557953175097`*^9, 3.889455825601982*^9}, {3.890400436809157*^9, 
  3.890400437426311*^9}},
 CellID->1210821309,ExpressionUUID->"88a442cc-6f4f-40fb-b728-791078d45fd3"],

Cell["\<\
API calls to plugins deployed from ChatGPTPluginKit run in the same kernel \
from which the plugin was deployed.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.889455829866983*^9, 3.889455852246958*^9}, 
   3.8904004390971203`*^9},
 CellID->1259488127,ExpressionUUID->"f6a7fc50-5299-481b-b34e-9da0a0a28aac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "50a41d5a-117f-4ddf-8d8c-29c64f123709"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"656b967e-9d8f-419f-b364-82107fc3b508"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "MainGuidePageString" -> "Documentation/English/Guides/ChatGPTPluginKit.nb",
    "Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"7268b965-5634-4809-92f5-3b5951c54155"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c478ad08-da02-4c52-b36e-45f7fe20640f"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"c6a6fa09-0afd-4905-85e8-428db3e2fb53"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ff36a65b-b105-44f7-9e16-84d71d5c9c46"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"0ffd37a6-81b9-4b02-a9df-df950b36f434"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"0dfb8c8c-69d7-4458-b87f-0afef3448adb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Wolfram`ChatGPTPluginKit`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8903238546959047`*^9, 3.890323857442161*^9}},
 CellLabel->"In[2]:=",
 CellID->172764492,ExpressionUUID->"c4d8711f-5458-4c3b-9b42-32202ad64646"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"c537a1ea-d108-4185-a64f-7de410801926"],

Cell["Deploy a simple plugin to a local web server:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.89039848537947*^9, 3.890398492647874*^9}},
 CellID->388379159,ExpressionUUID->"7f9779d0-70fd-4864-a273-f2c6e17796b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<CityPopulationFinder\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Endpoints\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<getCityPopulation\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
          RowBox[{
           RowBox[{"#city", "[", "\"\<Population\>\"", "]"}], "&"}]}], 
         "]"}]}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.890398508332391*^9, 3.8903985957004223`*^9}},
 CellLabel->"In[4]:=",
 CellID->344476325,ExpressionUUID->"55577ea9-6ad8-45db-9f8f-d72c064e1e5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:60901\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$ = 
                    False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3613036278789014679], 
                    "URL" -> "localhost:60901", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "ContactEmail" -> "", 
                    "LegalInformationURL" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:60901\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3613036278789014679], 
                    "URL" -> "localhost:60901", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "ContactEmail" -> "", 
                    "LegalInformationURL" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "ContactEmail" -> "", 
                    "LegalInformationURL" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3613036278789014679], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3613036278789014679], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "Wolfram`ChatGPTPluginKit`Deploy`Private`handlers$", ",", 
                    
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "Wolfram`ChatGPTPluginKit`Deploy`Private`resp$"}], "}"}],
                     ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60901", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-eebf8c4d-6982-44f3-82cd-bf4ee0c38b55\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60901", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-eebf8c4d-6982-44f3-82cd-bf4ee0c38b55\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-eebf8c4d-6982-44f3-82cd-bf4ee0c38b55"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3613036278789014679], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3613036278789014679], "URL" -> 
    "localhost:60901", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "CityPopulationFinder", "Description" -> "", "Prompt" -> "", 
       "ContactEmail" -> "", "LegalInformationURL" -> "", "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getCityPopulation", "Prompt" -> 
           Missing["NotSpecified"], 
           "Parameters" -> {
            "city" -> <|
              "Interpreter" -> "City", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Slot["city"]["Population"]& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.890398576842456*^9, 3.8903986058660088`*^9}, 
   3.89040084547318*^9, 3.8909249434260406`*^9, {3.8909252447436523`*^9, 
   3.8909252528763113`*^9}, {3.8909253243233557`*^9, 3.890925336389998*^9}, 
   3.8914399249245462`*^9},
 CellLabel->"Out[4]=",
 CellID->542370463,ExpressionUUID->"0138ed30-44d5-4406-bd40-74216677ce15"]
}, Open  ]],

Cell["Use in ChatGPT:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.88945705662773*^9, 3.889457059413206*^9}},
 CellID->858941996,ExpressionUUID->"f102f9e9-c158-4ad3-b5f1-87a5aa9567ba"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
307Ct5LUvr2PN7V8O6mWfDupjCF2oKAsYaxzmss+IfiW4EvSPqmieLhM8pVv
6FYJlOS7FRdDe7VBhnxDtyIhHCgoa2h/LvSIjmcsD30C31VYTC7tPJZP7qEF
lQooE8om4++lf8al+bZgZWqvNkB+Ji48A1jPu4hj+tqKfjYCgcAW5a5HFHIs
42xp6ZULGZayVfQzERSNimivZ0Dz2bmgosssEAgqDXScSVYlg7lsAoFAIBAI
BAKBQCAQCASCioHExAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAILjVI
TIxAIBAIqjKw/pBAIBAIBFUP2UWuMy8QCAQCwaUMrJEXEXFcIBAIBIIqhxMn
Iq3fcRUIBAKBoKpBREREREREREREREREpOpIQUFBRRdBRERERERERERERERE
pBxF7EARERERERERERERERERERERERGRqiDiCxURERERqaoiHCgiIiIiIiIi
IiIiIlK1ROxAERERERERERERERGRqiVlYwcWlDNEREREREQqg1TEmtuyzreI
iIiISCWRgmwqyE2mgryUC4xkzktERERERKRixbDFcmJXU6JfU0rwuZUSd95K
CTsbqv8NKdn7NkpW+5K8b6Vkr8bqd2O13Vgda6TOuYWB38k+jfm8kqERpfjd
T7mxq2zKICIiIiIiUn5iGZPLz2L+i3O9ghI86lC8x3UK1SnBszoludeiJPU7
0b0GJbnV5N+J7jXVMZxzDcV7XkMJ7uq4OiepxKhNia6XMQ8ib5uyiIiIiIiI
lIsYvAPfZKKy88B/CZ7XK16rq/7XVqijuK0OJXnWo0S1P8m9nuKvumpfPYr3
qqXOr2k9nqSuKTlwfi22B9kvaiqLiIiIiIjIucr5xYVqDkyhhJ2NFfddRwle
iv+8ajMHxiskeii7T3Eh+DHJvS5zXiJzpeI/T+NYogd4rc45oC7bg/CfIm9z
WSpCynNuJfK6EPlVtfmhZXG/F+pZlFbKslwlSacy1oGISPmImQMbKc6roew7
cGAd9b8Q4MR4T9h98IsaPGbYjODK4vivqGOaA28tNQfi/c3NzT3jPdb78/PP
HGvMy8tjiIhUJjkXLsK5aMNo38Z2vsO2fikI7is3N8/y3l6a9yhSeimtHZi4
8ybFa9cY9h/sQBsoLrTYewmMOmwjGrBwoYeFFz1qW1DH8KWC8zwuHAeWVrKz
sykjI7Pc8ktOSVF55pRpmnj26enpzPlVQcrqmWVkZFBmZvk9+5JKWlpasfdX
3LtuPlbSdpGYmFRp+4RF3avYriJlI4UcmORzi+K4a9j3Gcf2n2VMkLdrq321
LT7QOhSnOMywC+sx18V51uHxQcNuhC1Zk/kxjs+pfUE4UPd5AwNDaMLE6RQW
dsxmf3JyCk2ZMos8PXcaqZvemWXLVtOSJSt5e8jQ0fTOu59a9cSF9FPGxcXR
c8+/Rb/82kmVs/T+Ln39iRMn6Zln36SlS404W/SZL0XRzxbP7N3zfGb63MzM
LHr//db0cYuvrH2SitKr2vcZFXWafv+jMzVp+jT9/nvnIs+FZKnyL126mnr0
6E9/tOtCAwYOJ08v27ZeXLvQdRkQEEQPPfwcDRgwzGZ/ZRB9H7t27aVx46fR
xIkzaMcOD9PxiiqZyKUjmgNTKXknOPBqHuNLYNQ2OI3jYwwuS3Q37DuD566l
eG/gGrWN+NB6FO9+gzpeX/EmYkVvoHjFkYnMgfUuGAf6+x+g6+vfSeMnTOPf
sBEgGzdupfo33EWftW5jwzfgxnvufZx+/qUD//6n50B68snXWKdo3xL+2+tD
vd9+W/ugNm12oS++/IHCwyP4t1mX6LSSkpKp1SffUZ8+//L7i/3WtAps0z3j
SVn0JNJHPshPlxP77r3vMZo1az7vy8nJLTIts8/MvpxF1bMZOg1Hvmdzvem6
NB83++30/fA1DvKzT9t8P716D1LP7FXKMXGXOT/zdoGlXvv0HcLQ6aOdtP2h
nWoHHbm+bNMpKLIshfegzjPdw9nEXD9F1dXw4WPp1sZNaYJqy35+ex3WMSQy
8hR9+lkbanRrU3rxpffoo4+/omYPPUd33f0ojR03xdo3KK5d6PuKiDhBb73d
iiZOmmHNw76suQ7eh6Lqu6j71fXmqD61f9Nclzq/hQuXq3t4XPH08/SEeuZ3
3vUI/fVXd0pJSa2047kiFSOl9YUm7Wyg+O9qSvK6TnHUdTz2Z/g6MQ+ihuK/
OpTo1oDi3W5RNmEDilX8GOtdg2J9rqJ4n8sowbu64rzrDV+p95XsI41X+xJ8
FK9ifoU1JrRsOLBQf+TTm2+1oJ9+/sv6G/LvkFF09z3N6YUX31E646T1Ok9P
H8WBj7EtCOnZaxA9q/rKxeVRnD9G963nz1+q9FcT1jvFXeMo/ZKI1h3Hjh3n
fJyclliPIc+mDz5Nc+cuKjaPsvYrVVS8Rd9+Q+i5596y4cCz5d2y1TeM85Gy
stfPduxn1YY/+vjLIq/TY9w//Pgn3XHnI4ofliley2HeiI6Opc5detFNN99H
M2c58fnwjcCmPFu7OJ+yFne8pPV1tjKA62+/4yH66ae/2F+Lfst/oybQzbfc
R4sWr+BzKqsPV6T8pbQcmOx1MyW5XUNJ7jXZdjOP+SVYYkGTvWozd8Wo82IU
L8Z616Vor7oUq/gxzqOm4rwaiv+UjehzDSX6XkNxnldQjOvVbFMmepT9eKDm
BdgFjz3+MqWlpfNv6In3P2jNPs5Hm79Iy5evtV4zceJ0uu/+J6xc1bPXQHrl
lffZJ9R/wDC2D0ePnsTvnzmPg4eO0ODB/9GPP7Wn7j3602Zlh3GpVb3Pm7eY
Pvn0Oy4DfFiDBo2k9PRM63Fzf3/EiHG0dt0ma3nQDx/533jWa50796RNm1zO
uE/9nru6elKbNn/Q40+8Ql999ROXPSQkjE6dOk33P/Ak67o1azYqXdqBunTp
TRs3ORc+aUsZkEaXrn2obdt26n6H05GAQJvj9gL/0/IVa+jw4aP0d/d+XE74
IlFu83XoCyxevJL+bP83/aDsK/RB4KfWAr9cv/5D6cCBw7R+/Rau59//6EKL
Fi1nO0PLzJlONHv2Apu0Q0LCmfcCLGXt1Xsw91u0zQ9Zu3YjcwD6QiNGjqPA
ICPv06ejqbc6/2X1jF97/SPq2Okfa3uYNm0OzZ1nyw/r1m3mc2Ajorx7/fdb
j6WmpqpyDCUvL1/auNGZfvu9E7Vr15VWrFhr0v+29af3x8TE0QRVl7/82oF+
/a0j++nj4xOsddNL9cVQxtff+Jg6dvyHnOYvtrletwHkfdvtzdQzGHXGswIf
vvveZwqf8m88oyZNniq2XaSnZ7Af1c3dy2bf7DkL+P7+UM9o6tTZ1rLq8rhs
c6Pu3fvTj6o9DBw0wlpP+n3BWOu06XPV/Xak337rRB4ePrRz527qq2xx1KMW
tKtB6nrUN+y75cvXWPuxhw4FUIeOPSgoqLAdRUVF030PPEGjRk3k35eq31+k
vMTEgd6NlL12nWX+Xx2e8x6vbELmQK8aFLejFiW4PUxZh7+mzOD2lOTXgk5u
u4+iPG6gJJ+nKW3XO8o+xDhhI+ZAjCOm73yTknc+Q7Ee1/LYYWIZc6Bu/6tW
rmd/yc6du/g3dGXTZk+zfv3ooy+pW7e+1mvwrr33fmvrewad9uijL9Ibb7Sg
Fi2+Yo6DjgGnoe+Jd97ZeYfqdz/Mvph2f3blsSj4oXRfdMyYyWyLNn/sJfr8
87b0V4fuVj42cyDslgcffIZ1NQTv9iuvfsDXdfu7L7X65Fu64cZ7FCdOsPEb
af23YcMW+uDDz5lrP/zoCy4r7vXkySgu2xtvtlB69APWs9D3t972IK1cWcj/
TvOXUGO178WX3qU2bf+gBx96lh5R9753r63+supd9Rv9CNhczyq8/8Hn9OWX
P6r6eYheV+kfPx7J54KLoLcbNnqA6/Z7xdPgZJTTb9deTstHPRv0Pd56qyWX
9Ztvf1F11pJubng/9VR9GJ3nh+p5aXtNlwdjQA0bNWHegcB2f8bCgbgO3Nzg
pnvZJ4ixsQebPUPPv/AOly82Lp75FuV/4cV36auvf6I5cxZyOu+8+wl92vp7
a/2AV/BcX3/9Y9btj6j+E+5jy5ZtfPz4iUh6oOlTzFV4buDbt99uxfcA7jaX
2VyPp6Nj+Lmh3j7/4gf2zze+rRm1bPkNJSQkMgciredfeJvL+PU3v9DkKTNt
0tD9hFGjJ7IfIzAw2MZXq//HxMRSwNEg3g5VduBTT7/usF2AtyFxqn7gf0W/
D4Kxgu+//50aqX0o38+//EV33vUoffjhFzxeCRk9ZpKq73v4+f3ZvpvK4zX2
xe7evY/Lm5WVxf2Im2+5n8dbcc9PP/MGl+OBJk9yPULA5w8/8jz7MNAne/ud
T/g5o49pH/+p6wFj/41ubcJjHca7UXnGL0UqVkrtC/W+jdd/gQ3IvMdzBQ3b
Lk7ZcimBv1Bm/FTKDe1IWaHtKTNpHGVEz6aTXvdSSkAryo+fTqcUz8X6qDS8
r6eTzo0p7fgsyogYSLHbLle8d32Z+kIh+r2HHdRE6SY9pjFrlhO/axh/G/zv
fxyHgvpBrB3sQtgoWgYqmw28oP1HkHnKNgDnbd/uzr9hl6A/GmfpC0Ogpz5Q
ekGPvSxYsJTHXkJDw4y7KThTF4IDX1C6GXYMBDYp+FbrLAj4T49bObrX0LBw
zgf5aQkLPcZ8856yAVAXEOgy2BQYO4SAJ6Fv0C/X9lPE8RPMDd9+95uJq23t
1m+/+5XHmWbMLKwf2KooN/oPENhODZVeGj58nLWchw4HcF1D/0Ewbvv4Ey/z
/R85YthziEuBrsQYD8a/IF8q+/b7Nr/Z3DPimh5s9iy5uLjyb82BKB/SaP/X
3zRjRmH5QkPD6W7FE9NnzLPuQzl0WbR8ofgcfQHInj37+D47KC7PyjLqB76A
1xQfvvrahzyWFq247Nnn3mRdfvy4YQenpabRBx98ofR3qzNidHT50QbRxjZt
LrTxV6/ZwHUGPtGCugZHOxKd5t+qr4Q+BO7bvN9+GwJfaNHt4kf+jXcEY22T
JhmcO2PmPOb02XPmW9Nxd/em29X7MH7CdP7d458BNGLEWOu4aVJSkupLvUD9
+xtxNUuWrqJbVH9o/Pip1jL5+u7hsoDjo06f5v3os4Abg4JC+Rz0afupNoW6
0u8ebFvUY6qqZ/g9cAx9WuyXsUCR0otpfqBPY4qHP1PHfMKn6VWLYt2qU9zu
96kgw4XifVtQ3DbFj64N6LR3M0oN/lnZgHdQ+pEvKff0MkpyrU4ZntUoRfFd
tEtNSj0xkdLCh6hrLqMkr+sv2NwIvAvob/5sGROE7wW/IfBZwv6AXty3/6Da
fpy2bt1uvRY+NujqTFMsevixCMWhT1l9clqg48Al0C2dOvXkPnZqWhrnD9sC
aUO/24/9mzkQPjy8y5Bly9eoPviDrFP27Ttg49uzFx1TcOTIUc4H/i2d7rGI
48peeULpMaMPoOMcwbVPPvUab69ctY7HVjAOirEj3AP8W9179GMdCHtEl9Ws
w2EPv/raR2foG+hQ2BQQxPg0e/g51q8Qbbf+q3Q/7Kjk5GS2V8F1iNngusgx
yhgYFEx33/MoTbDoV9hIsBF1/hD40fA8YI9D9Bhujt0cE+R//PhJ9q+B74cO
HW2Ns2it7HPAfH/mvKDf77qnudXvpusQ3I/+ENJMSU3lcvyn+inGOcbzGjJk
tNGGsgp5qdBHnMs+gi+/+vGMZ4qxP7RTHSP0jepX4TxHsR76N3wMz5j8wI5i
VXTZi2sX4B5ci9gS2GGTJxscCB5GnI29TyA4OIz7TGbBHI6TJ0+xTQpug00I
6dKlF/s24FPVZYJgrKGpstHBu+hfwJ4dPXoyH9NxSWib6M/+O+Q/a/1Bho8Y
x/2u6dML+zXCgSJmKa0dmLDzVl4nxpjfoGxA72sp1r0+xbrUo9zIcZQWOIxi
nKtTtC/mQ9xLWa43U+qW+pSwuSFlBbSnnNjNFOV+N0X5XU8ndt1PJ1zupeTQ
KZQe2o/it4MD610QDtS+ELwjTz/zOutycNOYsZO5TuLiEqiZsiEQHw7fKN73
pMQk6/V9+v57hj7F+4n3cPqMufwbY4d/tOvK/W/oDtiV0HmwD7TeL+TAo/y7
OA7srTgDgr4txkeaPfQs5webDH3pExZfkfmZFsayB1o5UAviZHA9ymD4ogwf
4cCBI1gXQaDLYeeg7M89/zbrUWxjbBH3FRwSas3HHNsAPQ3/sY6t1XGlGL9q
/tjLrN8wrqdtJSNuw+i7Y0wJcUkYszyq9CR0HmwEY86zcS7GhlCXGFOCfP5F
2xJzoOYB2KXwweI+YKehHuEbR5vQ6WgONMtnn7Wh7743bE7UFcqB8ujYE473
VWnjHrZtc+cxLvSnMI6ofX74D06EHZTlgAMx/7C5sn/AOxwDyf5Lo4/UqXNP
fg7a7tQc6Eh0XcBOAr9rP31xdmBx7eKJJ1/hNMGBiJvBmB8E/s3v2/xufd4F
BWfOl/D28eO+EdrOM6q+n3n2Da4X7eOH/xT9I12HOm5nqqo39InQb4T/HfW6
ePEKm/aAMqJOUDdaYB/i2aLPYl+/IiKlE/Mc+UYc/5lgmeMHDoxzv5nidzSm
/NjllLCrI0V5XkaxvldTjPcNlO7WgLLc69LJ7TdRsr/qu2aHUEbidtU3XEbp
qVspM3oL5aUHU0poH8WBl1PyBeNAo4+5bZsbj0tgbA7vi6/fHus58HdhvAVj
/PBhQvR7XRQHQudq/2hr9e6BS2AXunt4c7+3S9febGOhLwyBnkGfG3ago3kB
EM2ByNMs8FPBTsNcL/AUfHbaTtLiiAN17LlZ10E0N5g5ELEfsMMwp2zfvkO0
a5c/66GjR4M5dkLrYbMvFP/N8ZTIT/fLMS4K3YdzEGeB/ofWdZoLYFtAz+H+
jgYGcf5z5xmxHuAG8Cn8i9DBmq+g5/CMkK72g7m6ebKOdTb5QpEfBH0O6NWv
v/mZ1q7dRH679rDNBk5C7I6uO/Af6tU8NwQcCLsHgvxRjuiYGIuPNZPLsGLl
WrYDMdaclp7Oz1jzha6z4jgQzwK83O5Pw0ZC/ek6RLt87bWPrL+L40Ddzuc5
LWZ/oO4PwLbT66hAMJcO8S8Qjokpol2YObCpuu8plnvCs4aPv/B528acRJ2O
5jaFvhFipXx9d3GbxBgz2gQEfg2MySYkJNhcCz8u+nvwC+AdQlufM2eBpT0Y
c5NgO6JvhTlLui6xH/eNuB1zH01EpPRyJgcaa6Phf3X1/xZKcr2D8k/PoYSD
XSlh22WU4nUFf/chxaMBjxVGut5IKUe+pZzk9RTt/QrF736IUvyaU7z7k5R9
ai6lRvxL8dsunB2o3wf0i9H3xJgT4uJ0Hx0yd+5CHrPHXGCtv7RfCHxkjrOH
aDtQxwxC/+qYAS3oByOGAbYcBHrmnvses47tFcWByEtzoJe3r3VsXwv0Nsb7
4HM1X2vmQNg48yxcAglXHAj71pGuQ18dsnu3P+tyjPeYBbF3a9ZscFhe6B6M
JzZ98Bk+TwtiI5Au7AUI+veI8di+w916DvT6p599z3NTkDbiQVGn333/u82T
nr9gKev0FSvW8W/EtLz08vs2ZURs6h2KP9HPgcAGha0PWbBgGfNsePgx6/kH
VV7Yh/hQXXdfKP6znxsBXtQcCN5AbMiChUttzoH9j7FI+BcSEhP5HhxxIGxI
Ww4s5MJffulAj6l2Cf7QAr8i2iRiibR8+23R44H6+cBHgLxatfrW6oPQAv82
0kS8FAS+UPC6o3bx5FOvWjkQfIU6hiAW9q67HyH/fQet6YKzEFeEdoK+AGJk
zHGksbFxbJvCTwsBPze+vRnbchhDz1Z9Gdj/6FfCB4F+DzgPz/Cbb361aQ8b
Nmzl9uDkZLRvzf2wzxNN/hsRkbIRBxyIsUCvay1QPLe9PqWFDaLMpCUUsaU+
pbjUpBS36hTjWpeifR+jCO87KCXwG8qJX0TROxoprqtOafClbq1D2RFjLjgH
8pUWnY24fMyP0mPzun99VPES+q7QZeACiB5/wLyKp5Q9Z+bAEydOMc/MsMRU
fPDB5+wDnaO4dNWq9az7wYuID4QOgSDeHLF0P//agc8xrz1i5kDk1b3HAP49
bvxUnt8PuwYxAIgLRzwj+uE65sH+HhHrDy5HjCbmCKKvffzESctcaKNPrXUd
6gH3jd/Qd5jXgDFB8Ozq1Rto7NgprG9wP+b5zGYOhF0CPQp7Bbp00aIViku+
5bEZbYugzwCuQ8zD9OlzadmyNRx7g3lcmJ8NgX0CuxlpIT4R45JY1wCcgthT
PR4JWxvxhJjPgHjMUarv8fjjr1ATxfE6PhN2huZ2xNrAxwp/Le4JPt9XXv2Q
YzAx51xLe9U2wIsjR463xsGCE7/9zvALwJ5v0eJrtinxXBA3iVjdm9Q9YK4L
BLEcsMH12JnmQMx3gX1j5kBIYUyPD/c/MPa3cNFynvf93vufcdyOjgWCfKn4
z95faxadHnwAiJ9s0fIbbjOIm4V/Fn0y8JmHZW2kkNBwuleV13G7eNHKgbhn
vcYE7Grw2fPqeSIfcBdinfFe+fj4UXx8IueBPuByVUf6XmDjd+pcyOfDLPP9
0VbB2WgfiHeCjybypDHvCDGeDVS6sJFxH7BFcT5idjBWrevx1Kko5kukERsb
b1PHIiKlE/Mc+Vso0bM6fw9C+0Kx5lmiV22K8HiY0hIWUsrpUXTK+xM65fYG
JRxoR3lps+mEfxNKDvyKchJX02nX23l90WSv6ynW5UbKjpxKacdHUty2aheU
A3VfccHCZRwPusUS81K4lothz2DMSHOLPoaYPcyL0JwIge8O/WTYjxDEqyC2
HX1s6Dr4dKBHEB+v9R7sQYzz6fc9JcWwD204UOWBvAYNNnQq5k8MGz5G6fiX
mR/AV23atmPfpr7W5mlZfsJ/hBgE9KsRb4e+NvgH+giidR38e+Yyor+OOEz0
BeC7w7wI+F8Ro2DOz/wfcxXAWbCDoZ9gE2K8bbFlXog1DvTQEfY1Im2cB1/l
tOlzrOO1e/bu4/3Qez/91J7nGCAt6HxtOyM/1Ali41G+hx9+nm16xE6iTrUd
CDsGsZnaXwyehW59+JEXVD2+zlwNn4CeQ4Z09ym7pvUXbZmL+ln6SLABsTaZ
FvgOYe8Y9/A8Pw/E1ei1O2NiY/k56VgpzYFY1wVjq/YcaN7epPpIKBP4A8C4
m+5D6HNgL6KfUpzoc9GHQB8M7R1tEn22Fi2/5vvUgrkhaMeO2gWu1fGWqLOZ
prhfzOODrxPPB3WKPsVmc0yr6mvAvwuufFTVEcYf8OwxPmAWjBvgGSDWGW0a
/Se0WdiBELwP4F48O7QN1Ms3yhaGfx6i2xba7RtvtuS5j9oWFA4UKRsxzQ/c
eaviwOsU51k4EOvDgAO91T6fWnTSrxmlnOpLWTFOlBapdFviIkre9x4lIv7z
wNuUFtGbYl0b8ngi+C52ez1KDWlPyUE/KVvyCss3Ay/smtngNehQR+8H9JWj
dYixH+sK29QK6+I0mzE5vI/oj+r3l/WHZSzQLPBPJSkU9Y4ir8KxN0NQLujf
c/H1ZGRmsu2Ul5vnsLx8b0rn6XmKZsF1iPOx96VpsY2J+Ur107vwb3AldJmu
L3vOhJw+HWM5J8NyzNBjiMmFLad1KebEaX+vfRoQ1AXqROtB6Grdb9HPzHwJ
8jumztf54rh9nC3ywL3rdoD/es1sc/7QufAvaxvffL2jes4uop7t7w1+Cdw3
7Gb7NcEgKEtJ1gLXl+Dcw4cDyNvbl+NZ7Z8H4lrO1i70PdmvmYr/KCfmpDta
iwXPAByr2xD6lrru4a8fNmwM36tZ4Fd+VNmf9u8byoI2o98t+3qBoO0V1V5F
RCCljQtNttiBWCctyQPrg17PAF8lYs1Qj5oUt0PZiW41Ob4lGd8VdKvBa2zH
utei+B1YT7Q+r6+NMcU48KDiu1gPy1qjNt8YrDzfjSiJOFoL0V7OJ1bNmEPh
OK1zKc+55Oco5r6oOHz8f+vtT6jtD38UOV+xuDKZ14KEHQh/mXnNHkfX6nE0
R+UpSvLtjhdVlrOJo3zKYm3z0pTpXNIrbZrFpWHed+azt60fcB/sOtjSmHsE
Ww/rG2HMGH5miG53ZV0vIiLnJuY58jdRkvs1iptqWtbNvp6/DZjsaawbgziY
ZE9AcaDnter3tYoHjf38TXj3OrxWqBFTo/5716MEH8u3CHm9tbJdL7TIOypC
XxXHUUVxmqPri4tFP1s+Z7vmXHRtScpSXH7F6XYzB8K/NdQUX5lfgvszl03/
DwoOoc8++57nOUAcffOxJOkUdV9nO9/+PPtt+3OKqp9zqeei8i4u33NtA+b1
zB1dWpLynq1NlqTN2v+Hn6Fr1z706qsf8lj6V1//zGN+Rd5HCduViEhRUlo7
MMWzISW7Km5zM76Vy2tfK/5i3mP/JtYLravOq0UpytZL8QTqqG0FrCWqzgcS
vRR3etU3OJDXTjO+rVReHChStlKWukf691VDzO3F+F5F2X4vU0Sk7MTkC/W6
TfFfTWULwm9Zk32Xhet7mlHLYvtdp3ixtgG9z8P4Zm686bu7+hu7icKBIiJV
RhzN45M+kEjlExMHejdS/FfDwmO1jO/eMq/VLuQtcJk6xuuK4ntKXhrXGr/d
lf3obnxv1/jubl0L/9Uu828niVx8Iq6sqifiwxQpLyl1TIziI/CSlaeY/2rx
dyRs7UD9XfgalviZmhY70OBN2HsJ7PvEutuWb0VYefTijIkREREREancUjYc
WMNq7+E7gsxzVv6qfSYHMmfa23ia48z7hANFRERERCqbmDmwsYXTLPP4PDTf
1Tb9rmt3zGQb2nBkLdO4oaMxRc2BjYUDRURERERKLaWzA5MVHzXg+Q6FXGcB
85iyCb2usxsbNMPEbeBQcKBXDZOf1P6aesZ8Cp9GnLe5LCIiIiIiIuUjFg7M
z6IUv7sp0bWaZRzwukLAJ2rdNu33qGF7nhWILVVc6nmV2r7a4FVzGh4Glya6
XqbyvJ/zNpdFRERERETkXOX8Y6+MeOXc2JWKk+6jZO9bed00jNWdHxqrNBqq
NBqwbZnso7a9G9ud04j5Lzd2lU0ZREREREREKkwKstk3iTG6C4tkzktERERE
RKRySEXYYmL/iYiIiIhUFikoZ4iIiIiIiIiIiIiIiIiIiIiIiIiInJvImnwi
IiIiIiIiIiIiIiJVS8QOFBERERERERERERERqXiRb2eJiIiIiFRFKW/qE64V
EREREakMoukoLi6JQkMjKTPzwq8LJhwoIiIiIlIekpeXT7m5eYy8PON/fr7l
GwwWLgoKiqAlS1xo6VIX2rTJR/FgVnFJioiIiIiIVGoB3/n6HqLly7fTihXb
Lf93MNc5O/sqHjTWvwwKOk7z52/i/+DHZcu2UUhIJB+7UPaa2IEiIiIiIhdC
NL9ERcXR4sXOdPhwGIWFnaTQ0JP8H/x28mQsn6P5LzDwGP8ODDyuONKZYmOT
LGlVzD2IiIiIiIicj2gOBOfB7itKzuS/YxZ7MMKSzoUvo4iIiIiISFmKmQPh
/8zJybXOe8DYICQwMOIs/CccJSIiIiJy8Yk9B2KMz7wfPOeY/47zbx0vIyIi
IiIicrFJURwICQ8/VSz/aTtRRERERETkYpTiOHDDBm/avTuAt+39n4iTcXb2
EztQREREROSilaI4MCMji2Nk/P2DaNeuAMV/m23iXxAvinkTZs4UERERERG5
mMRRTAzkxIkYnvcAHty40ZuOHTvF+7XdZ8SRbi8XDpSYGxERERGRCyFncqDB
aVgDDTyYkZFpc25xvlMREREREZGLSTSnhYQYdl1Jx/fCw6PKjQPFDhQRERER
uRCi+SUi4jSP7yUlpVrXC4VfVG/b7zt0KIw5EGusiYiIiIiIXIyiORAxMBs2
ePE62BgDBL8VBRxftGgrry8qIiIiIiJyKQi+/wB7EN9EwnhfccD6onod7Qst
4gsVEREREamqIhwoIiIiIlIeomM/SwIRERERERGRCyvCtyIiIiIiIiIiIiIi
IlVLxA4UERERERERERERERERERERERERERERERERERERERERERERERERERER
uTRE4kJFRERERERERERERESqlogdKCIiIiIiIiIiIiIiIiIiIiIiIlIVRHyh
IiIiIiJVVYQDRUREREREREREREREqp7k5+cLBAKBQFAlERUVJRAIBAJBlcPp
06cpIyNTIBAIBIIqh8xMIEsgEAgEgiqHrKzsCi+DQCAQCAQCgUAgEAjKD2IH
CgQCgaCqQjhQIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQHCpQWJiBAKB
QCAQCAQCgUAgEAgEAoGgZMgoZ1T0/QoEAoFAAKRnZFJ2VjblZuVQjkLuBYJO
G3mlZ8g63wKBQCAoPUobE0M5eZSSnk7RKckUm5pCsSkXCCpt5IG8kGdZ10NG
hkAgEAgqIyqaJx0Btli+4qIlwfvovuUj6JZFg6nR4n+p4eLBFwRIG3kgL+SJ
vEtjD2ZlqXtIz6TExFSKj08WCAQCQSUGdDV0NnR32dqB52EzKWRnZlOyssnA
SZfN6k615vWlGvN6nxXXmVCS881AHsgLeSJvlOF8xwdRl/Hxyr6MTaa4OIFA
IBBUZkBXQ2dDd5ctB567LxS8g7G5mJRkukXZaDWd+lBdp75U5yyoN78/Xb+g
P9Wd309t96P6lu2zXaeBPJAX8kTeKMP5ciD6FMJ/AoFAcPEAOhu6u7z8nWfj
QIzTNVJ8BBsNHFW7CDB/Ka67YnYPqjajG109pyddPkttz+xG187tzXxo5rri
0kFeyBN5ny8Hwr8M27qin6dAIBAIzg3Q3WU5RlgaOxA81PAsHIj9tRTAea9s
nEpTj+4kr9PHaMPxAOq1ZwvdtXQ4/W9Wd7puXh+qofiwlsVedJSe5sCGwoEC
gUBQJXExcaDeh+NjD3sSJC0nm1xOBpN/3En+HZWRQp9tn88+UsS81FRcWG3m
38yFdZz6CQcKBAKBwIqy5sDS+kKL4sC6PN43gKopG2/UQQ/muz57tvK+a+b0
pGpTO9Ez6yZSUnYmHysoKOD/R5NiqJPveo5/qcnp9hMOFAgEAgHjYuBA8B/8
mtWmd6Gn1k5kbhtx0I1/Xzm7B3Pg5zsWKr6LpYzcHFp57CD9s3szddu1kbZE
BvL5G08cpTrz+7JdqHlQOFAgEAiqNio7ByK+BTEvdy4dRpOO+LCdl5yTyb+v
mvMPPb9+MrlFhTHPeUUf4zHCalM7UrVJfzJHXjbrb2rjvpSPT1TXY6wQaQoH
CgQCgaAyc2BdC/89vHoMnUhLotTcbDqVnkKHEk7TVcr++8h5LuXm59PxtETm
uWozuire60y/eq2kUQfdqfGSIXTF7O68b/xhL8ovKKB7l4+g6nN7sU0oHCgQ
CARVG5U3JqYfx7HAXjuoOC8yLZkaLxpEi0L9aX/8Kbb1eu/ZQntiI6mG4rRq
k/+ip9dNoO2nQigsJZ7HA09npNLPnivZ9gP3Qdp6LKPLZv5N11tiRYUDBQKB
oOqistqBiOv8n+Kqb9yWMHe9v3WO4rn2tDbiCO2LP8kc2GfvVpoXvIfqKy5b
Erafzxt9yIPnCT6qbMetkUG8zy/mBL23dTZl5+dRN7+NfFw4UCAQCASVmQMv
m9GNZgftolMZKVRnfj+251YeO6TswJN02bTO1NF3vbIPkyg4OY4WhPjT/JC9
tDcukm0/zJ2vps5ptc2JgpJjmQvzCvLpI5e5dPnsHtY5g8KBAoFAUHVRGTkQ
a3+Co8B5q5jzTvG8BqztuVr99os9znYgbLrw1AR6ccMUYyxQ2Y2fbJvPcwR3
x54wbEd1HuJGh+53ZR7su9eZ0xEOFAgEAkFl5EDwEs8FVLw28qAbpedm082L
BtP/lG23PPwAJWRn0JUzu1GHnWtpWdgBtvduUOdr3sQ8iI0nAnhu4OLQ/XTn
smHqnE40K8iPY2juXz6S42LqqvOrKgfGxiZVeBkEAoGgolFZY2LAZ1fO/odt
PEg/f2eqNuUvemTVGF4XbU/cSXKNCqU5Qbt5DsSNzIH9eC7EtpPB9IHzbE4D
8t9Bd7psage+FtLZdz37SsGzFcmB0dEJFBOTeMZ+8NPp6PgLxlMJCamMim57
AoFAUNGorHageV3s6Ud9mbs6+q5jfyc47yvXRTxHIjQlnt7YNIPjXMBrLbc5
0emMFGq9fQHvi85IpTGIk1G2IjgvUdmQWGcNaVQ0B+bkEKWn59hwHbaTktIp
N5coMTGtzHkQ3wo5dSqWIiOjK7ztCQQCQUWj7O3AsuNAxG6C837wWG5d+wwx
L69vnk7VlF2Hcb5ufhuYCycH7KTVEYcpODmW5xB+st2J+TMhK4NjRf83rRPP
F8zOy6WB/tsUB3atIA4Ep6Xw9n//jaGVq9ZSWlqW4rpE5rvk5Azy9z9E/QcM
poCAYOZD7DfDUbrYD5uyuOOnT8er55NPXbp0p1affMZ5VXT7EwgEgopEZfWF
Mgcu6M/22rjDXhSflU4tnOfRkcRo5sKlYfvp7mUj6IpZPXhMEDJF8SDmvmMs
8Bu3xRz7Ag7E/Phq43+ldt5r+Lw3N89gfrwea7CVMweCi2CLYfve+x6gdn92
oLw8svpFMzPzFS+uo9p16pGrqxfbieAuXJOamkUpKZlncKHmzrS0bOZMs39V
n4frcE52dgH9/Ovv9NrrbwoHCgSCKo/K7AtlDpzRlfrtdeY1XmpZvoeE8bz0
3BzKyc/jNWLWHw+gB1eNomoT21Gjxf9SSHIcfe26iDkQvs9B+7bTPUuGUlpu
Nm09GURXz/mH5+ADFcmBTz39LP3dvSf7PTUHZmTk0fr1m+muu+8lT09fxXvZ
zF845ue3lw4ePGrlM81v4MagoDA+Pzw8krlQ82RCQhrzImxLX789zLcdOnah
N996RzhQIBBUeVRmOxDjgVfN6UnPrp/E9hviQPF9CMTKYN2XiUe8meuqTelA
lyu++8N7NXNeak4WPbl2As+nwFoxx1ITKUvxJWxIrDNqrJXWr0LmRpg58PEn
nqKu3XqcwYHr1m2i226/k9zcvCknJ582bthKjzZ/nO5/oCndedc91KLFJxQY
GMbjhakpWdS//2Bq2Og2uvue++n2O+6iGTPnqHRyOQ/YkF9//R3d0vBWPvZZ
6y8UvqR33/uAubGi25/gEgXauKB8YBlbMcZZKsGzv8hQmTlQfzMC34ZYEX6Q
svJy6e0tM43579O7ULVJ7fj/x85z6UBCFPMkxgQfXzOOOfGR1WPZVgQPDj/g
SjcvGmSZE1Fxa2aXlAMb33aHxQ7MpIcefpRaf/4lRUaeok2bXZgH+/YdwPc7
ecoMur7+jTRmzAQ6cOAwp3djg5tp69btfLzb3/9Q3Xr1acqUmbRrlz+1a/cX
1a5Tlz797AuJDRWUKWJVu45Fm0IbV21ZUH6I03VfCdrBxYbK7AtlnlJ8hTnz
DRYOJO/oCNbri8P2K5twHc9333QikHkO39DFemgY5wPgQ3UK2cvro92jbEb8
xneTNP9dDBzo5e2neCqF7bfPv/iajh07ofLL4zHCkydjOI2nn3mevlJ2nuH/
TKSoqDhq+uBD1L1Hb2VDFvCYY5euPYzvDacZftVnnn2BPviwBduRFd3+BJcG
wH8J0fGUERhMuf77KH/3bkG5YQ9lHzxEKRGRFruw4tvDxYTKzoHaFrx2rjFv
Ht/NjUxPIkSJGpGixLGgdy0bzt+HqD6nF/Pl6EPGd+a778L6oN352srwHXl7
DoSdBq7SHJienktr126k2xTvGb7QApoxYw7dfc991OjW2+gZxXnDh4+iGJUO
5jc82Oxhuu/+JvTwI49Rs4ceoUcefYwa3HQL/fLL74ozI/maadNnK/s8j88H
f/7082/01tvvyXigoEzA/BcVS3l7/Yl8fIh8fanAT8HXAvO24IKAdu5U8KH0
oFB+HhXdJi4mXAwcqHkQdhy++YDfOA9z4n/wWMaxn1j/BWtju0aF8dgfZJD/
Np4/ocf+atuhotZKAwcCL738Gn2h7DvMEwT/wYaDTFecBX/m7j0HmBMh4Mhl
y1bRH+3ac8zo34o7MZ4HO++XX//gmBdn5x3k5u5Nu3fvp6DgcIo4HsU2JPyk
6DBgXmBWVgF9+unn9M6778t4oKDMkLP/AOvhgl27FOf5MVRD5N/5zIPGvnx1
Tp7iSfzX+wRlBFXX4EHYg+IXLTkuFg7UnIW1Xzg+VJ0DHynG/ZqtHE1DD+wg
58gg/p7uhCPe9NTaCbxumr7OPq2K5EDwGewy+EHr1L2eNm5y5nl7iGM5duwk
vay48eFHmjNPIvalU+dubBNqee/9j9iOy87Oo6+/+Z4ee/xJK3+C1/r1G0jL
l69Wx3PojTffphdefIWPq24Cbd/uTrc0bMTjizIeKCgdkpTNkUrJx09ZbD9b
fZzr6cn8R3v3MueBE+nQIaKjR43/8OOp/cXxIa7Pt0/bst/6u7hzLPuLTcfu
HDOKOlZgn5Zd+iVJq9hzizh2Rr42UBzou5P9ouITLTkqW0xMo2I40Mxddayc
2I/jXDDeh9gZfFse2/gPviwqDTMHNipnDtTz+cBvz7/wEtt1H3/cir77/gee
E1H/hptomeKwzMxciow8zefccONN1PaHn+mjj1vSTTc3pHlOi5T9mEcHDgaw
//P2O+6mb75tw9uwITds3Ko4MJe2KtsQ58NP2rLVpxxfetfd99Frb7wl44GC
0gHzb1QbSg8JZ/tD24Cw81Tjpl2dOtG8Jk0pfft2ogMHKMfdg0JGj6Yd335D
IaNGUZ636tcdOUK0f3+Reh38CdjsA5f6+xt2Jjh2zx51jr8tx8Em0udge98+
Ps8mHT7Hsl+fb4N9xvW6HOZj6hozJ3EZ1H5dB2ecb7mGj2Hbck/We7FHUfla
+g1FciG4UuWj42QqvI1cBKhMdmBMSjLdovioplMfqmvHdcUBftL6C/rzf72t
vwtR7HUKyAt5Iu/yXCsNPIj4lLDwEzRsxCj2ibZs9Rl1Vjafp+dOHreDfxR2
HXyYY8ZOoF9/a0cdO3WlzZu38ZzA6OhEjnPBnMHeffrzOB/+HzgQQIidwXGk
s2OHh7quC1+/eYsLx9xMmTpD7EBB6aA5MDiMxwG1/mduUHo4ZdMmmv/ww7RA
Ic3VlTlxYv36tOy552jG7bfTnHvvJfcffqCYJUuowKLz7W3J1E0bKXn9ept9
2W5ulLh6FWW7u3M+aVu2UIo6h3kFeatzwMM4J1PxLzgjYdUqSnfeyrynz8n1
8rLsd+bzk9asoaS1ayl53TqV5zq1vYayduzgsqVu3kSJa1Ybx1VeOR4eBq+i
3AqZ27Zxfnk+3lzO5A0b1PlrbNJKd3FhWw37UlXdFOzazekkmvNdt463c3Bv
qowpG9Yb5Vq3lq/hfFWfgfnUEQ+CA1V5LmUOhF50tM7y+aKycGB2ZjYlp6fT
fctH8Nz2WvMMG62kuM4OJbkGeSAv5Im8UYbyXC8UzxG2GOJCwVXgNYwNgtf0
Mzbmuafy3HachyXj4DPV8+NxHmxKHMe18HfqOfX6ONLGtTgH12ak5/K5Fd2W
BRc5iuBA5kH4Pg8fptglS2lsrVq05IknKMppPqUqvgJ3pG3eTPt69qRFzR+j
GXfcoXT9BrZz7G25Va++yjwKm5H9qirNo0OG0Pg6dShY2ZIUEkLbv/qKJlx/
PZ2YPp3tTfASOHHSjTfQnq5dKV+lNfPOO2np008bNpSlbIcHDaJR1avTwX79
mLNm3HYbTWvYkCY3aEBT1f/R115Luzt3Zt/tmjfeoMk33UTTbr2VptzUgKY1
asT8ne3pycf9OnRgfgenouwLmzenKTffbEClNaZmTdr+9deKu/bSvKZNafVr
r3EZwidM4LymqvSQ75RbbqFxtWvT0aFDuT4WPvqoNR2kj76De9u2lGXh/zP8
u5c4B0LvQZ/Zr7NcGlQGDgTSMzIpPyePlgTvY066ZdFgXvMFY3UXAkgbeSAv
5Im8UYbz4vBSfDsJzxHjg3pdF0ffkjD2x/Oxoo8b+x0d1/v1Mf27otuz4CJH
cRwI3ax0ePzy5TT3/vuZgxY/8STrbnAg+/lCQ5XttJr1euzSpbzfngOXv/AC
zXngARsODFDcNVpxV9CIEUTBweTy+ef8e4Hii3Rlj9HBg2x3jatdh3a2a0d0
7BhtadmSxtWsRdELFxr5K5tx4wcf0DjFpeDLRMVdE+rWpQ3vv08BI0fS4YED
6UDfvtZyrXzpJZqmODL4v/8oQOW7/t13aOSVV5J/jx5EkZHk8/vvNFbxXMLK
lVzuOeqe5zd7iI4MHsxAWqfmzeN7mH3PPbTixRf5XsLGj+frtn76mZHvgAF0
CJysyoRzOZ2HHmLeR59h1csv0fDLLuP7KbDvM1zCHKjXQ8Zaj+MnTGZgu7g1
kkuKysKBGqS4KEXZZNEp6r5TU3ic7oJApY08kBfyLJUdexF+P1AgKDXOwoHg
DnAIdH7kzJm06LHHyampZXwQcTLq/Lhly2jmXXdRnOJKRxwIrpjbpIktBypO
GXPddRSkOIM5sHVrtpFgG25p1YooIICSFQeOr1ePdv75J9GJE8pmHE2jrr7G
sOuCgihty2a25Va+/ArH56Ac4KJ9vXoRpaYyb9LJk0bsjsp35SuvqHI0VWXc
T3T8OPtIJ914I3MRhYdzPuBTcCDs0Nn33kvr3nqL86aICAOqXDnKbgSvgVPZ
Dpw0ie3NoP9GwYFj5ItrFI/zuffdR2tef52vxRhrrrJhV6mygK9jFy9hv+gZ
8UGXGAea+W/s2IkcRwhguyx4sDLExNjbg9kqDYzN5SjkXiDotJHX+dp/woGC
Ko0SciB8nRjnyvTwJKcHH2T7iO21I0eYe8CRRdmBRXJgjRoGB4aE0FbFe7Az
vX75hf67+moKHD6cOWpc7Vrk27498yTG62YprsVYJPgE9tyoa642OE/Zo7AP
4YtcoexOb2XTwc/p3qYNl0/bgbPvvY8ynF0ow9WVfP/6i+1A9x9/ZE70UfYm
fJjaDpyrbFeMgwb8+y8dUYB9B38v24GKHzUHwg4EV69+4w3y/u03cmvbljx+
+onSt25lPgMHrnr5Zd7OsfhdD/TpTf9ddRUFwF+q6hBjmZc6B2ZnE40dN4lq
XFeLpk6ZwcA29uFYZeLAskBGOaPU5RUOFFRFFMOBHK/p70+pGzfyWNcxZe9Q
UCClKw4BB85TXJjl5U2n589nGw6+P46rdMSBynZE/Arzo7LLbOxACwfCpgNH
gFuQX8TkyTT5pgaGHWiJPcV43HhlPyEGxvW773gMEfEnOB6zaBFfB56ETxVj
kOBr2K8YY1z96qtczum33UbTGzfma1cqbkpCuRXH7jRzoCq7U7NmbCfyWJ/C
RHV+8OjRzKezFOdbOXDcOE4XvIh8nR56iBY0b26US6WD/bD7YFuiH4D7h58W
XI//lzoHwsbDvLFx4yfTdTVrW20/bRNiH47hnPONk6kM3w+82CEcKKiSKI4D
NfbuZd2+/auvDX/enj1sAyIuZPHjT9CpOXNp3z//GPMkdMymiQNXvvQy24nW
+QxBQXRI2VSIZQlSthxz4Cef0OSbb+bj4I6pDRvxGNqkG24w7EDFNeBA8DD8
nYiTwXHEpSCuBLwEew8c5texI3OadV4C5i6obcTmTFPcF/jfSHUvX7L/EuXg
e1K8hHw0B+I+YL8tf/55SlP2HOJ/ECObq+4R94ljVl/oxIls0x7s178wX+Sp
ygXeZztQ5c1zL7BfnYOYGOR/fOpU9pnazK+8hDhQz6OePHkGXVO9BnMdYvmi
YxIY2MY+HMM5OPd84hwqmy/0YsSF5kAjhiW+zL8pX5Eo7nvA55KGoxig8ng3
SxtTdLZvIl8UOAsHcmyo0tHQ8xirOzpsmMEZ+w9Yx8XgL8z19jHGtUz2jL52
2xdf0qhrrmG+K1DnZHl40Jo3XudY0xjEtxw9yuOBsM8wZwK/jwwcRBPq1WOb
D/MxkCf7Et3d2baDn3JSgwZ0sG9fgx8Vv2A8ErYdfJz5itNQPva/7vRlTgMP
zWv6IJ+PY7Puvptt2UxXV+YlcCCu1+OByAOxpDx/AlwKDrPw2rwmTQxeU2mB
l8GdB3r3oXzLGGCeso/13A2cCxsUtl6Wuj/EsMJ3CjsV5xZY5kheihxofE81
l6ZNm81rXen1tMzHsQ/HcA7OPR9dUBl9oRcbyiouVD9Xs37VscCY22DMaU+y
0aHnkpfW3Rr4rpI57/IE5j1iTkf8ObyntvdszBlBvZjnipQFzHVjriv9fmlf
TGnyQNkxh+WiXqegBHYgc5niFHARbLDDgwZzPCN0Ofx8GMeb/9DDxvggeNBi
01jjSleuYJsRcZ/zlT05Q9li4ESM/bENp65BfCfSxtw5nuu+f5/izi9oULVq
5PPHH0YsCcbSVDncvv+ehqj98E9ivh3bVoqnohcsYF6FzxLzH+DvHKd+7+nW
ja9f2PxRnuOQBc5TnArbdbBKBzYZxgM9fvyRhqnfiINFmrBLFz/5pHWtuDzL
OjngNcx/WPT44+zHxPwOjO1NvOFGzhdAGTjmVXEnuB12IvbDrh2ttmcr/o2c
OcOmvi5FDgTwXmOuWFHvOPbhmP5m6vnkIXZgxXEgdCp0Ifoy0IfgA/Cd9m3r
efRY82Xo0JG8BjZ0Js7D/3OZ445rcpTeRl56riDPKcwmPlbePIg1cg4dOkqn
TsWUiAfN96y/DRwRcYqGDfuP1q3bbPNN4dIA+ej64f+5xv98y9xKHMca5lOn
zTwn/i6Ewd0o+/79Ryg8/MR5plMJUBJfqI6PUfp6X+/erP/BfeCgQwMGUvr2
HTS/WTNlnzWjlM2bbea8MX8eOMBjhbu7dOFxP1fFYTwvUK/tov6Hjh1Luzp3
LhwXU/swNx5jdDyep/LmYxafJ3gRsSra90qWefbIY1eHDmwL7urYkbx+/dU6
HoixN/8e/xjpqPNhcyJPzFfAOCbOQ34ZLi6crn/37oV5mNalwT35d+/B8yXA
vbAbMbcQPljki23Ms4hZvJjLtb9XL+P4Xx34P8qB8UzY0o7WfrvUOBDQcaFF
Hb/U4kIvRpwPB+K5gd9OnDjNtnzbtj9Rq1at6ddf29HSpSu4XwNdCR9o88ef
oGqqjzme/eH5fA3WFcU6avr563l/5ragbUxs4//oMeOpZ88+1H/AYBo4aAgN
GjyUZs12otMqD3CIeV5+TEzRcxF1PmZfpH2+Z+4z7Fvoe6x78/Irr1PjxnfQ
6tXryVjTJsF6naN8cY1xz9EUFRXL39OYOnUm1wu+nYH1UDU/6rwc2bjmejLn
pdciACcPGTKC+vUfRINQRwqDBw+jnr360vr1m3gNHsSjXXvtdbTTdw9/w9hs
I+o07fPV+aHssCGHDhvJ6WDNWL0mkPl6+zSszzg2scJ8wGegiLXSiuRBzJlX
ut2tTRvDZ4h5B4qfMFcCth77LZXNlWfvE4UvEWuMYv47fJcKZv8ffKY4bs0f
ecG+Cwoy1mGzrAuj43R4P9Iwx+/ApkQeKn8rcJ7Kk48jrgY+VX0++BfnWPys
vHYLfus1zuDzNedhXqNNH9PlMeep89VzKC1zIqxAOdBPKGqNVVkr7ZwhvtDy
50C9XmhwUDi99fa7VLNWHbquVm3+5lH1GtdR/RsaUJ++A9jugc9w8uTp1KbN
T7Rr9z5eF3vmrLm8fuh33//Itgl/Tz41m3UptjU/4dr0tBzr9wbxXUHoXeR3
bY2adOVVV1Ot2nX52/LHj5+2cG4CpwFegq7GtbrM+I9y6zz1edo+sj8H+et9
4HvwOo6Bx556+jm+zxUr1nAa4LDExHT+fiK+bYFzcd3p08Za4LMVV+t7xj2l
pWaprvAR+uHHX7hvoO9b9y2yVRqwpwvXzDHKgXRxPcqLdXlwj/iv1+wJCztB
DRs1ttTRdXTV1dW5rsC1P/z4szo3g7p06U6dFVCnuEekiTTi4ww7Hmna9ymQ
n/bZYK0f9EMu+98V9FeHznyN5jwcx/WoE5RHp4FtnIf7wXPCceRZ0eOJ+D6B
wzWzHfEg+AzjY9DrmN9tWS+b5wqq6+GvdOhPhS8R35qAfsc15jhIv8JvUdhz
gTGet/PMtBCb4uh8tc8Gpuv1PkfnW8uAuE1LPXB57fOwwHws31G+lns15+vo
2JmQNbOFAy8eDoSu++mnX5Wurc3f/5s8ZTqvE9qnzwC67fY7OeZ3+ow5rA/x
LaTt2z0UT51SNmCU0r9/q+O1+JsQrq5eFBx8jK/FOqJHA0Ot/BQQEEIbNzqT
n58/6+sXX3qF19Pu1u0fct66jf2IWEsbur53736EMWXoWNhbq5R9Nm/eQnJx
caUE9T5B10P3HjwYQOs3bGFf5vHjUbRy1TpefxT2quGnTSX/fYdVvltVVzfI
yoO+ymbatNmFQkOPs92E7/iC81euXMu8B30eGhqhbK3NtHDhUnU/vpxfYmIq
+wvBO8Y9v0M7dnhS+LFIdU/RXC979x60tOUUrtfdqq+wQKWxaNEypXIPMXfg
GPgE399w2ebGZdiz5wDNnbuAvL39mLPAwfA3P/Two/wM0A9ZuHAZzZkzn79n
5ermxd80RtkA8CrqAOuSG7+TOW2sZ374cKCVW5F2tPqPesP3r1CWkSNH0/8u
v5LXfzXGMoy+g4d6jqj3Vape4S9NUXYm6gF1g+e7a9c+7i/Afvbx2W3Tz6hI
OPp2UlH2oL0ez7fYaeRozVBBySHfThIOvAg4UNuAhw4F0v0PNGVOGjFiNNs6
0HcYh4JtUO/6G+j3P9qrc9PpzbfeZfsNfNFbceTlV1zFvHlr49vZTpkxcy77
Uq+8+hr+rqC2F/5s35H3IT3w0zPPPk9169Unp/mL2RaB9FV6HnZOi5af8LcK
1ykOav7YE5w/Yo4b3HwLtWz5KR09Gkq5ufmcPjizdesvOT1cCy776KOWrLNh
6/zxZwcu45ChI3j90ijFNx+q4+D1WcqGBTc8+dSzfO/4xhPOma/K9ECTB9ku
Rfo339KQv4OB++/YqRvfJ+658W13qLSvpEWLlyse2MD22muvv8WchnqFr/d2
xV+oL+R3x11305Ahw7lOUD74TfE94q++/o7tStwnvjM8afI0thvDwo5T06bN
2BYEx5gF44J4brj+jjvvpiBlx7u6eqqyNuLvcWDNc9jxuC/Y3M7Orqp9ZHN/
4f0PWvB5qC/UG755hW08o/T0bH4+8IuiTNdcW4PL//QzzzE/41nBDkZZ0Y95
86132C79o91fbO9W9Lp3Dr+hey6Q7+2WGvINXeHAi4UDYReAJ9au28i69557
72M7JjkpQ3FFHJ+Dfv7hI0HK/olk/fb2O++zrgdPeHh6M9+Ad557/kXFYQPp
SEAwx2hA50NHIg/YfU88+TRdX/9G9jeCE6FTscYQbCQIuAffsa9+7XX0+Rdf
sx8Q314CD7X6pDXbKk8++QxdXf1a9jmCn7t07c5pIv933/uQ2v/VWd3D/VRD
2Wjdu/fkNMHdRXHgzJmFHAh9D3sGtt7jTzzFnN6zVz9eCxDlAEcsWrSc3N09
6cOPC++5X79BbGMuWbKCvzv1yquvM8fBpqtVuw5/N7jHP73ZXkYdgztWrV7H
9hc4EN+SAkeB/1G39a6vz99gRF2DJ5tYOHDCxKmKg3axbbdtuzvXKWxrMwfi
mxy3KV5Gmvgm8oAB/6p7eZrvFd+6An+hLLgXXNfuz7+s37/C/f/2+5/8LDBW
C97Dd7LmzJ3PzwX1/OxzL6q2kc73hvtvdGtjat78Cfr5l9/ZXtS2ZkXrEebB
6HjKCAymXP99HJchKC/sYf8n7D/xgVY8B0pMTPEw5n3ms78P9gJ0Mnx9iQlG
jLyOzYBu0/oN33wHd8Efp78zf43iJfAWOAbpHThwhL8pDx4Bp7p7+LCefezx
pyjyRDTbSc8+9wLrXXxDac7cedS1aw/Wy+DASZOns50JO/Ghh5uz7QKZM8fQ
vbBZT59OoF69+7Guhi1y8lQMnwO9X1vxJvYlK65t374TXXHlmRwIHjdzIO4f
vlT4AsEn+BYiOCgkNII+U3ZmdWWHDhgwmPOYNm2W9Z7BxRBwAPjt9Tfe4jr7
vs0PbLvCtoLAj/z998a+Dh26cP3i3sAt06fP4nPg84V9BhsUflrEGWEb9Yj7
Rvo4H1y7aZML90vwjcc777rHwoGefC7qce/eA5wmxvrAeR+3+ETlmcL9CXBi
9x69+Dhidt7/4GOuR9joqA/cA/i7k7J5j6o+zebNLvTQQ49w/i4ubuxDRTlQ
tj179rNNWln8oGYeZB8cxj9VuxWUH+J03VeCdnCxQezA8uXAQjtwE9so0J3Q
afDjwf7T54SFR7LdoTkQOhgx+fmKVEaNGvd/9s4DTKoie/u7usH/fu6uu7rR
VTEhIJJzzjlLzklyEiRIRpAgOUeRnEGiZJAkOagEAcmgGFBUQAGhvvqd7mru
ND1DamZ6mNPP8z7Tc2/dCqeqzlvn1KnbVn/+WXQr8ZLw6k+We/Ad/u73fxSb
AbvwoYcelv2my5d9saT44CgTnvvdH/7o83VaPY9N8fPPV0z//oOFD0uWetUf
w/mT2b59d0Dn4w8lXpJ9rHbtOoruxofHniM8gm3Fc/ANaYh9xH96xtaRPIPt
QPGFWhsVThs77j2TLVtOuUZelEebiV+lzdTNtZmYGmJCJk+ebh77++OmQIHC
IofiJUpL/Xl3BLwK3uk7wPz+D4+Y6jVqyXOvpEgtNh77nLxXYqflLfoAWxZO
cxyInCpXqS62ZLPmLYVX9+zZJ2lI7+XA/z75lEmZKo3w9+XLv5rx4ycJ32Ov
s4eLPU78D7+LTD9js7JuwFZu1aqt8Bh7kJQJn9J+8sTvC++xr8lagb1j1hnf
+uOPIsH+ixbYI4rYwbfO9ouc9VB8gnJg7HKg2w/El+f2Azn7xwducP7Jf/37
SdG9pC1YqGiAA/lwlgI7o2y5isIF5IstyJ4R12vVrmsqVa5mHrPP4Gt0HOi1
A4ktJd50+fI14iPkHNywYaPMX//2d5PVchF2Ix/uwxnofeI/+I3ePz7yf6Zq
1RrC5XzGvTtB7NRs2XOJPYZtA++079BZ7hNr4rNz/iZ7l44Dn/jnPyV2hpgf
OII4FPZGl69YY8parvvjI3+S8xviKxw4NNBmuA3ehAPh8/z5CwkfVKhYRXi9
m992RJbssf3B1rd+g8bCz9jdtGf58tViS+2w6w84/gYHfiUcSBribfi4M7r8
pd9IG8yBcBi+ZOoFz9NWOPnsl+dkDQMnws18OKNZr15DaR9rlO/sOiJLluxi
87HG2Lp1l9h+xMBw9pE6TZk6U8ZAocJFpW/i4kynQvEgQjkwdjkQuN+1bWD1
MrYRPsyhln/WfrjRdOnaXfazsGdGjRonuhcdij2AfeH44DHLVexhYVsQx8l+
H3Yae1no56eeftZkzJhZuA+fmYsLfeIf/zYzZ82TfOBPdzaN5znvBg9hh8A9
W7ftMOXLV5I6Epfzyy9XJSYGXf3UU4mEa2bOnGNy5sojOr9qtRq+/a83O4qf
L3uO3MI1ffsNkjaRr+NAFxe60tpjzgebwdaXNhDjyvfH/vaEedvPgQNsm//q
b/OMmXOFA7CP4HTiY5ETaZEbdtfixcsl3oa4V+qCfJEDvtBEzz5nVq5cG+BA
Ym3gPceBPIMcsG85c+LeGcPzcCBp6TNfTMwmsdfYo8NPCgfST8ioePFSIt8m
TZqLDFmDTJ02U+xj5PFvu87BvvzVcjXxLXA19urxE2dkXVC3bn1TtFhJc/Dg
MTNjxhzJs2ixEoFzlsqBCsW9Qzkw9jnQnd0j3h0dB3+gp7GFsGP4C48QKwI/
EQdCHCCcyAfb43nLczyHz5EzFO48WcOGTYVb4IaWrdoYzjtQJhyIbv/Nbx6S
vT84g/Pg3rPZ2DlwH3yLzkbnuliOJUuWC79hV1EuvPef/z4l9h5p4QzONVy5
8qtZunRl4Iwd91zsz29++5AZPny0lPNSkpfFF4gvlHoQE0NZcCF2VeLESaXN
HTt2kTZjk7k204aZM+eZ2bPnSxr4kjZwrgGb+U+P/lnsUuwmYnVKlfb5dk+d
PitrA2SN/Qlfbdu+27b3HyIv9kBZM7j4TWww5OTO0GOTf/rpZ5L2b48/Ienx
qcK7zyR6VuxAbE/sa+qVPXtu4XvOVLi4IXzQ7NPSXtLUqv2a5eLrZvfuveKr
xsaW/K0ciH+tULGy5dFfZA+Y9IwF5UCFInzQmJjY50DgbC/2seCF+g0by/5T
4yYtJN7RvSeGdOyVcW5w8+bt8gz8uX79ZtO7d1+xxbZs2SG6VuylAYNFh8I7
cJLT4ejNYcNHSRwpsY7Rna9Gz3M2rY3luiZNW4hvbtu2XVIuPMvZA7iL/SzO
BbzxRlu5xnfq7LgUzoQv4eEVK9ZKTGuHDl3Mpk1bpf5DhoyQumPv/PLLFdl3
7GbzJCZkrrULFy78wNqcHeTs3YULv0Rpc1drKxP3s3v3p+Kb5X0xtI86sic3
ZOhw8ce2sODMA7E7TtbsK/bo0Vu47IL/TCK+aM5KwpHYfPhjScM7YbzvYGON
4d7PRrwPfLl//2HZs+xv5U7+1JU2Ui98os7m3/TRNoknat2mnfQLsaa0D1nj
K+ZcDDYw+5fYjcTf4v9kDHB2gj7jvOKYseMDZ+7jWncoFA8C1A6MGw4ELgaU
/SF4Ax0LZ3nfF0o64huxwdDj7h0wbk8MXLp41erPz2X/jbN92DklSpaW89yu
HPbNKcebT3R18r4jBn8hfEm8DvXi/MNvfvuwxMTwob6++kd93xfXyYNnXJu8
ZZPvdWszufepcJ1r5OXePeP24oLbfM3/HCBPnnF2kZPnJZsH+fDdvUNN9j39
z7uYSt476uTI/VBpvPIhL7nvT08a0lJ3VwfaQr3ce7VlXfDTZamL1M2/t+jk
RywDsaLk5d4B7n0v99dfe/M0ca4zFIoHCfr7gXHHgSD43Y/BvxsB3O8WePUx
6biG7SH+NmuH4QNln6lc+UpinwS/RzpUPqHg3lfpfZ8mf3/++ZrpZu1CfIzY
gZypd3GpwTGK7n2j3ue9ZQf/731PpnvG+x5Ob5vdc8Dt1YWSZ6h3d3qfd+nd
tejSBMObPtTzoerlbZ+rW3D7vHUP/n2mUHkqFIp7h/pC45YD7xU+++Yn2e/D
n8geFfZkuH5HIepY+dH/7urT8lf9cQqFIr5DfaHxmwNv9KPvXD3cx//36+wY
vkD37tC4HrsKhUJxr1A78MHgQHCvv6N1u9B4RIVC8aBAOfDB4UCFQqFQ3BnU
F6ocqFAoFAkVyoHKgQqFQpFQoRyoHKhQKBQJFcqByoEKhUKRUKExMcqBCoVC
kVChdqByoEKhUCRUKAcqByoUCkVChXJgeMDvHH3zTdz3p0KhUChuD+hsdHdc
88eDgIsXf/b/bkDc96tCoVAoYga6Gp2N7g4nFyTEmBhfu308yJoC21qhUCgU
kQt0NTo7If7WUWwA/7JCoVAoIg/32x6Ka/5RKBQKhSIukFB9oQqFQqFQKBQK
hUKRUKF2oEKhUCgSKpQDFQqFQqFQKBQKhUKhUCgUCoVCoVAoFArFg45Ll35W
KBSKe0Jc6zHFnSOhx8Qwbi9evGQuX75irly5qlAoFHcNdMqFCxfjXK8pFLcD
uO/XX68ZPt+fP2++/facOXfuO4VCobhjoD9YS/NRu1AR6YD/+Jw584Xp02eg
KViotMmeo7DJmauoyZFToVAobh/ojew5CplatRuZ5ctXmevXr4uPTXlQEYmA
/xiju3btMfnylzQvJk5rUqXOYVKnyWmRQ6FQKO4YadLmNC8nz2ySJE1vuvfo
IzYh+kZ5UBFJ4Lc3rl791Zw+fUb4jzGbOUt+kz5DHoVCobgH5DYZMuY1GTPl
M8+/kNqMGDFWfE0XLlyKc72niB4JLSbG+UD79Bkk9h/8ly59boVCoQgL4MM0
aXOZLFkLmOPHT0jMwaVLyoOKuAc+icuXr5rz53+Q/T/8n4zXuJ4zCoXiwQK2
4EtJ0pnx702WNfdPP2msaKQiIf1+IBxI/DLxW8S/4MNXDlQoFOFGpsz5zQsv
pjbDho1RDoxwJCRfqONA4phz5CymHKhQKO4LMmXOZzkwjRk5cpxyoCJiEJUD
iyoHKhSK+wLHgSNGKAdGOhKuHagcqFAo7g+UA+MPlAPvngOJg/YiOK/g+8Fp
+O5iqUM972KuQ5V7N2WEuh4KweXdblpXTsZMN7clFEjjS5/vpry8bY+ubJcm
VJ29crhVP92oS96QdQHci+75mPrJXY8uTSg5347cvW0LVW50/XC7dY2pvFu1
KaY2RJc+pvJu9XwkQjlQEYkINwe+kiKLSf5KZjljmPyVLFHyS5sul1zjvgPp
SON0A2mSvZxR4seSJssg97z6I0XKrCZV6uxR6sgzlMtfbx1ulJEp8AzgO2d2
X7IgP3c9Zapsktb7rIPL2+FWaV39SENbKC9lquwh9bNX7wXqZp+hHV6dSpmA
76HKde2kHP5Pnz4qv5Ofay8yBqTjOmeZvTINrgt5u3yczOmfZC9nCuTh2s2Z
MJ6lrFDjw40J157oxpsvTXYpw6XhWd/Yurnt3AseC7fTD9TBySW6unI/lKxD
pUsZzfhExm4Me/Pyjs3bmSeBOea/F198N8qBikhEuDiQecs6u1r1hqZ2neam
7mstTNVqDU32HEVkznM/S9aCpkbNxnLfoU7dFiZP3pJyH91E7Fijxm1Mj7cH
mdZtupm8+UqZ5H4uSJsup6lQsa4pWqxiQG+4fKtVbyR/qUulyvX8+TcT1Kvf
0hQrXknaRl0KFS5n2rXrYTp17mNeLVtDrqGfyrxa3bxW73V5pmatJqZW7Wa2
fs3lO21zOp60pcuQtuVNaWvUbCJtEP1o09d97XXTvcdA82b7t02RouV93BSN
zcW9goXKmvbte5ouXfqaipXqin6mPFdmyVJVJH2t2k2lPMqlfF87W0k7AXL2
8kAq2/ZKVepJe1OnzmFatepsWrzeUZ6vUqW+yM67HqAuhYuUl3pTf+RCXpyd
4W/mLAVMmzZvmcaN20rZ9IvjTeRcvEQlU658LR+3eriYsmgjZZV5tYZtT9WQ
53EcR9LeJk3bBWTAWGHM0L/IoGatplI+9StQ8FWRffUajaR+wpmpfbx4cz/4
xhR1LV2mmpVLTR8f2zaQnrYwfimPNGXL1fSXe/OYqlqtgclfoIy0vaKVQ/ES
lU0Km1cGf17UiXmRLXthaUPZsjWl72hDjRqNA/JwHHereVK5Sr3ANZ7PnadE
yPVGpEE5UBGJCAcHOl3CHN376VGzb98xs3PXZ+bTT4+Y/fuPm2bN3pT1d4WK
dczBg6fM3r1HzZ49hwTch/MSv5RW9OHGjbvMkSNfmk2b9si9zz47aRo2ai1r
3nTpc9nru82AAaPNi4nTiG5h7qPXSYtOpT7bt++TcnbvPmR27T4o+b3zznDz
/AupTNOmb5pDh89I2aQ7fuwruYdN9O67M8yhQ6fNbnvvsE1DPT/55IjZtm2v
6Blnk6Irx42bHjItecL7vCtx2bL15vjxr81HH+2x9z6XerS3OtjZd05+5Mk1
qduhMyK3bVv3mhMnvjHvvTfLZ7dZu2PO3KVmwsTZot937Dgg5VEu5dPWzz//
wgwaNFb0/dmzP5gGDVoJl1HfChXqmNNnvhMOgM9Je9DWf8fOA7a/jpuPP/7c
ckdjv02UzbR7s7vUlzKoP+1YtmyDyZe/tMiqfIXacs319YEDJ83WrZ8K7z37
XEozatRks3zFxoCd59ZIyP2tt/qbZxIlN/PmLTdTprwv+YXy+/Ls/AUrzcmT
31reqmDHSDrTuElb6Wvkztign3fZ8qlrqze6yPros4Mnhdew1VhDLV0aqh96
Ck9RxqRJc0UeJUpWCXBJ1myFbJtOmJZ2rUD9ltq+PHr0Syvng7a8G2OK9Mig
Y8feYmeuXLlJ7ufxjxdQuEg5W+djpprlVPp56dJ15ugRX170H3lNm7bA5Mpd
XGze8hVCzJMDx01925/kt2PHfmk7cqc9Bw+eNl269g1py0YSlAMVkYhwcSBr
YDgQfdDUch7Xc+UpbmbNWixzmXdElCtfW+5jp6HHmfO5chUT3Ui5K1ZskrnN
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
rD3D3mYJa19hG+NXo95wFuVQHnGhJ62corMDiU8kTkNiJfx1dv3EuTvKxT7y
vufE7Q9SX+RH/dHhtAeuxn6BP8mDPnX2kPeMdxbbD6xfSAPHELtC39MuF78y
216nj0nn+onYEHj9aysH4il9/Z4zwB2cK4Brse2nTrNtW/lRIA6EtrDO8tWr
prSfPcHo+sH3G+eZpGzil13/kR/tv3jRmJYtO4vs4TlimdDhrq2OA7H1iNmC
y3fvOWht4Any3Z0TnW/XIN9/94v4kMl7g7UpZU/AXt+8GT+0b8xji8NjrPcY
o1HmycpNcl6RMo8d+0q41b3jAM49d+6SjDnnv45rvlMOVMQXhIsDmZvoYdbY
7O+7s1Hsc3Cej9gJ8ie2jv/xBRH3x/oV/4+zA/BnEoM+bfpC2Vdhr4pzaa4c
dCe6sXfvocKvxLXUrt3M6sWsgbiLjtYG4czDwEFj5C+6i/gPdz6duAb0IXst
Xbv1Ex5z7fbtW+WTdlCv6PZYYkrr9pyoZz9rO8C17E1iU7h3mYSSIzLgrCR1
g9+RVd78pQLnp3me+yn9569pM7qeGAzvGX4vr2I3oceD3yng+ilUDEVa//kA
yqPe1J920B7Zo7X3iVPpYfNw5yaDOZ18iffo0KGXzWOmxHVgf6eV2M6cgbMf
A/zjgDEx3PYTthnn9ukX1x7Hb5wb58yLky/PY3+7NlCPG/UqHuDamPqBZ7H7
sM3dniH3iH3t02eYKWVtNPLg/EKtWk2jnGlxZ+m72brig02eIrOkY00nvme/
P5vzD+QlMStpfO8nGOAfn/jAiSnOlq1w4F0NrFGI571pntj1H3VjP5XyyJs6
4P9grrDn7eoX13ynHBi/kRB/PzAc70pjPrKOdfEeTi/hI+Ia85s4cxfrDVgv
O+5wetv3bq7Mcp+9kd69hwXe1+HeRYItgj0kaT3vXqEOvth1m7e/DM5G+GwF
Xxrn33PvAQsVS8L124kxiC6t1DNVdrnHep2y+OvkEt1awpc2g//sRrpAf7hz
8tgtXp6jXMqILr/k/v3WUO2LLobQXfPWW9J73jHm9v3c+7+iWyNgizlZY7t5
86du3rHgzrDwDheeC84P/e7aGl3bgusVUz8EZB5CrjJWrf3n+pX+CH63gQN1
defTk3jSOQ7nPTjk5fqS8t345Doxrt4xyNnHl2KYJ9zznoenHHdWQ/cDFeGA
+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
Y2L0t5MUCkV4oRyoiEQoByoUitiAcmD8gf5+oHKgQqEIL5QD4w/UF6ocqFAo
wgvlQEUkQjlQoVDEBpQD4w/UDlQOVCgU4YVyYPyBcqByoEKhCC+UAxWRCC8H
ut9G9b7TSqFQKMIBfteDM/bKgYpIgpcDeU+W+61S9+4shUKhCAfSZ8gtv/U7
fPgY5UBFxAAOvHr1V/P119+Yxx57zDz88MPmd7/7nfxVKBSKcOGRRx4xDz30
sOnUqbNw4I8//hTn+k+h8HLgo48+an7zm98oFApF2MHamr8dO3ZUDoxwJLSY
GMeBf/7zn2WM/va3v43z+aJQKB4s/P73v5e/yoGKSIJyoEKhiA0oByoiEcqB
CoUiNqAcqIhEKAcqFIrYgHKgIhKhHKhQKGIDyoHxBxoToxyoUCjCC+VARSRC
OVChUMQGlAPjDxLa7wcqByoUivsN5cD4A/WFKgcqFIrwQjlQEYlQDlQoFLEB
5cD4A7UDlQMVCkV4oRwYf6AcqByoUCjCC+VARSRCOVChUMQGlAMVkQjlQIVC
ERtQDlREIu4HB/L8Qw89dFM+/B8Kd5JvqOdceaHKjKk+wfnGtY6ICa59MbVD
oYhkKAcqIhH32w6807yiS4/uv5s8gp8L5s57ra9Cobg9KAfGH2hMzL3xwN/+
9jfz8ssvm3/+85+Ba87W8toz/KammxdekM573dWHv4kSJTLPPvtslPv/7//9
P5M0aVLzwgsvmD/84Q835UdZiRMnNv/6179uyhM888wzkm9c64iYdEeOHDlM
7ty55S/yDUc/KRSxCeVARSQiHBzo0qObJ0yYYD766COzceNG8/HHH5vevXub
Rx55RMb/7NmzzaZNm8zatWvNunXrzLJly+Sa4x/y+dOf/mQmTZpkevbsKdec
HZc6dWqzZMkSs3nzZrNjxw55juv58+c3u3fvNhs2bDDbt283q1evNmnSpAnU
7aWXXjKLFy82O3fulHQdOnQwDz/8sOT797//3YwePdrs2bNH6jp+/PgAb8ck
A69PEh4Hwekpg+v8DbY9o7vn/nfrA/e7248//rj54IMPRKb79u0zefLkCaSP
Lt+41ncKRTCUAxWRiHByIPzRvn17kzVrVvP888+bli1bmqNHjwZ0du3atU2z
Zs1M06ZNTYMGDYTr9u7da/7xj38E8mjdurX56quvzNixYwPX/ve//wmHTZs2
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
cz/++NN9l1+41i7ffvudbcv397SGgf95ns+1a9dERu5zv3iQ9sdW/H2kzmFF
5IJxf9Xy3tbte0y/IWPNoc+Pyfr4fvMg+V/79ZpZsGSlKVCyukmSNp+ZOG2e
zEX0U2zK4CdbHp+xE2aYrPnLmbNffRMrMrh13/wsa4SDh46YzHnKmEl3KR/a
gR66cOGSKVutkXm9XXfp87gee7cvhzvTzdiNtBd92LnHQJMuR0mTq3BF8+XZ
b2Stt27jNlOi/GsmcarcZujoSbeU6b3Kj+fudiwJl1vOgneLvFrblKjwmrQL
HrvTPN1aFx4fN3Gmada6m6nbpJ3p0nOQ2bx1l8jhfox5+u9+z6VIncOK+IEr
l6+aGvXfMH97KpXpM3CUTycE6R3GMXM58P029JLzsfzys/O/+J5xOoX1edb8
ZU3B0jXMhGlzzYGDn4tuCR63bg5d8P9Fxzm96PSL8+8EP+PNh/9DXXfzZ+io
SeblDAXNF19+FaiHrw0/3/S8K8vVK7jtztf0y883+5qC6xCqXnzHN81afe/+
w+alNHnNqHenBvS1V55eOYSSv7v+ww8/mbzFq5g6jduZqx5/kfdZJ+Pg+iAD
14bgsqNDsM+N706WN/IM3UcAG27v/oOmZMV6Zt7CZeZXKwtvH0cnY64jt9nv
f2CeSZZNdP38xSvM+R9+FJkWL1/XZMxd2oweP818/OkB0ZUXQ+jK25FfqDa6
8QhPfWV1cblqjc17U+bY9gTX/0be3nEWLA8f/1401V5raWo1bO3z5XrnxS3G
ortHO0+eOmMq124ucslVuJLIInnGQhYFzdSZC4Qjb9Qp5j6/GGKsXPB8p97I
rGaD1qJX8FF658HN7b8Upb5yzVOuK8fbTvdc8Bw+feas+cW/Toh+jt5G+Rdv
b6zHZ8T1HlRcgj7GzkAPZMlX1qTPWcoULVfHrhPPy9rT7cMwDtyHcew+Me3T
MIbcBxk7X6srl8+x46dMsnQFzLuTZvkSeuafF85v4z74a11e7h76xV2jPLlu
r3nzcT6gX4Ouu/kzfMxkkzJL0Sgc6G2D8xtd85dFPq5eN9rtrfP1QF3E1+TX
Z8F1uFGvG7aFlOUTmeWBQya5nddj3psu/+MTdXVxe12+71eizGn3cfXhfoFS
1U395h2icKCTKTrS1Y2Ps3XIC/8hH+oa3Obo+v9GW2/kjUzcusjX51HzcW1x
9z/Ze8A8nSyrHSMzA/3g2hhKxj595+vP0XbN8HKGAubbc99F6cd0OUqYt/sO
j/JMqLlxK/k5npNm2Hpc9Y9Lxod7/vz5H8TH0XfwGF8el6PKHVmyH+7yCGXz
unKYQ4DvVy7feiwGt4f8O7890DyXPIeZaNecjlOOHD1hSlWqJ7y455P9UgZr
hej63NnZrm/dx7WDa9J+m88V2+/Y4Y1bdgnci6Ifrpuoc8TffjcOrvnr4GRL
OwPj/fINP+6Pdk7wGTF2ikmRuYjsrbj+du0IXmPeTvlOb1H+5QTMFQ8qLvh1
f/+h40ymPGXM4JHvWV1byCxduU6uu3US42Dnnk9N116DTNW6r5s3OvQyK9ds
lHkRKl/mCGN33catpl2Xd0yVOi1M8zbdzPsLl8t95sHiZWtM9XqtTLqcJWVd
+vqbPcz6TdslTzcOnb7rO2Ss+EnXfPiRafx6Z1OvWXuz8INVknbW+0vsuryt
aWSvT5u1UMbumS/OmjadepvFS1cH9BHX4bY3u74j/ld3nXK8HMj84Xl0HG2Y
PON906xNV7P/s8OWs0+bdp37iC+N67UatrFzu5PYGG4f3rf3cdnMnrfENH2j
q6li5dW+W1+zafNOmW/fW53Y/q1+tv6rA/sxJ09/YeXUxyxbtU6uUfaRYydN
6469zUdbd5qjdq2Q1OpRx4Hkz/4W8712o7YWbeQ7+0Vwmeg722c7dn1qOnTt
J33WsXt/0W+scV5r+magvpQ/c95i08Dq9er1Wsp6ZM/H+62c+pot23cHdCv+
2B7vDBNbpNHrncTGQjeGWkO6OBT0KLqWvJFV/yHjxNZ3+mjo6Im23pMD/cy4
YD3WumNPc+Czz+142CpjJ0OuUqZSrebSp9t2fCx1In10MsZv2Kv/CFOmcgOx
95q27mp6DxhpPljxoWnSqrNcq1CzqWlq+3WpvUb7LgTZALeUn207/fTDjz+J
jdeoZWdT27ZxwLB3zaHPj0sb167fbBq06CBzC1vw9Te7m1VrN0o7pf5WhjxX
rW5LkS0yvh60Drzk5oH9O2TkBDNy3BR5nrSM5ZjGohcuj8q1W4j953jhJz93
sBfSvls/s/vjffJ8dH1OPvQ7nNPl7UFm0bLVZuPmHXIfX1LfQWPMiZNnJM+d
e/aaFu26m6x2fV3Myo2+WrJsrfQfeSxd+aFp3vatgHx32fS0H7757OARGYMf
btgiYxJd8WaXvuawlS37faxhuEa/b9uxJ7DGGjZ6kkmTvbjZd+CwjDfybt7m
LbNi9QaZ826fkHmCnou2fNt28l794SYz3pZP/y1cssqvF2N3r0Zx/8A4RF8W
Kl1T9CjzOXPeMqbVm2/LHHC+uPWbtplUWYuKn71l+7dNgZLVzJOJM9uxMVvG
TLCfjw/zhfUva+4a9VuZnIUqmkR2ncmc4gNfFX21ttVvpU3xcnVF161auymQ
HzzKupK9j3wlqokezJLvVdGF1COtHecN7bxLk624zNF8xauap5JkNVNmzpfn
shUoL/sn3jrNmLPI/Ou59GbugmVRxrKXA1/JVFg4kM/QURPN00mzmk7dB8jc
X205mDZlK1BO8kdm2QtWMM+/ktPMnLtY6o7/Bd3wtG1rnqKVZZ6mzlrMJE2X
3yyyvId+4Tr7Sm4tyrP/tPVCh7hrtOM/L2a0HLjLHDtxWsrFd8fnG8t1tPkZ
ax+VrlzflK5UX2wlnmevh/m9edsu0QWUW8muMfIWrWKyWbllyfuqadiiU8Cu
QKc+83J26Z+qNs/0dk2S38r7hZS5RbfzQfcjc/yxlawOzVusqvlfkiymV78R
AX0erG+ReROr87At2O+t27id+Kgy2/LJj+fwgZcoXzdKHy2ya5t/P5/BLLP6
Cb2Vv0R16ftidozQ5o0f+dZJ9ElIGdt1D21jzUW58F256o1l7cKYLFe1kclk
rzE2ytdoYubZdZlb77l6sPbZsm13DPLrKP14wc6PalZ/Igv4lvHwYqo8pnCZ
WmJ7rlizwdpX9W0dykh5FS3v0j4+3XoNNk/ZscW4Jf/EqfPKmGKt9atnfeY4
EB8C/cJ+IJ/V66Ifi7Ps2oC1QPC8xKTpbMfmi7Zv4U23BvZ+kB198+m+gyH7
vKftc8YN6y3mYL7i1UTG1Iu2PmttTP7S/u07P7bztZmsAWhnWSv76XYO8sGv
T1rqDge9kqmQSZWlqNlg18F8WGMnTZdPxkte+yxpXrIywi8OH9EX+FhfTl9A
9ML+zz4PcCD5wLmUy5ihnolT5zGz5i4x1/y29Nj3ZtxG+fltHqVN+lwlTaEy
Nc37i1YoBz5AYM6zEoTfnk+Ry0yYOlfGRuuOvWTMwANOT7I+ZIx84ecG1tlt
7Zqc+eC1A9z6/6uvvzXZ4SCrC7BhWFfxTH1rvzFv0S98mGeMs/GTZ8v/3vp5
OZAxn8raZ6wJ+bBGy2F1NjYrOpHPiZOnZc4y5vlgFyVNm9+u7faJTmGdiO7K
bXUmefr8hr9E4cBhYyaJHci+EXzzzMvZzHB/zITxyyq1XQtUqNFUbEo+nx89
IfMUDufzobV94Q/WvJRzVdbsR60OqSLrb/hp4PB3hbvPnv1GdFV7u95Nkbmw
pME/jMw7WFsRGVJvbKdkdq6P9O8HwluJLG/NsNzpPsTLcG3y9Pflf3gBzlm7
bnPA/9TJrnXp6yatuki5O3fvlTS1rC5hb5Z0x60cy1RpYJLYfhFdaj/YPSmz
FDHbd30i//9i+6WltdupE/K9fu1alP0wPnMXLBWOwvfmfOnoRMprZddRlAU3
sabxciDcR5r5i33chC2G/gr4y+0H2+eFVKFlnMcC/cyHNQx6jXUBH7gN+yVN
tmJm0PD3Qo45/jLu2HdLHoP86KPDnx8T+2vqrAXG7zIzy1evl/6f6e8bYjOo
A74W99m0ZYdwXlvLy86nvdnOCcp7o4NPNm5/0suBZao0DIwzbK9U0YzFatae
D7bP6QPm4b79h4XPGCsFS9aQtQTr0c+PHPdzr2/fEPs1ZJ/bcYF/mnSsMegr
t/5j7o9+b7qszZA9H+xM5iW2mPsQd8c8YlyxzuaD3U/dsc/Ji3lN+cznc35f
NnE8z1mOh7Ncn06fvcg8lyKn6C8371l3wY/ffX9e5hv6Ah5lnUd98P2mtPP8
VuXTb8gX3aLnLR48OH8ZuhZ/Pbzlm587TeI0eWReuw8+0meTZzc9+g4TX9Ul
v04L9ts4PbZ81XoZq+P9eot9cZm3dlw9b8cr/i8++B7Qo4xtVIh3feU4EH4q
WraOKV+9iegGdz6LNeWrVRvKGOd/5jd2ELYFexDoRPh14PDxUhbjGFvB2aHe
NXKAAy3fYbf2GThaOMnV/4K/XeidF63uHT95ln9+++zkOo3aWnukilzDX0W8
IX4gPsTe8xk5bqqVSQ7xNSFj1gLYvfhnmJudegwwuYpUMnPmL5X0uSxXY4/z
+XT/QZGT84VWqfO6rH3hRnQXc5o9Q+reqkNP0Q9ps5cwzVt3k/TOt4c+Jk29
pu19OmWCby2Mf87XTz/K3xlzF4ltiI2ELk1rn0FfnDr9hdgpp09/KfwIH9B3
Igt/3/nsqGvit0RHn2bd5LdJ4KB9tp4yhmyd6EN0jHfs4JtENu8v8nEg6yVs
EeL93Af+ghdDyRj+WWvXSown+h499vXX50SHMU44WwAHDhj6rq9vo4w5H08Q
x4KPHlsylPzwP7jzmnx45suzXwsHLVm+VvpquNXFPIOfmzrgIwzMpxETpP60
9eSpL8xnth9Z+6B/cxauKOtFt7fr5UDsK+wqN09DjsXGbcVeDBU7Cm/hA2XM
9B4wSmw3eCaRndu09z3WolZwX331rdjeofqceU062oadRf9d9cuCuUi5OQpV
EK6mfNaTxL0Rl+T2TlmvPWvnAn4G1tqMiS+++Eo4Fll9Z8cvvln6crI/Fvra
tV/FR8/YmDDV55+gXNYh7Pk6zh1u17GMabde/sEzNri+55MDMscY37cqH3t5
op9bH2TbLyHGxIi9ZnmCuc7aOXOeV2U/CnvvDatDmRfoddl7t3ORcYK/nzUf
MSzEmffsN9x8+eXXUeKPnQ2AH4/xi+/fnf9DT5w4dUbGWK/+I/0cuC/AgTfr
Ix8Hcq3wq7UkFs/1FfoS/Yk+kLL9e3DMf/xQ6GPWtKyH8bfyYc8LXcp+UrD/
1nEg9hVpWI+zTmU/08sNGyyHY1tOm7UgEDdA+7EL4C84umvPQbKmYE8e+dF2
dBPzDs6Yv8i3X8M6FFsTWxhuhsOwifCjsq4nVm/KDJ9N9/Hez6LIqYiVB3oc
HcTaFcCJcD6x7uyl8Dx87KvnBf9ZgZ+Eq+lbPj5bOZ9wEnXnPn/hRHx68NAp
q/vwHeIj98GVV1b04bDRE6NwoJtTrMPxU7L+cft9woP+GA7HgfgH74QDkWVn
u17AZxtKxj4bzGe/sjd3pxx43X8WhTEwZFRo+bEfLfnZaxOsHs1dpLLUx8mG
+jub3XFgn4FjAvXv2nOw9A92vrcPGQf45vB1X/HH3ETHgazHKCd4LGIbYwtj
7wZzIPl4Y8toO3t302cvDJxPEt+75eMb/R3c5zlk3PBhbcSepNd3y1/Gcf6S
1cTXBCc6DvzFHzPDPEuSJp/sE7q8ATKkbw4dPma27fxE+t21j3HJmvll8RvN
8sUG2fbA5/SVO+My2I75V6xsjx476eNkz9hIxHrvw012Xs2X9UNM5W8PKv9B
5sCEiBv+qmWiW4mPxqYqadeF7FMR+8Z6F/3sjftin3nS9HmmccvOsqbCtwhP
Bec7Z8FSmSv4w/iIT+LXa6Ln0dNO/3jtwFtxYG0/Jzt96tWfbp+eNKR1nIUt
y7xmrwBfTDFrT3JWN3jd4+VA1ufYD/hxmRP4Uag788DLgW7tjXwaw4HEGdg0
2JDJ/XMQnUSMLR+egTOwE/jga2NfDtuTtb/T2azNmaPoQ9a4fPbuOxhFTqSB
czdZPYh/dp1d8/L9/7P3Hm5WFFvD7x9xv+fe731P8hyPOWBEkCA5ZxDJWaLk
HCTnDCKigGQkKUERFEQQRKKCRImSEcQEDAwwU7d+q3v19O7pvWePisBMF896
mL13d4VVq1auKmxM7Ar4GnrMgOETPRnOOOHh+KWavdZTvod/4+9dtjIjzkHB
/iUOSn4F/acucgd2frPHfP7FFtveVtGTieuhH0kOsW/e0HfQC+Ar5ADpXj3/
GR7MYfW62IGvyd/0DV5FrhRzsMyNvfhlILhGRqFDEbcNwzF6BvlGlHG/QwYy
14q/gXHwh31EIbeKOcUuhNaRS+RZMFeTp82NkYGjJ0yV/jNGYgjw6ZWr1onM
WW9xCm2xHrC5YnL0r2UtA/20CN7DZKDur2AOoRH9zG+UdRs2W9vsJaEx9BZ0
tLA5h8awh3+T3IHqpmX7Pm7uwBWv38TioNGUa9c9Gcj6kz3Bdv7Q/dBVptu2
tu7YJblD0DF+b3gOaxR6fsQ3PpWBj7oykALdBWUg9iD0s2vPftlL89NPGbQB
rWM/swcEOzQ77edkGZgb7w90aDFNZFheq+OfOnMuI5/Zlo2WHh6Q/cOzPFkJ
b/IX7A3kJDlaags6e7rTROZAl/4YAAW75N+PFZa9XiID7XrCtsxKBpar0URs
PL8MJEYIP9D1zW88w7O/4ReyvAz+nK9oNdOz30jxz8TbDx3MieE71jvrDR+s
xh5YJ9jBQb7TtosjA/EjyZ60xwrF+O7ASUuLa3jh4aNOziC/YwOQK4Hth+8O
uxPZVrNBG6uLtHHsEvtv74FDgifNicHPSHxW69KC/fPV1p3S/9JVGopuf8H1
cVPIF3n42eJePAv5js1KruM+2wZ8lj6AK3SVRXYsdAzfGrkIqb5cdM5Ywd5n
rsN8AeASPUlzTijwQ+wUZJjihLb8+xDGTpomcmz5R2vkMzIQXj995kLvGXKb
8N/Fw/EhV3eYMHmG6BJBGUi8O1QGXnPO7WNey1ZrFBd/+EQoI1195yeXPijQ
NvEo9VvjSyT269+Lgd0FbpaAX19ZZ3kxeofuK3H6lCEDq9ZpKTnUFGQgc5SJ
Fu3cEvvyy0CN02NfIreIp/n3A1BY49DtdHctlogz5+TSHDp8TNYMNE99im8K
fhbmq0ffkUJjyCDsXXiNFmIA/81TxFuP/nehKeQksso/Ps8OtPpFUAaiT2hd
2KjkGvnjr+g10AbP4bNmHaO7ZKf9nC0Dc5cvVOM10C301K3PMInnKw/TOAT+
tjJVG4pOT57M/zyQT+KB+KrembFAeA15F0EdQmMq3foMF1rk//l2zY8cN0X0
KmTXz7/8IusDO8Lv54onA0tZfo5vzS8D4QfICp1DfuMZntV6GCf5gNAy+XPw
fP/eCwV/PBBZwz5iCvbYP9091shU9m6gG8yz68TPd+CJxPSoFx6LXU09rEP4
XYceg83fHsovPjz8M7zz7d6DEnOhb2obwi+IfYI3bBhZv/Z5ZODDFk/qg0I+
o2OQ3wOvJdeOvMv/c9+z3lkyfE8eX0M7R+i9yAP4FXYs/VUeiP0Cz0LeP2/7
w7wSy4Fvz3XHSb4BdZGfAA9knwoyltgu/mw/TvXcIfxp5Ck+bW0udHNoAPvz
/7v/eS8HivFQb7e+wy3vXyP7F/Ja25v92pq7iy1Mn8gdnmblIP50/Ap8jofj
G26e/LjJ7wrfC8rAPPnLWrtsWihvU3nMfsR4+CO3i4LOgSxu122AxMo4Zyl/
iermfsvf1Q68+OMlyWF0dLBZEqcm/4j1RRwL+xCZjg+dfFg9g0bXo18GVrS2
FXYzBbsxLi1a2RS0A1PcnBhkMTY+eaTkspCrjN+D+DH5neSGsDaho7A5x7+z
a88BwRNxFOLm2H3EzdBlsUGxg8lLlhwkay9iE6J3MNZv7JqnT+AVW3DgiIky
/pHj35Y8HXJ1GUdwfHyHTfqQ5Ect9GQgeyXgKxPceCB6Nn78vC9VkdxbaIM4
398tbaA7prn5W41adMlW+zlZBuY2UD2d/EH4wydrN3r+buQO//N5suwXLyf+
AfKcO3QfJD4k+Db0zFrjLIbgeUS6nxc+1WfgaFlbT1rbSvOwyN9gLTrnnxwS
vht2RprIQPd8qur1Wov/1ZOBVl9v8Gpn8Sdeu5YhA3mGZ3lHzxlhfw+xB367
KXn8mXGiMhC5AZ87/8MFL0d84PA3RE4Rn0Jmky+/eOnKGL5DDLWClXv4kFj3
5KqQL8i4AWwt1iO/6z5bxlrL2rHwlR8uXPTaw08Gnonp+/dKgfeZ7l4FnmPf
ALYKc/iUnadCpWuKzL7l7muHd8KTeY9nnrPzgG2GDxmZ7s/pYFzwQdrGL4Tt
BR+Df1CuWZyBG/yA2J/kziLn4ROS75LpfBrH5wXPgmdjW9NH4knYGeIPtW1j
P3XqOcQ8U6Ci8FL26JCzhMzA5pK2bX30u5CVIfTpI/d7/PLxcKz7S8iDwA+n
8TWhS7FLXhZ9J4y3+Wk5Lv66DBC6h27wlzJfedw5eHv6fFPYyn7V68AxPLak
tc2wfdSGwedGDteTLm7wqQwcNlF8ijGy61rGPllsQPYgUsgj5Z3Fri0ZpMVM
9aQ4Pi9icpL7ZXUN9CpwCn1XsTbfRtl3ku7ajTfC59zaUBTkODITHbPPwDGi
T4MnYsDLfHsIsMHIkSMOgf+RGCvlxInT4o8Ab+g42Otdeg015127e7O1w5hT
HZ+zd3S/xCc0Ts748Ic7Z/44djdzhA5Avih6B32i7s62bviYnM9vaeH0mXPZ
aj8ny8DcZgcqkK/lP0c4CORCwjuI59wU2yVNchDg7/iHoMmwvWHOenN8L5pL
R94VPiHZe+vmX7MekVP04bcszoKGb9EP/3f4J4GY7+wzyF49F4qycvU68a1l
7AOLT8vorPRH5aTIVgvggfWj/Q2eXU0eHzxBxw4fQUc9ceqs+BjJPUJWBHMU
mAPGpjSoMZrgvIAvwdNvV7w2nLGkiJ0EaG6k8svr1x0f1vnzFyTGpPsFFG/M
Bb9xhpXm0GmBR6Lva76o2kb0FTvh+IlT0g9K2Px7feQMGNsf+NTho8clR0/2
ULp9hM8yT+TkkRuJTIHWwLfOk54xhP1GrhC8nu/lfIEscOzNp79fFhxcxj8r
O0v8ubSo56fQNuuCuKHsnbO0onMF6Bmd+Ob1e2iE94k9+uvXXJjQdWBpW2n+
itDiTwlpMXxcjt4DzvEJoktpnq5/PvW5sDlHjtAOsmfwyDfkO2KM4EDjBv4x
MH7wfcbqzOgofCc8xQJ69H6rz5CXrmftODSfeXxh/IJ2/POpc+7oBVdsn45K
3/R8GfUNC//KZvs5FXKrDHRyPuPvedH8BX9MAX7l0EkGLcV7P+OdW15eF9/7
z0TkPKxk7gS6EXJfTdgdNmon0j/iVPhF0GOJuf1s12xW5+0H711RWUh92s+w
/mr+rH7WMUoOR3p8fAXfC+uDh4NAu3LemJvn55y3dSPkvEN3zty9W3pnADxM
5S17zv7x8IsSp0P2de41WOwVfEViS/hyOukr848eo/vgE+FTz0RLu+Xv4zVf
/sw1F79Orgv9Uv0pbN8pPCsjNzhrHKcmwGVW514lxt+NAI3fdPt/I7T/+p6z
tyfY/zR5V+tPtKb8bSdLi+HjSvHOHpPinhcWzMUJm3Nohu+QgdhPvQeMdvCT
esPDQZAunPGnenub/Li7dTN8/sLGF2/M/u90zhXn9El19aC/KrvtR5DzINF6
C/tdaSSr94LvJFrbydTltBn2XeZ7UXXPK7nQ+EEatOjs5beGnUmcTH+CayfT
7wney2rsWbWX+Lus50T64Pvd/z98EJ15kNXlS1ZuYJ4nP6ZGUzN8zJSYXKd4
dWWHBrLqY0pIH5PFVXbpK9v0G+hbPFr83f1PEqdhfDxZWgzHW0qms6KTGb+e
XVGzYVvRmzSWkmgcv2f+fu93/r5mhdvsth9BBPcKsK7xNTr+qvCzuHM7qBxU
H7E/lpbIJxdBBMBluQckZ9+pEEEE9yr4fYrJ2H+5FdQeUB+a+sQi+RdBVqDn
w9/pfkQQQQThEPHx7OFK4C7oSwT3BkS0kjMg0mMiiCCCCCKIIIIIIogggggi
iCCCCCKIIIIIIogggggiiCCCCCKIIIIIIshpEOXERBBBBBFEEEEEEUQQQQQR
5C7IjfcH5jTIbfsA/4zxZvfMu79ybH9Wv5I9M+xOj/mvnvucAHcr/d6L85Tb
faHMFfcPZPwdfq+C/1zBK/J3+Pl6zh1M12L+jvfc77mPJOzuo9x0tm28M7Wz
C5wJcyOLM8T/SvDOz75xM+GZz0oDV3zndPG/0nB26ELPirtXaOde6+/txcPN
LM/Av5MQds5/BHcf+M+Ph6Y425/Cb37ZhbzToncScQan/6xAPadd7/oC5J4V
994Bf5v+O6yzu56Dz1P3pZD7jHIqcFbxpcB9QMngzI835om7eriP6G5Yp3J+
/y2Ht9Ov4J1YwWf99IO81BI8tzoRXSBHoX29j+lulyv3Wn9vJ63Ag7jTiruq
brceJ3cu/g5cc88V5xXfC37G3EpLcidcupG7JLmznPttuVOSu8Ovia2RcWcS
Zcv2b0zvgaNNs9d6yF2r3Mkud8u5z3C3CneNvTVtrmnZoY9pZYF7LTmH+ZZ7
L7beQ8canjX/fblnlDvl9D6ZZPvN/9KmlcPf2X7kL1bNuz89p951qff8gjPu
g+JexuC9DvHALxvgGdx7w31S3O+NTA3ea/hXgvI07p1v2rq7efyFMqZRy66e
rAvOPbTEHHO3aY9+I02zNj3kf+6hFxuJM9ItLXJfezy6oB7u1Nnx9bdyh2rv
gWNi7m6/2+Be6+/tw4NjB3PnIvcsN2nV3ZNRtwsXyreSe/a68DL4W6VXmpvu
fUd499bfadwlgtwoA1Xv5m7TSjVfNf/NU1TukeMO6H89WkDmzjk3OUXuRVm1
Zr15LG9puXu6ZoPXzKPPlzQvlqhudu3ZL/efgUPuoGzQvJP592OFTeVazU2Z
ao1sXQVN83a9RB9X3f27w8fkPux/PFJA7ubmDvWs7ijQ/u7d/53U/cGK1dIu
vHPv/sNyH/aU6fPkGfT+eD5d/GXaTlZ3xmTQ/7WYZ+O9p37f63Ge0XOo/edR
+/uT0V7muvmOe0Mpb0yZLXOBPaB8kHo8P/WVlIB9nmI69xoicEXu80s1V+wa
rf9qJ9PYyhrnPuNUr56MMVyT58PG4O93cAzx8Oj3Vfp96eANGhs0cpLcdTxm
4lS50zesDvykyP7Grbqa+x4rZPIXry53mz9buJKlu0Km2+vD5X5bdKM9+w6Z
h+LQhchSSz/cMVm8Yj3b5jT5nOHD9/U1xJ8fpIcgnhxfraurueMNzn3Yu/Fi
B4n66/cDh/UlDBLRi7+fWlcQJ0F6jl0bQXq+Fnc9XL0aG4PROEcYrrQP6GvQ
APfed+k91KNdbduPC53PRGs33lzyHnyJO6bRyfTu3zD+obhy7pW6IXpl4dKv
mDad+8o8BXEcxOEf5ecRZB9U98buQ/5t2LRV7D7uYIaukF0frfpMeC6yDdlY
slJ9c/jo98JPvtyy0zzxQlmhDZVtgy0P4y7W5SvXmBs3nXgV9PO3h/Kbd+cs
lmdWr91gHrf8m7rqv9rRFC7zirn446UsZaDaj9/uOWD+aWX09NkLvbs/kYHU
iX2kd/5Ypur4xgJj9t8XqiWRHIQ3AyY9w28bfE/XrfqHY55Jib2TW/3O1Kl+
Y7W3ec7vi1bQ57SOye/MsbZA+RgZqEWfFbvHdy9SBSsnKtRs6v2GraRj8+5I
vpZRj38M2jdkJ0V93B6ujUloRyovccZ/0+uj+tK1jw2adzblazTJ1K6/Htru
3GuopYGCZuT4t8XvAN+7cPGS6T90gtBaH2sjUfbuP2R1hVKhdKH1YS9Sp86b
09cbXl/hXzpvytvj4dvvg/Xm+0ZGHfq/xjrFtnP7I/fruniIh8uw/uq68M+F
05fE6z+s/0qrOh8ZY7/p9U3fv+7Re1ommkn3xUj8tKLtKZ7976W5belvWu9N
373v2q8bN5z7rHlG6VfjM7Ttx4WD/wy8yjPp6TFzlWguKfBIdP8bbht+f5Y3
bpc/6P0ryMBi5euatl37O3ck++gu0zykZ/4+gtst/65781S1TkvTrtsAd/4c
evjiy22ij7/5zmz5/P7y1ebfjxc2cxcsk8+XXXsEmffIsyXlflrmuEX7PqZW
o3ZOHoJLT0eOnpB7bIeMelM+o6dXt/bmD1aPGzXhHfN0wYpiIyaSgVdcHfjT
zzaaelZu5i1SxdRu3N506TPMfLv3oLTx6HMlrb4/3yxd8Ym1EbqZDt0GmqUf
fhITK2Adr1qzwbTvPtDUa9bR9Bk0xny9a2/MmvAD706fvciMn/yu2WvHiB+Y
97g3e+euPfKe3o/NOlj8wUq5i72ufabXgFGiJ+i92ugRPfuPNOu/2GLWrNsk
/mT6yf2jxL9YX6zXeQuXm6Gj33R10VT57uSps+Lr+2z9l4LDN6bMMk/mL+fJ
QHC38pN1VncZZupbO7z/0PFms22btXXs+Clr0w83L5WtZYpVqCv9w9cNz5gw
eYbYSBqvoK2PP/ncdOw52NRt2kF0oU8/+8KL0/1mbcd+tu7lK9fKGFp1fF18
l+Ad32oY71a5hYyaPHWuHXdP07BFFzNi7FviD6AcPHTMdLVzWaRcbVPc7ePb
M94zqb68H/AMvndZHQgbuHXHvu7d37fkd/gh/a/X1KEPZCO+0MeeLxVKF3rX
OLTXZ9BYGQ913HDjpFOmzTNN23SX+ABzdPL0WY9O+B87tVf/UWJL8z9zo3aZ
3qP+rqWdV+140RO5z/nLLTtMTzuP+O5vuneXH/juiKwN5D/+knfsuInRBv2c
qkc4/R3j9Rf6ghb7DxsvtAkN6G/x1j91B+nlq21fyzuMYcu2byytjjK7vt0v
umtD2zfiGove/8iLKyMvWb+z3/vAbP96j+ncc4htv5MZOHyixEioC1jz+Zem
75BxZvvOb83gEW9IH/cdOCzzznd9B4+T76Al+As+ROTh7PeWCv0dPvK9rFto
CD7D2l1t1zDf0daCJR8KDjZv/dr0suuTvrNe8Ufx+7nzF8Rvil4EjgcOf8Ps
s7qR3KfNXKaFzKXtM32HpqH30lUait8VPsnaEz5p1xa8A9qh//QL3gJuHd56
2RS19Mw7zNvwsVPMxLdmZvI5jnljmqxDeHJu9EfeDYDfyPERObkWlHmLlovM
Q/ZRoPWHny1hdn6zV/RP4nesX+Ix+KPmL1ohz7E++Y31qnJy3YavzH+efMlM
m+nYbdhxtEkZMGyCebZQpaxlIHGwdEcWl6naSHhchZebCe2xjg4dOW5eKFrV
8s96QqvwOuxWkduW36u9886MBfJdwVI15d0n8pUxT1l76suvdgjNB+1B+gT/
ypO/rClUuqbodfhwH7G4eKZQRYmPIkuuWxnYb8h4sU1ol7X2dIEKVi6XMss/
WuPwecvviXNxV3te29fq9VpJPO6fjxQQXoufk/XYsn1vqRs8in5pv9ttcYbf
mDVEmWD/f9L26fSZ8zKuEXZ9/e8DL8j4W9j3wQ96x9Ztu+SZBs27mAIlalib
u5apUb+NmTxtrvS7RMV6pkrtFi5fN1bnmWP+80Rh86J9FjmVr1g18988RTyb
+6KVDfiukaf4IMFhJWtf/u3BfMKXw+6cl9wbO791mnQw9z1eSOKPrzRsax58
qpjg9NDh41aH+V74D/OC/4jfR0+cFpP7esWNhb47e7HQ3Eorq1Ufc2Rkisiv
M2fPW578rXwHz2QMYXQxZ8FSef+UlW18Hmt5EQVdpb4dF33Fx8o79LWctU+P
HDsh+J45d4n4O4jJMl/g44Gnikqf0ty4ADbp3+0zpex8o689X7iy5Yl1ZB0h
oyg7v9kjuMZfW9vSVYUaTc19loYateySSadQO4jx0d/RE6c66+uLr8xTBcpL
Xzr1GiLt/e3B/IInR0eL9Ykj40aOezsTvTyZr6z5YtNWB8dzF4tvCFrF/kGn
K2TnBt/QqPHvSL34BYtXqif9B8dlqzUyNRu0kffQZfa7cm7cpHfNvy1NIQ9Y
ozUbvmaOHj9pNn65XdpkTdSzc1+qcn1ZC8gSxo1finlu3q63rE2+A0f4e9CZ
wAd/v2b1JcqMeUtkDl6yNF7KyiyeRY+n7/gW0K1YlzzD5wt2nmUu52WeS2h+
1afrpc3mbXvJuoHeX7H6fX+7zsEhdkKefOXME3Ydsg4KlnpZ5kX9XeTCMGZs
SNpBFj5g6eiopaGbrkxH//nPEy9ZnXpUprmK4K+DG65v4orrlzlx6ozQUUUr
Y376+Vf5Dt3oWcuX1e7At02BjqGpt9+d7/kIVAdGJ2cdV6ndUuKG2DKOb+mW
p0sPsnphMjJQ1y/lm917zYNPFxP7TNwIdn18u++ged6u43LVG8v6otBX6L56
vdZCs4csn0Xeodeja1IOHDwitF27STufDpbRB8bSofsgaQ8ez3f0/3PLd7BF
kBOU9Xa9svaxX9AjbtpnsEFoH75He+R7vFS2tuVXFcyn6zZ6cfIBwybK2l9o
9VkK7RUtX9uTgchFYqBPWH6heFYZiI7LMx17DBJc6ryctnwSGYz+TeGZqnVb
CqSKD8lZb8R/Wb/0hfWIrK9r7aiL1mZjns+du2BetjKTOUKXRt4gN5+3fPEr
q3erDGpi5QR8FJ+2Xw5ecefsLWtTMUZsHPUNYtMTw23XdYDQAno9sq+GnS/a
RpbE6kFOXejN8E1syGCugdpKaa4/7FsrAxPRBc+Cw6etDJlk9XsKNh/6Bjar
+sY+WfuF8Cr4v+pu3foMF9lOQedHniAvKcTOeb6LlUnkMTFe9JjiFeqY5wpX
sutmm4y5ibWhH7V2Kr4B6Ir2mFt48gwrZyka01YZSP+fLljBTHJ9NMTt0eXO
2jkX3mvXXPfXh0vOWtCu4DO02Mna+WH0Ao1TsK2I91d4uanIfbHjL1wSWkFu
7T94WPr6spV5jzxXwuJsjpcH/oG1t5E9PfqNkLqmznzP6hOFxaZDz0t1/beV
XmlmXrCy8xtrazp+5hTLZ0aK7rFi5Vp5d4ql978/lN98tHqdWWhtUGhopf2b
gp2PDtW970j5vOiDlSJj8D2qf3OElfW8D40xfgo24gN5ilndfLM7lxMzzWUJ
O5dN2/Tw/L/trfxCRioP4n90R+Ql+jeF9Yq+jM5wxs7RNduHIvb31p36yu+b
rJ5N/2bOe99oYT2jE2Fv32kZmNttUCcmc1PmsbbVdR55rqTZvHWnnZc0L/6C
Dof9Bt9QWvh69z7RYeFxwg/dXAPwyRpp0+l14QUfunFFjRmrTv97ZOD2nbul
TY3xwFPxrTz2fGmhb4eOHRu0W59hwpuhL3yM6GnwFnRp/CFnz/4g/AC7C3vp
VsD/RJ/w0cC3iMGrL0zXBXyDscI30QV27trrrSPl/fCDrdt3WV57UfL5aI+i
eoDwNMuD6SulQ7dBYgv5ZSD2zKPi03Pw7MjADF+oFvCITYV9UcjWgY6v/AWf
NzLwihuv0HVcq1FbeZfcSXjVh6uduSLnnIJ/F30cXx4yB3zqulZdgtxfdHKV
S1c9HDrrCt5J3Jfnb7m+SwxP/IToIOyDQBd7xdoIyMB4+aAU/IboMshk1adi
ZeVVKwcuSz8S0QX5otSJ3Yd+gQ1MqdW4neCfZ6V+qxPR512794uegN9bC/Lm
6LGTIt/AZdlqjWVOR0+YKrxNbSFtV+kE/wH9fKZgRUtHAz16oD3sh/zFq4lf
1B8n9stA9B/1CYydNM3SdSEzeNQk6UeKG8+I59/3x7/89MKYmQ+Z86Urrbwp
6PFrpYUPP/5MZBT+T0p5a7diV7PunTivs+6ZQ+QDhXUK76dvFHQb6BkeM9LV
KdRndMzqieQYDBg63tNv0DOxNV+wdIes4ntogz6hW3e131EWWBnJWiPfQAvy
UuxzV25SPt/wlfCPBa7OqXE6/1xWtXNZ3sr/31x/F3IVGcheB4oTZy5t+lkd
8/wPF0RHZV6YX+V3VAvNoxdTB/ONrdywRWfPX4rOR1wouG8pgr9e/qnPBRsJ
OlKZpXmIyCp4Lr55aFBz9PH94OeYPmuhR8vUCc8gfoXvRPXZoE9G6w3KwHh7
3rKWgU7uA/SmtIsdhO+Ogg3Ce/gE4bsK2DTPFa5sdofoYvQJXoQP9DdXJjFG
noMHIZdOWruZuCh5icS8wCXPgCfkBvhcsXKN6JnELIknpNn3ecZZy5fFVlSb
smOPwcKPnH1FiWXgGVf3/+zzzZIri6xmTPimkEltOvUT/Phl4OU4MpD9LPBt
eIDMsTtO4ixid89y7G70Bewg8Ye5eH7HykBkDXa15EO4OQwaF1F/YEYeopMH
OnzsWyLP0D/gC+Qbx5OBSnPwGfqz4+s9mfen+vg7JRFdIMszZGAZGT8FGxE/
mpfvdC0jd0XzkHfs/FZ84tCW4Nvqh+g34JhxwBuhK+xpiaO68hQ9DL/qNkvD
xBfxlU+cMlPqdujBjtM+S74j8wmeZG9tJhlYzuLBsVuhv9ZWT4MnUx+2B/Fk
bPigb5o4FnO7bn04vbTq8LonT8AxcTdw/JtLz9AGNKJ0iM+R+Ks/T5JxIque
9a077HZ8gGpXEztFNs2yMlZpjXFC8/is23TuJzoReEHe0E98jdC7xB5CZOB7
i1eIXMWm1nwacvP4jhi3yDr7Nb8Ty3hvsSMD0UfC5pJYBWvTLwOJ01I++ewL
WQcv+njJiy4e8Qex54vCOkYG6rjHvfmu5GixFw18MF/EZyg5dT/X3Q4Or3HO
C8Gvjg8GnwOF+f/VtWegY3g5sWNoQvWhmXPfF71n9dovvHlEq0ImECOC38M3
4AHBvVnxZGA8fShMBrLeWCvK6+inyG63368PHivrhzLNyun7iW3Z/7fu2CX+
THz68FL0dWzcVGk71g4kRgD9UyffqU48YPhEibnhk0HvZ52zz4Q1+rOLn/lu
XJX4D/yQZ8CNg9/f3Pouy1qGj1E6dB/o2CGWL1xxeQr+okck5ydDBsK3ic8R
z8KegKfR3trPv5Q9ZIVL18xkB1az6/o3X/zMLwPfducYnw1yjDlmruk7c6x7
7Fj75FDIGJQ+QmWgs0+Keadv+NWuXXf3eLjv4cejvosXfxK8JbID1a+6/KNP
ZQ+E+oXBH7+pzMbmxn5BZh747qjoDmF0kUkGTnVkIDEA4rSyPqzMgHZZH+Lb
sMB8E+8qau2fGXMWi58UO4p+o+crr4MXIusoSrvksWIT0UfybrB5Bo6Y6NGD
5j+SM43OQB+ux5GBardqYQ1gn7WxNjo0Rw6Lf8+t2pn45IlrhNFLM9cOXLT0
Y6lj6YefymfGzLxCG9DIVBef7H0ivqv5qcwBbTS3ujR+I+UdyGfyySV3087R
V9u+ERmr/B8/AHICekZ3ID9K/ZDErvG/YvvOmufo07oOgzIQ+YyMU9tuxcdr
5buP3dgxzInfH3qmhOQyMK/4S8LmsoLYgVc8GYhsRo9FvpLrxnrEj8rz2JbE
L7ft2C16An5j8FG0bB15V3NYkecPPV1c9nUhg6FNfPSxvpMI/jr555x/cMvi
n5wp/EHkNQULeiDz/LClm9cHjfW+h57xcaEL/fDDj14uMnEK5nama//5S5gM
xAZTGahrNSsZCF1Pn+nfG3FI9NgwXseaoq+fW9pn/b7x9uyYPkG38+36gVdf
D+zTZ1227dJPZK7axhTi6dg28CrhGR+sNP+yfFltUwdvaXJOQB7Lr7Bz0Pvh
C/AN7EUtxDqQMZqTgY31lNVDyZvVMm/BMrGptX6RgVaeIs9Y34yLPD8t3584
beViBdO60+ueDMTnUtHyKy2MF7kIr6UQH6GewSMmxeCHXNgHXNsFfBDvCJOB
j+ctEyMDdc7AA3U8ZOdMZQIFnR5fEX1QmYc8Jv4YJgN1zwL8BZ5VxBeL0YJ+
/ZKtE70Hfkx+4qNx6IK5UBmITHnDjQcS+37Q8in4nNdXK3caWTudvEXkKviY
4eY+aL34/thnC76JlRInI7eGuaDv2CT0S+KBm7eLT5D8rpKV64t+pGXT5u1S
v+pK/v1nKgOxUya7MnvJ8lVCQ/5CzjHtsK7UFtTYHzlayOcwekHfo0DP0CRx
Zn9hvd7/5EtixzGvla0ORQx5i5XpWpgT2iavmEI8AN3viOypcvJu4RfYTjwD
D9Ky2JW9qt9QL/Yi+6u69Boqeq7mlJKrUKBkDbE5KX470C8D1Q6U4pOBzAe2
GLgIm8vKtVp4MpB8Fuy81OuOPXf+/EWTt2gV06Jdrxj8oF+QzwodgnP8O+1k
b8QtL1ZNbhh8E58Hvud7Yf98TgVdU+R84s8kX5A8E3xNrK/xVpdFJjJvPEfc
4v4nilgdd7roPD36jpS9WOT1On6iW5Jrh35HLjExIuoB4NnQt7at69Hh9+U9
mUC96OHkrvvXv/YXvnH0+Al5h+eQCfAEeB36la4d5XXwXtYjtgLyDX8jNI/u
TTwAvZxYFzEg5bl+eoTnk9eFjcOaZaz4sxo27yI5f1NdOQwfJYcQfZecDdZj
hx6DBT+vu3kG8AZ4PrKL/SPwU3T5vEWqipzWtQ3/Ib8UG26ZtXnwuZIvSa7a
W64dOM72Az3jx0s/iR6JnK1Rr43IcvLSylRtKPOAbYktAB9kvcIPhox+U3g0
+GDPIHJH93aw75x24HWMAZ8ePKll+z5SBzET7La+gx1dSGXg29Pni460/0C4
DCSfmHGTJ8eckatLu8SW3rc8XOca+eeXifH0IPKD4Y3koZD/iAzAvmfc0IH6
MsiJQX8JowtsIZWB8NYJk534Gvoe+ATnyE7mm7gN841NDO3i84LGySnkd/QL
9ghVsX0HRxRs9vutHGHc0CBzzJj5Gx8EZY7ll+x1RVZSD/3E50CcGf83MiNM
BkJnGg8kLv2/D+aTeCC5jNhWrA9yIP1ndOmeu+8OH5ffw+ilhSsDsVGQs9he
1M9nZDLPoDNp3jc5Vdho2MWsd8ZTtU4rkZ/QLgXdAt+jP44CjZDXSr+Jt9MP
xkO+GHWdOn1O/KLEV/FNg4OTJ8+Iv4PcTOiLucSWJ1eBgk0LTWCTqQxEzsXE
A9OdeCA8YNHSlTKOF4rGn0vsUwp7LMiXJmeIXC7mhfyo/3ngBbG3aXuqxTsx
5jwFyotvhrrJ2dE98hrzhPZZu9AF+UOUu8EPmtvikeqnQs+B78CbAXKs0QfJ
44aXsH9I89WwfVp26C38QnwTFtg7I+eOXHfqQ17kL1Zd4mfkrgGsed5B/1He
pjIQGYTfj7odvjFfeA2yEDIOPwP5hsiOQra/0Cq+HNYM8TiNPSqvI38Cm8E5
NyRNnqOPrG/4ALwG/dLJg8yckyPxwLa9ZC1OtGuZsaDTsvbQHZS3gCPkMHmB
ihvsW2Q8PJG2kVXYd0MsLyEvBr7AOihn65YctXQ96zJF1hzv00d48dhJ02U9
qR042erWyOSz5y6463+F2OPwbuaPnED4E/lw4Jv+keNUvW5r4QnEaulTbSv7
OWcMeuAZbDPeoZ+MgVwd+ko+EOsYPCLHho2ZHCMD0aPBCTkxfhmYIbfS7Txt
kpx0/I6MG3rDd3fzZsb+B2Rwg1c7G/zR8dak5hLB3+BdxFiJsSDryFl1YlhO
LtdBa7PRrzC6gNfSN+YeXKqtyDiZD3Qs+gmtFClbW/iVsz89TfI+eR98Y0Oy
l66F5YU16rf2/IEUfIec58J8IFuRC/gwyKemMEZ89MS68MOAG2xJh/7TM523
ggxkLuivynVkInvzmHfGimxH93FirJn3qjA/yLQweiF+LPRkZZLaxugkyFzo
gbxH7DnwC+8oW72x0DzxR2gGXwy2GXJV9wejm2BzEydIc2W65qGTE8NvT8rY
y4ouir6kspPvoRvN88Ufj/yYZ+kdXyl8Rn1TxN7VxlYZiE7Ad8gtEYH2e37n
O56noD/Fm0vJ8bbtkD/HPkraxobTc6DY8wfOsYV5H91WczyR4eQMiV/Xp8uw
xsi7Z68u9nCyZx1GcPsAHo2fG58/fzN3AvZvzXHRM2WQP/i7oSnhd3JGQ8Y5
fdhb+F+IHQfr+tWNp/lBn7/qysRBw99wY29X4uaJSp6IbZc25Oxg92wpbCLe
C6vfk1Xsy7EAfyAGiA0AT4h37iL5JOjGxHluuWeh7jtwSM7qRUj7bUfWKX6e
E6fOyjPiy3TPo6H+70+cMk9anqr7JI9Ye5a90qofOu1f884LoW/kIar89o8P
Xs6caZ/BBzorcvi860Pls547rbyPdXjm7A8yDvpFzM//jO5b8vJmLX7hWzd9
cyF7QH+NnUv6RX/ixTQ0FxG+d8TaA4z7Z9de8j/n73Mi0ProB/uUyVHAR87n
DFw6OSD0KxFdXEvRZy5771DA1WFrux/7/qSXx6zvM6/UeejIMfF7qT7AHIG/
w9bWQs5qnrAW9oOj+7C3wJ9jzDww10eOfe99l+jMHf+Ybrn7SPClUAf6pO5T
iFdHPHohRklZ+MFK8eWy35zCc05OS6q0hwwAJ+yZfLWt4w+EXhnXRbeOIG2E
7RulEAvGB4IfUc9b4feL7rnpTm5sxtoX/uLOHf//4sbVyTkG/8Ez7pzvrvq+
S5HvlLc5uVKZ5xL+4vT1unfeADon/eJvzQ8G7/Qf/Zr1r/2X/rk81aMbY4T3
oNtiUyKq75Y9gffCud63C5g3PXsoCP77BLyzg9wzgdSPHfQdJlNXxvOpGfkG
9vdqVufETku7ldhHrr71W747ZMLuyNH++N9TWeicMXIz0xj8AO9v3Lqb1RNr
Oed+236lubmB8Mpgzh3/w3v8deu+ZHgptvUE14cl5zqnOTpE0OerOgdyS/Pj
/ePTM078bUsenU+epwbubbnq2uCMXc/OCT6TGT+3MuEnbC6TuctJ9X892+SG
m5sanK9k77DQfGZ/SQ2pMxm6CD7j7yvzHaxX22b+VNakujTMfCEP8G88kKeo
6dp7mMQXiA3j+yXv1687yd7+G87cad5/VnzR398gvWRF04noReUvZ2Tg+1u7
zjmXSO6TcfdrXrlyzct1Yo88+9s5Q0/PvdG9U1nRhjN25/xX3tP69d0b7v1Z
Yb4ZPWvOT4vajn8ek/ku3lz67+7SPuiZTGH9511//53+3fDoAn/DLGvHkm+D
L0nzr+8eGZi7fKFBWowH8dZPvHNeUxLWF2c9pmSsqZoN28p+NMdmSOwjD/Yx
kd4c9l1QhoUBsoD8j1fb9fL4YlZn3AbrVvsK26pizVfFDyW65+WrCfEs9aTE
1pNoXMF5C8M5n7N6Jiv8ZAfPmZ/J3M9Ec5oM7eoZx3FpMon+hr+XXF89XPro
H97GWROci8b+OWKB5OAiC/XM52D7OtfJ3IeVTH+SqSNIC2rvYleXq9FUcqaR
k8FzvPVMT+Q6Z4Wpn+BqAlwlnMNsvJdo3n5PHXHnMkn6zKr/rCN0YM4awMdF
HpSzV+PusQEjuHsAn0R2eOBfAf4z+f8o4K8Ju3c4gpwFIgc5Azrd2TMrcQA3
/zF4l+bdCtBqVs94dyHkYj9admgCX5La2ncbDeRmO/BugrvhLtcg/JlnODh1
3fkxRXD7QW0G9Y8m40O4myAZmo/ON8ke+OngTvfl98x3BLcfsrrv5V6HnD6+
CMLmPHv+3bsFIlq9XbRw5/sRQQQRRBBBBBFEEEEEEUQQQQQRRBBBBBFEEEEE
EUQQQQQR5C6IcmIiiCCCCCKIIIIIIogggggiiCCCCCKIIIIIIojg3oE7uRft
XtwHd7dDhNM/Bwf36j7NCP4acM4KTPH9Hf+cJH7nHCXua8gEl6+G0plzx/TV
uGeO8b3SaPBswnhwRc4wu+rUfSX8DDKt76p7nmS8upN97m4HOZPkNpy1cyVk
rsNwFHY+dU6HZM73TLquwP7psDOf74Z+/pWQgYM/Vg9rwznX9M6P6W6E3LZu
/QDP50xn73z4tDTv7pOw82HT3bu84pXgvchX3fPxtATr438p6c7dbRT/fVth
kBKoU1537wbyjyt4r0DG3QLXsv3cvQCcR8i9SH9mnXKfTZzixxFzwl02eidN
boE/k3cE60LPA6d/xh2r9yqPQ9+S+9WysRaRl/7xohdyxxL3mTn3atz5cUVw
d4Dcb5pu5N6scZOmm1fb9pS7i7jr+Jp7f4jKKbknxMpK7ojkPvXJ0+aaN6fO
MZMtcKftW3y2/+/dfyjj3iBXZnL/9rhJ75plK9d4bfO73E9i/+fe7w7dB5k2
nfrK3ZlHj54QHhtG93KnjZWRa9d/KffY9hk4Rtres++gdxatyOp0I/eVcA8M
d9kOGD5R7gZlPendbck+d6fnKct5dHUC+l66akO5Cy94N8HvAXAND+LOF+48
mDx1rgtzzJJlH4u8de6qSzPfHTom92hzzynlbrgb+68A9WH8KfPo6nDOvcNG
7pvPW7SKWfnJehenv/+cyT+zn38NXp07LBZY3sA9u9/s3ie8KpmzNvU+kWsp
jjzkc/1XO5nCZWqZM+d+iHtfaG6G3HiOMTQA/+J+Z+6u/m+eonKXNHe9/OvR
AqZ73xEuvTn6lNLke1Y+PPRsCbnn/JmCFeUeav5/tlAl87eHXjRzFiyV5zgr
nzu5vt17UH7/24P5zSuN2sbQHnV27D7Q/PvxwqZ4xXqmcq0W5oGnipmXytYS
WRt2vxb3GY2aMFWeY21wl/gjz5WU+2m4c5ox4TvhrpLq9VrLPWjcN8198v+2
f7/SsK3cZ8szyOqsnot3z7Pei3JV19s139oLPOvnP+pvzfyM41u8HucZPW/Z
f+6y1qsysNvrwy1Oqlh78DfRffV5uffpWsa9V8nSB3L0p59/lXvLH3y6uNy/
zTxzt/q/Hy9kajZ8TXAEc9qz7zu5y33K9HmeDPT72IN48I/Lz/uvBPrn94/H
85Ung9/QuQu0HdY3f3/8/QA32BUv128j99SjBwTvak2mT/QDOv984xZT6ZVX
5X9ojrJ6zQbz36eKmiXLVwtd6z0NQVnoj1+kZLOfv5+mfwe9BnAcr24nduLc
LT1jzmLzwNPFzNYdu1y9OCUuzTh69U0zYtwUufMe2095e/tuA011y9+4P1d1
e50jXRtB2tO+++fyXtMlkoV71U/wR4B5ZK1h9yH/NmzaKrSBDdGl91ArBwua
j1aty6TTQxf+O+J//tnxvfXsP8ryx4piD7BeoSnwWq9ZR1OwVE1TsnID07hV
V68OCvLyf61sHGjtF7k3yf62cfN287DlpchLvUcC3wXvYJdt/HK7lbX5TNc+
w7w7mr/ZtU/4dLlqTcxvdu3wHPLgv3mKmKUffuqdb8/dhP954iXz+qCxIp/h
Pck8F7ZO01y/rf7v96cG17njrDUxfsUMHuM8J3Wlpcc+49aj36nPmvFpe8zZ
FRef3FdXoGQNTwbq9xR/vcmsYeWf1FW0XG2hE9Y/OOfu8ZnzlphHni1pGrbo
IvPNXdqP5S1t3pnxnrQBD6NvTh+de5S1v/476/x+1WD/tA8ObtI8XN9IDakj
Dn7DAPwBwbb9d68rvenvt1zc03+l319++dU8bPVB/BFOv25mu0+qW364+jPz
d6tDrlj1mff8J2u/kPqXr1ybEEeKW7XJFefx+pmaGn7fcTI0nZBePb9Nqtef
DBxnfKfP+eMuCtpmqlvv7Pnvm0efL2W27dwtnxVf8fpHgVafszrxDVeXoI9y
T69t78YNvWP4uvdu2Nq4HjIGxfOf4WOJ4M4C8888Ineq1mlp2nUb4NEw5Ysv
t5n7nyxi3prm6PSXfTJQY9Qaq6ccPHTU8r9Spt/Q8fKZeikz570vNt4HK1ab
Os06mNqN27t0nipt0XaJivVj6Jry5Vc7rHxcJt8793U6OiR0/JHlEc3b9RL/
LX5W5TdtLN3ns3bhz9Zu4R3uay5dpYFDx5Z/6bouXqGuqWvlst4DWsPqx/Ge
q+c+dz0Gd47e/sGKT8zgkW+Yo9aOHjxykn22k+gOX1hdwu9Dpc5VVp9vb+1d
6uszaIz5etdeeQYcgAuVu2279Je+9Rowyny5ZaeMT/T4Cz9aHWOkWf/FFvEr
N3uth9Unuol/8scffzKp7l3WPawMfLFEdZFbqXJPeJroDN36DJd6u1m9gc/J
+Hj9MrBQ6ZrCVxAJ8KabLi/AV8Cd2PiXDh05Lva4ykDG9OOln8V32qR1dwvd
5G/6q74oxrfe2j29rP6Er4r/P1v/pfBxR0e7Jc9jWzJmfPXvvPuezLHe25oI
v2FjRH5Om73ITHhrhtgWPewYGjbvYoaOflN8IhqLZrAHvjtihox60zRo3llo
jrFdtP2hbuaiZYfeJl+xaublBm1Mx56DzNrPnb6Dt2T6dNUd48IPPhKbGl9G
g+adTA871+fOXzDr1m8WnHLvMvoi+gb30kMDGnenvQsXLwluX23byzS3OCIm
cebsD459GdJPcOz3sWSHpv16YiZ6TXdkIvlvfYeMF7m+ya7l1h1fl76PGv+O
OXn6rPSZ+Zu3cLng/Yrrb+K7k6fOCh3TR8qMuYsFByID3ZyBTDTzuTMe9DN4
EL6hgiVfFr72xpSZoreAvxFjp3g8hba4y7Zjz8GmbtMOMs5PP/tCZB6/c8c1
daF/gO9WdgxNLR1PmT5f2slpcjA32oEKP1sdEZ0dOaOyi9gYvsFlH63xdK8g
f1TbDNqDfp7MV9YcOfq92JbAse9Pip+UdXLT0lWlV5oLren9oqfsWnjCvkMc
8vuTp81Y+//gUZPMOzPfMz9Z29KvkwV5GHSqsoqya88B87Rtq0X73g7vt2sF
3oX8XWnpnO+A5SvXmPseK2RGjn9bnqHvWT3n6AaxuTYUbMSHni5mylRrZNdb
DeEXefKXE5111afrZa2iJ0+dsUDqxxaGHz6Rr4x56sXyIufhf8iUfpZf/NPa
3fih4bdPF6hgHn2ulFnu4v/g4WMia7Cl81o5X71eK1OuehPzz0cKmKZtusu8
+WUg/ksKti0+THgr/cN/jb/yQ6tHODI4cd6RXwbCx/ietn7++Tepf+Jbs4Q/
Hbbzjk+Zv99+d778hqyAR+FXr1qnhalau4UdYwHhhcgw2kdH+sfDL8r92i3t
3OEDf+Cpouaj1etEPv70069WPnW2YyhmWrTrbRrZdxlzrUbtxNdOQS7Fw2+Y
Lx3dDT/Z4y+UNgVK1JB+QZf3P/mS6E3EgaEvZNaL9nfwVbtJe1OhRlNzn52j
BnZM8Hj8lFVrtzQvFK0mc1GrUVuzwrXXkNnJ9OmqK3sYA3PLPOEPbdSqq10f
50Sm4nuGLqirWZseIsvoE3e9Q1/IyvL0zdJrrcbtpH+s3Tp2TPA16Wed2H5+
JPNvYvyJydL09STolbnHJ4R+S7yCMVWxeAYn1Wxfzp27IPPPnD9jn2MuRZ+2
49lt1/I/7BxPfGum1DXd6ivQ1Zbt37gycUkmmsGPQ/+g1+ZWDyDuh1+IeAYx
/jQ7n+hQ+PKRX5Q335kteGKOoUnwSj3TZy/0xvCcxT31UxfzWKlmM/O3B/OJ
ThMvRnKvQm6WgcgUxq921olTZ8xLloYqvtxMfCii74S858i/dPOtpdlHni0h
/kyVl6zr9l0HmKcKlDfHv3dibxUs/cBrdL1t27FbZGQzy8MLl37FPJm/rNAa
a5n4JHz15q3MsWvVneFR2CFtOveVXAzo+OKPl5w8G7d/fQePtbynnLX1Wovc
YD336DtSZL7qs1k9F7z3W/uPfIRvturQR+QCfJO4PWupfI0mYt8xBngf9gt8
k3Lg4BFnfVpeRMEHjS8aXYF6GDP+ZOzQouXqyHvg8KWytS0+K5hP1230bIAB
wyaKTFiw5EOpq6u19/IXryZ2O3IQ2cV48F1SsA1Yx/AmckgdXTZrGViw1Mum
Q7eBMbY69lnlWs1lLOAJXwC88i03HkieEnNJToMW8mX4bs57Tsy4v+VP2KjY
ixT88CUq1BMbl4J+z/NTXduSQv4UMgwZcfzEKZmrMPzWbtLOt64z5o8xERuC
r5L7RYHuR0+YKr6PNRa/FGxXxoO9x9zy3gTLl//xcAHz7pzF8sz5Hy7I/I55
Y5pTj10P2MNPFwif87A+4V+m4AOFDoK+0EdtP+G/8GTRhyyekTntujq+my3b
vhFdA5tGCzlMxMs3bd4un3+4cDGmnxrjzw5Nl6veWPROfETx6BWZKHESC/hW
8I0zX+AXHoCsh17Je6N07D7IFC1f25OB4G/v/u9EN1ZdSmWg+kIHWpoPo5mm
Vj9Qf3V7a/8hIx1/tuPPxCYvZvvIuqS/8Ju6TTtKPhz8BLlMzBSd48TJM0LT
JSrWE73kq61fS71818TSZt4iVYTX5DQ5mJvB2R9xU2ixttWxobmvtu5MaCuo
/6Rjj8Gyvo5aO0D95eio91mdb4bLK6Ad+CUykHcpkvNmaelxu07QKy/95OQ/
w8/RcxtbPnc9NbNuAn+Hpjdu3iZyuqLl6eia/M361JyYfQcPmzpWf8c+rGB/
Q4+HN8Ev4FPqz83quSCdK78YOnqyxFjI3dExCh8Z97bYLayjRR+sFB6O7nrm
7Hmzb/8hc9bKoU49B0teCbFL9FFsn51WpuuadmTIPOHJW7fvsrr+RXme9yhO
Pmu6OXvuB+krsVFKt9dHCC7gBZ9t2Cz8bKzle+fO/yB5s9gMw8e8Jf3e8fUe
eSfR/ML38RPAO9DlkW9vTp0rNjtyHr0ZW46yx44NmaG+UPgLNin+RPwD0Ac5
w/CUDpYfaWyTAs88euyk2ADYZdgrtL3vwCHxL2C74I+CX/nLbCtLyV8Kwy/2
xekz5wUX/vljzrEfkOuSK+T686Ed5g36g+6QM+1dua/5Y8S/0TGQb9A+bUL7
GmeTPln5k50+qQxc+tGnIrf4XwvyGBrAZ0hBvwRvta29V8WuJ9696YtTUvfR
4yfMtFkLZI7Jb6bgc/H3M5hTkyxNn7Q0DV0iA+PR62bLN8Dfi8VriB12042Z
0E/qQ9/FRgV/4KSw1dP8MpDcKuhIc6uCMjAezZR/uan0hXXRtmt/kYHqs2Tu
+I62Kehg5HThq6Wg51EWu+t1ybJV0j/4U+tOfV1cOPrM2+++Jzzru8PHHJs+
koH3POj+ONYkaxs6/tDVRf38MSXwDvSKLfbQ08XNoBFvyPP8hixzfC7tPD7K
8yoDNX63bccu82zhSuK7Z21rLIGCbxX93h+f0bZpl2evXXfzeS3AYytb2xEe
g82E3KI98lE3bt7hvUsc4cn85SQGmCr6+DXLS1rEfY74CZ/9fgLlF4wZ3wq+
M8bI+mZNzHJjoMiY2aKPFxWfG3aAAnKANg8dPi6+WHRPYjr+eliHzMWKlWtE
58UeQH9Os2NXOxZbDlsRfxSFvCTWLXET+Ca8BJ79otsu/6vesXJ1Rr5TvLxX
zQtljp62/dW8UKBctcYi49PE55tm9h5wZOC0WY4vCbsBOx8bQseNTHzMPoNd
A0/c/vW3EiPG58TvxHOR9eQnMzbmHpmKXH/4mRLiX8PXhe1MmfzOHPk+DL/4
fXdbXh7U4+DJxPZKWTtF8rBSroutgK5BXchAdAXyfSZOmSnvO/i2+pd9HtmD
PgD+eY7+jvTJQOzf7PQpKAM/8MlAzYn54MNP5R2epV1iq6wxzYlEJyH+lfel
KtKWM8dlzHuuf0Bl4MgsZGA8mkbPEfm2ZacZPnaKrLNQerU60TLbVz4zVmLY
/vXL//iVS1auL+Po3GuIyEAnfzOxDGR+KMRw0VmDNIO/A5rxy0B89n4ZWMiV
gW9Pny94RX7S18tuHt1ma+8h66fPWiTPMU58qfz2qytfiUc/9nxpse1lT3Ik
A+9pcGLc10WHfK1Lf/GzL3R9V9CTn3fEygEnFt+uywDHBjx+wssBXLzsY/F3
lKxUX+L8+P/hafDfQqVqio9k9doNoqOx3pCV1Il9p7569h/CK/fsPejlvajv
kjXyzbf7RJ9n/ase+v6K1aLDfbhqnZWdp0T2kPcguqqlcdVp0YXx3SIr8Ss9
+EyxuM/RhwPfHY3Zf6/8gpwB/CnEMuGrGoODZ5NTut/al9gp/D3dygXWLrYv
9gbyEbsMfRmeQrwIeY/s/tmNhc5ftFxkqdo/xANpU/VW+sIcIVfwXVGIB8L/
6C/5DdiB5CHssLLm8w1fSW7D9p3fij2Gbw18yvkZIfulgvFA2gDfkg9s50l5
N//DG8gL9ctA5ESRcrUlBsaYN1i9gr937d4vuL/00y+Sb4oMx18Av9/5zR6J
yVVwdXot+F3JTWD8jA/bl9wJbK14+N1v+4MNq7pOmAxEt+c74a2uDGTvD3gF
3wNHTPTwrXsNoGtoFpydtfY19D964lThs+ABHx52UrJ98stAYrf8r7mIfhmo
uGZOyK8uU7WRfAfuiM2R24P8wV4iZxfddEFABmo/ddwZ6zlrmkYGsvbGv/mu
+DjD6JW5oM+8i97Ssn0fT8bo+mFuiXWwftUOZN1BW+J7tToCMo/cE5WB4ADa
gO8ULvOK7F8Kp5krngxEJ2D/Krp7UAZOm7lAxkO+jsSd7Rh4j7XGGHSPKzKw
v5vn58WfIxmYYyDF3T96y9Io+8zxwZPLFiwq//w545Rtlpc+aPVW5cuqD+IL
wYfk7HnvJ3EDcjbho/jUmrXpKX46Sv3mnUQOEjfTQj34NtDx0DXxG+l+IPG9
9hwkccbvvz8d00/kJvkX6yyvRwYi59pZur/ly50RP5jl5fjXWOf4Mx59vmTc
5/JYvuH4PNK9fG4d//Cxb5n7Hi9kptr15McVtu7zVh9nPa63Muc/Vg698fbs
mL4SCyVPLT09TWypfz0WWw/jlPatLYp/i1w6eAq5Chd8/kByR1iz5BVR2OeB
3ce8HjzkjO31wWNj2sa/SNvIFcaMjXnazdUL7ulQGVi4jC8v1Oo6mhPszMs1
TwbCGzWOQ1+Q7f65pcCX4VvEfdC51V9OQe6Rg4D8JE6NT2767MUiL7WwN//v
Vlcj1xjZjt4Thl/8gJIDGPCnw59btO8lZwkEZaDECN39rdi+2Ct+/yvxNWw1
9XucOnNO7HlseS2c3YCPONk+xdqBRc2ygB1In8JkIHYgMghbini4vzAHxCIW
WtqinA70U3NqgzIwIU1bu47nsPf+9VjBuPRKDIAxFilbW9Yw8QQ/DpBn0AZl
4PA3zFP2nR/ceDVl3oJlsi9L61cZ+K3VGQ9afRT8h9EMe4tVBpIPis7t3/PS
rlt/eY6+EuNFPxw8YlIM3noPHC31o0fwLvsrwmQgNnZOk4G5MSdGc8+xd4hf
4B+E3vQ8EPS9lW6cfcXHn0ncbcPGrUJD0Ad+U3RLx195y9Pz4I/wU8mLvJUu
frkbth1y1+o0aSf18T71oB+zF5AYHLKAfDVy3+BrE9y8sPW2TWJ97y9fJZ/J
mcbewNc2a/77kos3bMxk8RXiI0GHZ40jh1lLbTv3t3V/LPWT28geLH6Df9CP
Domes3Jcc2yC/II24U8vWLuEGNv8RSvse33N/z6YT/QC3ftALiN2ATYF/J+8
A8nha9RW+sCeXXCL/CBnATukQ4/B5m8P5TevDxojbcFH0H+fsLYJNshcyyfI
f89bpKrwJtYjhbgge+Sx08Av/JEcO3gO+fX4UmmH/AWxbWz/iNlgS5InEMyX
VxmotqbsOXPtIc2lURmIbclcQjsUZAo+V3R27Aj8cszt//OvZ2SM1IGfFFmD
3YLvlj3M+CCRgfhYP7V6+f/9b147rx3Erl3+8VrJJXrS4oFcDfqLHzgUv40z
8k/8/B7aIEeQMxn8MpDcEmSy5rtgC5DHWr9ZR+kbcgX/GnHCPXu/k7bxGWJv
MDeT3p4lsU/aYq9Fsn1SesImQafEN0zb6ILEA6nnfTt2vwxs2KKz5JFSnNyj
gpLTuXjpx5Kb9rzVK1kP8xY58UD0nYx+zhYfhT/OnRRNu3L/woVLYseF0+tY
oQXaI58EmxL7jPgA/gF0YNbupi07pC7WGjYs+dzIfnJByX9Fh1BfKO+hG+yw
ehNyKB7NVKnTUvKNHdk6UXI+WT/YdvAicuewA39z4wjoEbSDPsMY+g0ZJ34X
bFdwwxrCDuzr6pAqA8WP+kwJa9PnLBmY28DZH5gqehO5UKwNAPuKGA58lRzp
jm4OBjwd3wF+QeVvPIefLXh+UYrHI695thN6YU3La1+1vMf/HO9+8tlGWS+s
DQC5ivxTHQ6aQ+/f4O5REj1u4xbJyaC/xALwW7XrOlDy3zQGj291yOjJEnNE
dvAMfjT0OmwfzYfN8rk4OjPrDF2T+Dr6Lu+ia2NTi6/S2mKsJXRwbCj6ydjg
oV16DRX7QmMV+GTJhcQ+BYilEIdQWcZ+LfJWh9h5wH+EjUt7xOTWWZtaY6T9
h04wJSrVk/eoFx5NTIZ8H3R06iCepnoLMoB8WvL5jhw9ERO7yZCBl8XvhjwV
n2mAlvQ8PHR08DZz7hJP9/7Uzm1Za7vSV9rGF4D8Vj1p1Zr14i+lb8RfiWe2
sLKW/Fz6Rr3YrLwHbp97qZIpZXk/fI3fnDyQ+PgNy9uDPrATyNXXPT8UfJXo
/ZpHwvfwX3Jn8JFg08L7HTo0nu8OGVfS0i/8dMYcJ4504uTppPvk/G1t6pQU
WWfY+9A1eg++Y8b9oXdWhSMDW3fsIzor7zPHnawMEhzafoJv4oPIa2Si6pza
T2J2Okc6/qRp+tr1xPRqn4FGkEWMA/8s7xJToC7obJlr0+oZMbTJ++AJ+Uff
me9prh1IPIFYquZwoZfHoxnJU7Xtk4eEj4n9GuzvoM/kksIzoGf0K/wr5NZC
l4wB/zprixxqaBOfNb569AK/DMQGhc7xD0UyMGcA/BJej+/cf/4Lf5MDAL9C
dlWv08rKDEduQB+s5+zkBeNzZ234v9P8mF9tO9t37pb9UPgoYTIp7n599DTW
829uX/SMU94nP573vj9x2tl3e/OmJ39VhkLT2AxfW9A9AhlnRST3nL/P/tgJ
+nLq9RvCr9Gt4cdp7r52rV/O7rDrkjVHPIj97qwdjcFpfi0y+cSps+KrFN+Q
e8YIz3EeGbbPtJlOrO3I8RPWbjvqxS41Xsq8wRMVtzfcvfPkbkh+4rkfnL2V
7t6KG25OA7Yo7cSbu0subSSaX/Qd6Ih58s8tfPuw5eeAxvjUFmKMPH/oyDHB
nfIa8qr4XXOk0N3xqbIXQutNFr9hfYV+g2eLM68/+s781rahW8ltPfZ9TNv6
HviFrtl3omOHDrPTJz2zgnnB18186RldzE0wfkd79EvnGByQg4oeclVkc5rE
e/3vZfTzvMxDWJ5XsjTN5zB6dfbXpgqtIAPZb08hdgsO1U7zrz3wBH7kdzsv
4IAxKy5/E/r82dPNGEcimgGX1MHfZ89d8OLe9OmSO+fqA1O86dpIc/fu6xyx
lpCZftzTtvQnkn05BqBl3SfgBydX4qasBXRC1YfQHfW37LajZ5/5IXhvg/+8
Kr4npwad2h+v0px2zR3Q3zKdRZjinAdn3GOx+Bte/Xue8/eXwn6OPPnLCi/V
c7xu+eSav349z4T165fTGXW6Z8rcin1G+RnnDZDjoP7h68Iv093zdjJscLk7
yee71XZuem3fimkPm07P/Umkz1Bn2Nxlfu5mJt4qZ5ynpXk+9LC7PRiLznuq
e1Z75mfSvD3aYX6HRPgNQhBP166F31NEOzyX7p6rF2xbcan2fGpq6u/uE7xb
ZZrOU7y7k/x3ZMW05Z5dpvUE89iC/fy9NJ2IXsEX8ga7rveA0c7ewNQb3plH
YXPH+2rXB/sexEEyNKN9BY+8m2ht3PKtjeA4lQ+G0cnt4MUR3Bnw+y5j/ZgO
raFfVX6lucT61Qfkp7PstRP/N817ydARU0XeEq9a7Mb2w86rCTvrOFHdf/Q5
5RfEYfAjoxfq2s66/qz4YOwzKr/QVSvWfFVieqIHX76aab3668hO28p7s5y7
JOc4Xv2J+uv/LSWknhja/AP4zWrMcXGXRNvZxXvidRL0lWbd/wwcJR5LIr3u
z6BpjbEQ+yD26OzpuOrhMG49KbF0n2hekqGZ4HgTPRN/bcTvb7Lzea9AbsyJ
SRaYb3wNd6p9Zw/X3Udzztn2f939QLR1r91nGMG9BX8mTV9276S+02OKIII/
A5Lxg+XEthOB7lf8a9u78+OOIOfCn0nTf/X6iOCPzted78PdDHfSDrub73z+
K/t2N+MhgpwDfxadJeM7j+DugUhfiSCCCCKIIIIIIogggggiyF0Q2YERRBBB
BBHkVohkYAQRRBBBBBFEEEEEEUQQQQQRRBBBBBFEEEEEEUQQQQQRRJCTIZkz
miL4M/Ed4fivw3X2ziuLIIKsIKfRU27PiXHO53TOwVZcJLpHIII/DqlxzhCP
4M8Hzkq+kcNxzZmcV6Kzyf4SiM7NzmFw3blrhPvBuGeE+1r4nrtE7njfcjBw
tj53xdzpfuQ0CJ7RhZ7Bna6c/Z6TdQ4td7ofuQG4z4l7lXKaLZgbgXs7kX/c
8/xSmVrm8RdKm02bt5ulH30qdyovfD/8voYI/hhwtn7zdr1M/Vc7efcXRWdL
/Tng93ti+6FrlKveRO6m1/sQchLvgnbQW6fPXmQ+XPVZjrd37yRwDjgFXL9Y
ooY5efpMzF1vEdxboPd2cUc5912/0vA1M3/RcnPhwiXz8afrzfNFqphVn3wu
d5/onUJ6DnzG52veXZLx7jGSZ67GPsNntTdjn8u4lyn4O4As1vr1Ppasxkk9
Me9kuv8txfMhyd8Bea9jim07a59TcAz+9+FbtRq1NRVrNjO/ud+nBJ7xt+/H
u9/f5ce59lv+DoyR2KP2Rdpx3wnOVzJzkOU43fnVdsNoIth2ZlzFvqP32/hx
EQb8xn33AP24fs3Kh8tXRddo3LKr1HFdcepr039n15UAjccba0pIP5OFrOg4
OM9hdKH9Qabjw+Fe9UZ2jHLfX5x5iodD/e56gAays46Sm8PYte/He5C3JOq3
f478fQriyN+Hqz66TLR2Eo0L+w+bgTuhHn2upNzr6b/XNIJ7C664d4Zt2LTV
PJCnmOiQenc688pcc6+l0o8WvV+b+2aRjwDPcP+y3D8b8JPLpYOuj+aG+0y6
+x0xR9XLaYui96WG+XW0aFt6H3qicepz2jbFz+e13PDd46vvprpj1bt69a5N
xUO8NqmXGJTexws+dbzCh+279Zp1NFVqt/DaTPXhzy8bvN99/fPsHMWDW7/O
m38MPKtzdvNGRl/0f71XFJwkMweZx3nTG6f2kftNGaf+disQW9b5Ux1an9P7
m7VfOk6lMz8uYu6HTXHubqdUsHpFhZpNvWe5b1jf17tntY86J4oPr+0QXMt9
xu6zehet0kF2eaCWMDqWeUjPmAd/m2G6hMrAIuVqm7Zd+jt3wYa0qTTi4eV6
xn2//u+C405mHTl3Pd/KNId6L63MuTsOpbEbPnrXd5V+GH+8udf3PDymG2/u
rwfuBtY+43fRtrXP2h+lc71n2j92/zoW2nHbmTx1rnkyX1lz/MSpHCMDc1tO
jPKdOQuWiT3yfOFKpmGLzqZL7yHm8JHvzbd7D5ru/UbI/0qfX+/aa3r1HyW8
u9eAUWbPvu/M+MnvmqkzFwo/4ffufUeY3XsOeLwNvEIvE96aIWvw4KGjpqet
47P1X5p3Zy8yLzdoY5Z9+KnUv//gYTN45CTR2Vt3fN0sXvqxx+sA/l6ybJVp
17W/qd+8sxkx/m1z5Oj3MeslY3wZcSHe4R76hi26mKGj3zQ7v9nrrV/Wz/ad
u03/YRNMg+aMf6hZsXKtF/P+4cKPpqcd69rPN5nlK9eYZq/1EB/mXIs3HV/w
nH2+h28Rg5oybZ5p2qa7ebVtT9EdT546662xOk3ay/3AX27ZYbr2HibPTXxr
psRhlXewZtdv3CJ4By+9XNzxO20c/M7B54ZN2+xcLjWNW3UzbTq9bpZ99GnM
/dmMFXy/+lpPsRXACe327DfSfGfn5KZ7Bzl/x5uDMBpini9cvCRz3MzWDY5H
jH3LfHf4mIwT+oGmNm7eLryGu+l4Z+/+Q2KrfbZ+szx3weKZOpq07m6hm/z9
448/OzqSbRvf04TJM8zGL7eZ9t0Gynz673nlueMnTptufYebl8rWMsUq1BV5
MHfhMuGPvMv9sLT9nUuD4JV6mfee/UYJ3RPjGTLqTfkOGt+2Y5f0W/WDU6fP
mdETp8pagQ5mzF0iY0rGv6o0GY+OoUWlyQPfHfH6QTvvzHhP4pl+maJzoDKw
UOmadu77ZpKBPMMYPljxia1zktnx9bemh12n4Jr4P+ULi9dufYabunZtd+sz
zOJ5u7eukllH4ObEyTNmzBvTxN6m7vEW52fOnHdo1a79Ldu+Mb0Gjpb/4RsN
mncyA4dPNOfOX5B3+wwcI+MdOPwNs8/Sh9x3b9udxtxb/vHllp2mU4/BUvc8
O69p9vdP1n5hWrTvLTiaNmuhxcNlr78A9Nva4qR+s05C18w9uPD6M2C02WbX
P7TBuDr0GCRrHX6m6xgcsXZZW03b9DDrNmw2b787X+JGx7/POTIwt4H6QZnb
MlUbmeeLVDaVazU3DV7tbI4cO2GWWTnwP//Naz78eK3Q+Te795l8xaqah58t
aeo27WiKV6xnCpaqKboQ/JLy/orV5m8P5rMyZE2Mjsgd9CUrN5DvoJ+Hny0h
ddFm6SoNzKpP10ub+YpVMw89U9zUbtLBFK9Qz/z94RfNsNGTXf38hqzf/zzx
kpWbr5m2nfuLLyJvkSoiV1kvsf4Tx0ZCtv3r0YKWL9a2cqiXee6lyubJ/OWk
HxTk3f1PFjHPWR2AdUR/eH76rEXy+8FDx8wTL5QxRSxfhcc0bNlFnvnHwwXM
xCmzYvRKP0+CX9W3/OS+xwuJv5P18+BTxSQudfz704J71jsxhfzFq5vq9Vpb
XaSd+ddjBUUGXHH5CnHaf1g8FCj5smlp1zr8/YGninrzsmbdRvOIxWfBUi/L
fPBuodKvmPstnha+/5HwMXhB/6HjBZ+l7DzUbtze6jyVTdFydWQu1tg1T9n9
7QFpJ3wOwnnvj1Zm1LHPMk7ibch0xkkfmBdk2yOWZlq27yM6EPKCghz53wfy
CT/Gv1S3aQeL9wKmap0Wpqq1jf9p/4YnwdPgocjtR58vJTRTuMwrIp+J86kM
pH/IkcatupoCFqeFy9QyNeq3MZMtbwPXJSy90j/KZ3buwRl4h47R6R56urjQ
P3eoF7Q4oL3HbHvMz3eWBqj/5KkzpsLLTS0NFjY1LQ2Wq95Y5ga+nIwO7dDk
DTM4Dh2jA8KfkS2068xDe1OhRlNzn6XJRpb2dMx+OyUrGag+nNcHjxVaL2zn
5sUS1YX+iG+t+Pgz8+DTxczzdm3Us7LiOUsbtI1fiLVH/fHW0ecbvhIaI55S
tlojqR8cVq/bSsZYpVYLc8LijTJz3hKhXfIOSlVpKGPjeeRu+RpNLL3VlT7x
DJ/RIaEZZy5KmxdL1jA1G74mc/noc6VMK0tT4I11U96uq78/mN/qX1MEh8z5
oBGTzD8eKSDP09aDdo5ZI+juFPQX2sJ+hl6aWR0UPvDo8yVlXIwdvDa1Mvef
th7WbvV6rSyeqsjcg8OjR0/kGBmYG+8PVF8ouhQ0v/KTzz1/w9KP1gjdffrZ
RqHx2o3bSbzhy692Cj9gzaOnsnbQtymsmcfylhaZ5peByMxqdk1QNn21wzz1
YgXhlSdOnvZ8Si079JaY5HbLE9Wn0annYKHHb/ccFBp7pmBF4aVavtr2teh3
9FF1aB0XfcZmeMDyY+GXlpb5Dj4Jf6ll20dGov/x+8mTzjqlL9hn6AX8jp6H
fClRsa7o5hRsQ3hhyUr1rS1y2eVJsTidMn2erD/sGfXvgGf4wqjx78hneNrD
z5QwS5av8toeNOINmYuvd+2T/qIno58jayi0V8LKpiZWplKwr54qUF7wif1I
QZ+Av9e1somyes0G82/Lt7tYuwuex5rFVi9eoY6seWwASnNrq4bPQSmnPz5/
nY7zLWvnwh+wU9TPynwgU17r7NDF64PGmmcLVTJnzp73bKrylq8jiylTZy4w
9z1WyCywMlvL7PkfyHdz3lsqn9tY+wNamDX//Uy+dpEF19z9Dxaq1m0pgG85
zdVRoD/krNIg40R3u3TJsYOwIZgb5OHPP/8q3723+EP5bvZ7H8jnvkPGCT2t
XefoDGl2foZbm/c/T75kVq/dIN/Fyx1Tv8tPP/1inrO4CNIx7YI3+oudA87X
f7HFsYUs/Ux4a6bIW/i2v53syMCR4942/81T1AwfN0W+B1fQFTIR3n7+h4vy
3JmzP5hKVm/DlgbX4AtZEbaOyCFgXP2GjDf/ebywWWptTeYYWLDkQ5lD+AQF
nYx62lr7V/2vI2yf/v5QfmsTD5A+UbARwbP6CF7r0k/0hA+sjk05bW3LSjVf
Fd6jPiTkZVUrb0vYNQnONm/daR6wv+OXUl/mV9bue9zyp47W1qMs+mCl1NG8
XW/RLSg7v9kjPAxb2KGBFULfA4ZN9OzpNXb+87xYXvANHnKODMxdvlA/H/vY
yj7sgRWubUH5wNIWvHidpUPoI0/+skJPFOI80ALrGdsN+4nC+9TzsStLVSbB
6zTuhT8D+sa+ET5r8U4ODvoc/sJTp8+KPnz69Dmh0fstf8GHh4zDLilg9bj3
lqzwfIqUYL77FTd3a/yb7wqN77B0rXwD2wqf1/ad38bEOC9bW+SolR0HrO3S
pnNfGRdxcNrB1h06ZrI8h/+N0n/oBNGbf/nlV+EBGWvAoSN0W3gLz4sNdc3x
q+zavV9kKesSOxHd95pLexTkJPrq+8ud9a5hEObg6LGTIruwk8panZQ52Lz1
a+Er785Z5I7jqnyP7goPg1+NnjBV5mX/gcMxY8AHwLtbtn8jY0Uehs9BEZER
Ur/H450+w7uxy8TH6cb86DT15C1SVeYGHgrvXejKuK9se9AW8ozxgSt0avAC
T2Ee8JXin8fvyRigMdqBt4fxHM2tZU5VBkLfaidCf+hxGTRY1MyZ78i2tDRn
XsARtgoF3n/4yHGRRVOmz5fvwGeFl5tJH/H1fn/itNUftsozI8e/HSObguDI
qlTRYUpbGyiMjrF58CtjhzFuivqbkT35iztrzR8nzY4MxBf4lOXdP1z80YsF
w8+ZX3yY587/YG2kg+KbHD7mLcHRIYsD9Ln/5imSaR3xGzID2sTWwu6+kXpT
xql++ArWnitbrbGs38XLPo7RFygrV6+TdvhfCzYYawAdhEL8Af8H9Yk+aevq
aG3vwna8/lh3X9G1Ksrv0Db+CPRxcHzQ0hb67CuN2ootiD7HGiP3XX0qGqcv
U7Wh2KPQXbfXh5unrY6Jfqm+YQq64dMFK5hjxyNf6L0MycjA9V98ZU5anojv
4Y0ps4S/wkPlfbsW0Luatekh74TJQNYivjJPBlp+yDPkn0JTrOd9ljcXEJ9g
NReqC6BnoodPnDJT3l1t5UPJyvXlffyTNeq3NkvsugrqL9AyBd8Pcgq+ov4j
jR05cfRb4udqjm/H8lvkHsA6Kla+rshF1g+6I/YO/VU9ePjYKeZZ+w7rX2Wg
8iP4nPgcrT3p5d5cy8h1QNenz9gl4OWKm6PIb+vs+md8ahMhn7BLsR3ASb6i
VcWGqVqnpfQffu7HJ7IIPxBxG3w8yKV+Q8cLHi5aPNCuyuV5C5cLnyAeCn/I
X6xa3DmY9PYsTwZmGmfjjHEKfwQ/lofCb7EpyC/hOeI2FGQyfjT0eerCpn7G
8pN8xfztVhfZgq0GfltYXR3ZQd/DclDCZODlODJwU4AGwQWx7MesrYEuIbkz
ti5kHTYBNi50j04DHv39LFiyhti8xFXT0x0+Gm+PC78xZ2s//zITHaNr0C7x
KugNmnfm84r4qC7bcVep1Vz8teA41d1Lkx0ZiI8BXZNnlZdjZ9Mec/6i4t4C
z4lP0K5/7MZn7JoIriPNTWGPK/oO8kJjEtKv6zekP+ALmUlsDr849q3moRBj
f8Ti/WM3/9zYr/ld1sASZw0QgytdtaHQG+OhDZGBVif6xR0L7+Lvx0dLHxkr
4ypk5Z1/vp4uUEH+R04jk2mH9lS+gVt85kJ3th78sMQMNM7IfGD/wwsft3MX
5cTc25CMDCT/ArpAF4KvUlTvQjdCXsCflJ7Fp2p1OugCmiU3nfhA1RAZSIFe
iYfj52zffaDolZ9bmtywcavZun2X2fXtAfGhZeSNpUosDxokZoAepz6SKx4f
dsaFn4p1cNjyMviCriFkhPBN+/zLlv8QG3vL6rrgYZe1s/DLiB14NcWTgfg0
KawFp+7MMvBairPvj/bhucQPnHauCe9G3isP8cvAq678pIgMfKaE1VFXmVT7
PHG1ouXrmBlzFouNCH5q1Gst8Qhw7JeBIqPcnBPmCt2Zgj2MHUbsX3UTCrYL
Njl4hr8hs8LnYL/MATwhg++mCl3Ak5FhnLNAveCYgs8A/yc2BWXMxKmCr3Pn
L4qfrXWn14Xv8DzyHHkNbeCX3bBxi/xNu9iE2GTYP6WqNIibfxKUgdXqtZI4
o8qAeDKQojLwUVcGUhirXwbSV/QBaHnLtq8FNwB2+G7bT/z6ykPi8RJ//muQ
jvEZEkvAtwJvHThioktvv3n6Fb539A1t4/fIQGT4zz//Jt9TyHPBDsQ/T2wW
G+yLTVtFL9q994BdA1fFh/pYyDpiLIwDGUisDl86uEROQBv8rv4Q8IcMhLZV
5oTpzeimYTLQmXtH/0F+qgz81e0LBRkIjdGHEVZug8eVq9bJHFEncQPmmXgg
7S+0eofKQIrKdpGBzTrJ+gKf6GOse9oBzxRsamJDOSknJrfLQHSxoAzku0/W
fCGfW3V8XfyK+PiZ7zPnzlvZ10t8JG1c2bjZ8mNkILl2WpCT6F2vNHhN6A7e
Rr3Kf6gL24L4G/zUn/+P3YKeis+FGNy7Vg7sc/15FGQnenSfQWM83i7jcn2h
iy2Nw1vefGeO9w52Efl+5AWetTYKfB9ZqYX1Bb9E9qgvlDbCZOBz4gv9LcYX
qrZe3yFjxZ+DjNJyxuKCnA38ijyDfQf/D8rAh54pIXkK8H9kF/JPC/wH2Vax
5quy1qnfj0+VgW279LP6a23hWeS/PfJcCfG94r+jLfQVbF9AcjbtOsZWC5sD
civ3HzwiuoN/nOCq98DR5iHLR1S+yjitvIQ/VbNjYy54bveeg8J/ew8YLfSw
/KM1ng3GXDyRr4zwWH/BNkJe0TdsdWyBZGQg+UUV3fwXCn0Az+CbsilAg54d
aO3OoAyEj+IDoKCzkC+juZRKv+Qo8r7iJ94+Pn4nr5SYXpCOaYd4IzhhnMg7
cK+FcyvQV+C9flr3y0Bw/lrnrO1AaFZlCT5v7G18Jv6y78AhiVdAm+hj5MME
1xFz2bXPMOkDOV/ow/45pI4n85eVXC4KvAO8B2Wg2oFSXBnIdyoD8YU6c58h
A8lDYh2EyUDqXrR0pdWPC5klVu76yzpr177vxt+RgdofnUtwVbl2c/FdUcgn
xg/ykc9Xi76Ifxc6Jhcop8jA3AgqA9Unv9zN56S8v+IT+W7Vpw5tou+Qx4BM
eaFIVZEL6EvkS0Lj0CVxaXwPrEVyGtD7iJmja5GzgT/EWctFhW9Q1G4gr58c
RHwQ/D3Lvo/vCztvz96D5sKPl4RPkrfIb+zhZ/2Ro4dPj+Lfu+zkZv4ifBj+
j83znl2D+PH/3/88Z0ZNeEd4UtnqDi2T67zg/Q+lfdYFdon6QskhnOSuf5WB
Q0dPllyUMBnImsCGQU8k9oAdQR/BAWMkR4UCbuDVfhlIHgByD/2c714oWk3w
QJyKOsi3w59U6ZXmwus0X0HxqTKQ/AV4xC+u3kpMh1xR5g25hzxiTwx/4++i
EJ8LmwNisuTEaD6LXwaSw0idyFtyW5CX1Eue6PuufX7V9UmSs4rORCzz0qVf
PH5GnAlbG3sXXDFP+Nf/z33PSD8o8FhyOBPtQ1A5g8+VORwy+k3zlbUByO1h
zyD4pmwM0CD4wvZ9yOp402c7cU9kIHFj5v4N1w+86pP1YjOhI8208mH+ohWy
t+d//vuClwfGGsLOZc+tP0/L6dstkYHQRRgda/4Pa4c8DHQW5hza5Hn8eNgw
0FeYDMReadWhT1wZOGDYBPE5OzR7Q+iOZ7v0Hib5W/gyicFhm2L3EavGf8Hz
+HEyr6PnzbAxjv6IjwK6rVyrhfQfeiVXE534c1fGzLM6B3jXXFLFV0w8MN2J
B/KdxgMz5j5DBhIvLWBtT78M7GvlOD5bniMvG/v6sbylxPeO/EVG/t/784qf
x+nPCq8/fhlY/uVmplbjdtIOsRLi0vh60QHmyl6ydkKvtH84B+XE5EZQGUg+
GrxQ1zHlw1Xr5Dt4stIrviXyU4j1YMsg8+At7DnD9w/NwN+LWV6GfGCtd+k1
VPIf65CTZ6vBJqHexa5+pjkW8Bz4H2sdWUe8iD0F8CuxF+xa/WLTNuEv1E1+
cn675nkn/t61NOFj8FPqoz/owezH0nx6eCQ+S35jvw85Y9g28GOeIWb1QtGq
ZtrMhTEycNyb74qPJygDPZ4jsb3NpqJdT8gIYnhFytaWPVrggefoF7ZJik8G
Mkbwozkx6J/IY/rHGLCZWlg+V61uS7GPtmzfFYtPVwayz5G5QcfQ/Afk5ZiJ
00R+w/PZQ4h+wl4wCn2KNwfCzwPr3OGt6bKfCn7DO4xVdKD3PvDOXPfscttH
bK2xk6bHnD2kNEhuPe8/ZXGFX2+ulX/MO/iFb0nslFhYaviedP+cVq/bWvhb
j34jhS7xg2ou7VcBGuSd3Xv2i14w15W5yJVjVsdn7qe7+UD0g3eID+mclqhY
36z8ZJ2HY3IgkfPkzKT5ZJX0z80rTETH4i+1bbO+yEd+Il9ZwSt5kMhVB29h
+wMviy+FPZdx80It3bO3Ab1IZKCrm6Ar9uw/UnI8oDPwj92N3uvs7bsVuo6o
z5kHZ1zQLHITm5Y+Y8ti5+kef3Qi9TsoT4Hn8J3kdhtnbzy/+9cAfibmHl6h
MpD9nNDLbz4ZOGzMZNHFyOulHmxc9teQ08aYqHPgsIleDij52NofTwZaQP4x
fq2XvMDyVldmztGJOvccYuXqO5LDgA88Oivt3gf4yo+XforJaYOX6nesE3Re
9hH4C+viCasP9ZB8gHTPNkB3PGR5ADYU37M+iXMQM0LuUu9lN1ajoDFGnjtw
8IjEmpUG/TKC7/AdHTp83LMhE8Vf9FwL3mG/mq4P72wat9/sJ6BNbFXpo5Xv
Wgf547rWFNA/+T4eTrW/1E1+IWcqqSzQZ+jLTz//EpgLxY8zF07MzOLzyDEr
j885cti2jZ7LuVbx8Mk6p3+3bjn5jfDmnbv2xsxf38HjZE3DK/w5b/HmINE4
6ccRSw/kdPzs8pjgs1ddvIadRSV1XHFwBQTnlpiT0FAWtMweFd2zST4O71AH
eAbf1+LgTPrGPPu+y5h757sUFxfQMzIOX7XKF431vfpaD7HVE50rkIiO/XmO
9FlyZY99772XiNciy5j3eL/T70sBmtV+M//EbtmbTvwCvq5n1ySzjpROoE3W
PvEL8OvvM58dnhJ7BlyQ92SsgStx555xXgp85x+f0+d0L98AGv/R9WFrzmoG
j4ulRz+tKN7pC7RNLEH3z+MTj2RfzgA9E8W/ZvU7zVd859355v/51zOSm0Ye
NTog9gK67KYtOzw/meqlzlkMt7zPeh5XWFsKTq7ZDeFh6NAa3/H/znd6Hpjm
/CUam+rMzjvpMTmc/jplT5Pr0wjeixLWX3/+d/y2Y+sO9jfs7qQgflRXp+8e
PuWZxPjUuvWsG2zWB/IUlfNoyBtvaW1J/JUdffu7M/L94s9BVuPkvRsJ5iXR
3Hu4CplbPw1lBVfdORQb0sWvH9eJ6D3Yt+B3/vmgn3peNd/BU/GrD3P30cTb
J5EMHcfMQ1py86A5V/F+j0ezuh70rDC13/32ZlbrKDNu0qU9f5+TxXvwu7C5
j//dzdA+p7t9lrzdlGtx2xY8BtaljEtoM93jEUobydDjvQK5MSfGD/HiK/o3
/PeD5aslLw7/kJzV0amv2bZjt2NDBPwz/vURvCs2ke6k/oisnomXe/B73tH+
xetjIhso63bjtx3vDt3MzwXwmUT/UnzPwUM5q4P8ffzU+PzwLSELlX8H68tq
DrIzzmRx9ntwlUxdfhwmS+9ZfZcBGbYUtjlnIq1d/6VnG/9emgzOQzJ3iiTz
XJZr7+ofW3uxuPljOM7uOkn0XTx6jj+/WY87sgFzH6i/Bp8DOq+cfZue2D8T
wZ0HkYPEq9Idn47kEVx35jP1d5z3HEF8PP8a8JlHEEEEOQf0bhX/Pres/DMR
3B2gOqz6kNS3Fsm/Pxdy8h29EUQQgQPZ9UNGcPdANHe3H793ug8RRBBBBBFE
EEEEESQPuT0nJoIIIogggggiiCCCCCKIILdBbrw/MIIIIoggggiAyBcaQQQR
RBBBBBFEEEEEEUSQuyCyAyOIIIIIIsitEMnAxPBX7nvKqq1oD1YEfyXcSXq7
3W3fzvqjvagR5CSId9bxnw3B86rDgDN9I50ld0Dw3Ma/GpKhx9s51tu97oJr
KZlzSZMbi3OXY3RuTgQ5AaBn7iQJ3s9zO4B7amgr3lrknC/uf796JSWSg7kA
7vQcc5eS0ONfYM8Ex3q7113YWvq9+OY9za1X+Xf+/AW52/dGJAcjuEdB7+Di
3qz8xarJ/dCJ7oT5I3DZvVuPu8i5k+n8DxdlHSnv0bv3uHPzoaeLm0lvz/Hu
nLvTeIrg9sGdOo9W6XH67EXmxRI1zMnTZ277Xan+u+Fv57rLvJZme/dcsJ5+
zxj17Fm9g4k7+wraddykVXeRjdejs9kjuMtB7/TWv1kn3KPCvUh79x8yDz9T
3EyZPk/4AHop9By2Jv1ryF9nvGecdlI8nvPGlNnmsbyl5R5PuQ/bPZebeyq4
A4g7z+FJ8xYsd+62dPt51V2/8dr1n++tfydz5rfUG8BLouf1/hl/H6742rrq
G3eQJ+g71916gvI9rO74eE/Mb3T8QZ6X8V3meoPPZLQdfyze8yH34wXb17/1
LuYPVqw2lWs1F/qDFhLNlb8PSlPBuQcnGTSSee7948L+ow/Ih0efKyl3IN/y
3R2X+b2rMX/7nws7mzyjTymypvbu/07GyphpB/1v7/7D2V53192xJcI373Pn
y8Yvt8lamrtgmazzs+cuyN1oM+YukT7E3msbjl+9R6ZRy65mxLgp3nn66LDc
Ndql91DvfPaw+QviJrt0DJ0G+5YlLcoz/t+vZWrHzyPkmSTXHn8noqt4a+pu
gDvtc7mToHdhy106qane3yoD9x04bB7PW0psNL2H2f7g3BEdmGsp6ca7C9up
x6U/9zmK3kut5Vf3Lu0335lj8rxYPkYGarnu3mOpd2Lqnau0l+72h/UnXXDv
RVcap67g+OArlHh48bd9w61XxpwgRqV3FAXf8+MDPqH/+++3849Tx+P85tTN
d/q9jvVaAKc6Pr1LPV4/necz16X9BDeKy1sifzL6qf2HTzMXzt8Zz/jpSepL
V7y5d5dey2gjAyc3vX7o/ePYYP96tKDZvWd/zPuZ1+71TPWAp4w7VG/FjNdP
d37867jkbo2bzjOTp841T+Yra46fOBUqA/nsx0G620bwTnjmxv/eLZcedd6/
3XPA/PPRAnbMC52O2WqQgY9bfTDpdWdi6czDt68PShvMATii79qXX3751Tz8
bAkzasI7TnupN2Pej8GdfRdezv/g6rnClU2bTv08PIBLvVPZvyaDPDeIG/2c
DB378StjccehfCOMFtPcufLbpYpvf906Tmg80drz87xUH48IWy/UqfX6134E
dxaYB6b26117Tb8h40y9Zh1N1z7DzPvLVzv04dqB2GZTps83S1d8Yhq36mY6
dBtoln74SYyvHxpctWaDad99oNTTZ9AYqVf5kRMzSDVLlq0yr3XuZxq26GKG
jn7T7Pxmr0ebyMAn85czZ86eNzctvcC35ixYatp1HSCy+NTpc6Z73xFmw6Zt
0m/qGjJqktmz7zvTf+gE06B5Z9N38Dj5rHfbs46ob+S4t+3vXUzrjn3Mpq+2
m49Wf2b6DhkvNiZrLogX6Hr7zt2m/zCnXnTaFSvXCq0HzxVy/FfYLp/Y/rxp
du3eZ3r2GyX68VvT5sm4v9r6tXmtS3/TpHU3a+/OMhcv/uTdx804N2zaanr0
G2nqNu1g2ncbILjWtcb/yIQJk2eI/t7e4r9Np/+/vbNwk+pM9v8fcX/PvXd3
726yG9ts3IgQAoQAwUkIgSQQ4u4uuBPc3d3dNUiABBIsuLu7M/D+3k+drp7T
Pd0zAwwMM13f56mnu08febW+VfXWOae22LTMp2GjJ8k7jau/9YVr+FMHiaOF
7YCw3mFbi3bdXR9v70+fPd+9/fEP7sd6LaQsnI/t73zyg++fL2W/HTt3R3UR
fXzw4GHXxdfpzQ+/9cd+L77Sdva5FNg7LjKeajZoJeOA8cC4QJ9w/eO+ves0
buPG+racPmu+e//zWu7ND74Vfwefgr7ge6Vq78v7ft/66HvZ//CRozHv+8U2
kPbxfTFs1EQZk4wp3uO+3HOKvut9+uwFrlbDVn5MrBX9Tl9+U6upW/jrH5Gx
eVr05gFfL+rC+H7zw+/crJ9/cV17DXJ3P1rSbdmakQODMXLJbd2207Xu0Evi
fh98Ucv18Dx25MgxqS9ji/4YNHyccPFJ8fsuSh9+XauJ+Euz5y70ff65K1Ck
onvp9U/dV37+rVi11m3ctE180KzmHWWfNHW2+/z7hjJ2GKfTZs6V6wXtfVLm
BsdNmDxL+oR5tn3HbmmHJX+sdIuXLJc+f+zp513lVz/052rgZvixcfFiMHfj
23fZij9lvi71x372XQNX0PuTZSu/6T7243vStDkyn+s1bevn5yRpp5r1W7oB
Q8fInNZ3eNHXlKv/4FERrjnnhmdzHCu30L59B410731WU9qnXec+Yj9zfZn7
/ljqh06g3ow1/F74W95D78/Tvmtfb+v0j84N2o3xg54R3eTboHufoRnm3gmJ
FVySmDJtX/3tL2ScEqvSMst8OXREbKk3/Bhn7vOdORTmapPcEY05MQfvL1jG
3fVICdHZ5Sq/5W6680kZN+gzxgNzo1jZahLjZ6zxPvJ/3v2UjGu1kbr1HiLb
nizxooy3ex571t3vfboFC5dIf6Pb4BNs+8KlXhLd+7DXcXDezDm/yJyCG+55
vJRwlv7+x50FXS2vTxmji7ze+tvtj4leAD/Ube5uva+IK16+uiv1/OtS/n8/
+IyUD92EXmcMvvzGp+7mu550z7/yvsScHi36nNTnoULl5f3fYbtM585Ery9u
ubeIt3HLi34oWfFVKXuv/sMD3RkX7wKUk2OeKVfNPffye74t33S33FPEvfvp
j9J2XP95v/1vdzzhPve646xvE/hl2KhJYoNzLbin8LNV3c3+Wo1bdIq03Xn3
uq/bf3wfPVKkgnvq2SrufT/vKTOc+/d/PyHXfMnX8/YHikkfrF67QfRtehzo
rPQBeUe0F/xC/YuWfsn9WL+FnIv5zblKV3rdvfjqR+5fvj/LV3lb+oO2hCeq
+769+e5CrtyLb8lYuP3+p13pF95wGzdvk/E0Z94id5/vU/qRcfBkicoyLmg3
wDke9tctXKqqe7xYJdmnvD/XX32/0n7oQ+qkZXz+5fd9XWv5fjocy4ERTv/C
65+/3vaYlOEdz8lwFjE+xi2An265p7ArUeFV3+evCHff/eizUvdlK1ZL+6KP
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
uz5+H9ExkWfdBfetn0mgZzLOl5i2T6DPMsyXixnni8mNIzJeTicec8nGYbJ9
sxq7Ok6ye634OEh291c7jBgf8SjiMMT3yHMj5wudlHmbZHwXaFZr2FdSp+y0
nZblSvovcftn9X/yc4XbJbOxkVPjKTttHr7W5YyRrOqd/fbM/Jic2ufKxs7V
tXdW7Xu5Zc9q7GV3HGcci1d+zvi+j63L1c297MwXE5NrJcqDej8GsaULkWci
23g0MTExMcnvorEHiWmE8kByu1wmJiYmJibXSywWYWJiYpJRUjknxsTExMTE
xMTExMTExMTExMTExMTExMTExMTExMTExMTEJH+K5cSYmJiYmJiYmJiYmJik
lqTa+wMTSW7cO2f36uUvsf7M+fY4fQO0a25f3+TaS6rHQhnj+u6h69UW4We2
mFzDvr1O10n0DOZUlittj/j+4vjcfNeq9atJvpezwfsVeOdJ+H0hOSn42fFz
iHevxL+PJD8I9byR4grXS3cxbnhfzuU8gy7RuMgvwnu2aI/LnU/h9uAdBrzb
iPchpeUSD1q/poakan+dOh28k7nvwJGu8LNV5T2Qk6bOCd55lYPP0wyeaR+c
L/rO9abtXMnnashzrOPfkZmXJf5dQ7kplIN3l13La+j7A0eOnSLvKl3027Lo
OwYvZ1zkFzkZGd+z5y50BYpWdBMvYz6F+0veG+X9r69rNpH3CK9YtVbm6vVq
L+vX1JJU5EB9NxvvS+V94FVqfCTvkeY9k8w95mJ43p6MvNczfDzvamGsJxvv
+h4u3iv+2ntfi++n73H4plZTP7cquiNHjsp7AYP5fyrmnXlnzsTpBSlH5hyj
84+y6XHKS/FcHF9ufmdW5+g+ofNqefT95NST+gbvP0veLon+C/On7iP1P5Wu
F7OjSykT+pJ3gfPe8n37Drqz59LfE5ydemY1drQN8FN459uAIaPd7fc/7eYu
+DWqK8NtHL5monGh2+P7Jjt1vpy20nOfPZPYRtDzxJc9/I7JzPrveIQ7pkz/
2d16f1E3YtzU6HtUw20QjJ1T0e/h/trr++vMmXMyP5u07OxKVHhV3r/K+/nC
cy5ZHRLNzezYZtejXxPV38QkN0Tt1Z/nL3a33fe0Gz95pvwm5sL45J2T+g5x
tul3Hc+8jzIMiQEmuA746Ms67uHCFWR+CPypv6/bXN5ryzsw9dwg/P5SyhG+
NjpAr5VsPl+I7M87LfU91PLuJN5PmpYWcy3qGL5WVnVGryiidYnoBcc7NL3O
evipCu7DL+oEbRl5f2y8hOsR3X72bMwxuo9+8g7Pi5E6ZaXL9H3aLdp1c3c+
9IzYGSC79cxMlO+1DbQth4wY569V3M375beIzj8VbR/dJ1z2mHERepeVxgm0
fdyl2OMya8+s2krtLz23toP85+VspFzwUUwZXDCeou95DbVZ/FjX8Td1xlx3
58PF3ajx0+T3iRPp7XE+rj0y9texaLm4LvVC1I5LWofI+/PYptvD7a/nyI1+
DZc7tv65rwtNUk/UXus/ZIyr+trH7pGnyrsa737pvq7VxC1fuUbG5p9rNrhG
zTu6V9/50r3zyQ+uW+/B7tDhI3IcOmKUt28bNe/glvy+wn1Xu5l784Nv3cFD
R6LvmmZ+sMZYp3EbV7JiDXl/7Sff1HPtOveR+fmtP6ZIqapyfO2GrcRu/KlN
V7dh05ZozIf5v2PnHq8bukv5KAe2MvokXmcLX3r+5H25P9RvIZ9tOvXy5f/C
1W/azu3Zu99t277L1azfUupUv2l79+fq9RHbOuCFNes2JqzzhZBdsHTZSle3
SRt5D+9XPzZx02bOk/b6Y/kq99m39V3BZ15wZSu/6T7+qq6bOHV2TPxK7X3i
zTUbtHTHiAPL+uE5d9zb3TV9O4yfFNginLeW3wf7v03Hnq7621+4T76u54+d
LTo4Wb/KuY6fFFu84kvvyDuDKUujFh2lP+CUNWuT1zMrH5t2p/179Rvm3v74
e/fau1/L+4j7e3/hP4+UcPMWBLoy7cJFN2feIveDt3UoO58zZy+Q+h89mnFc
tO/SN7AxfPl+X7bKt08raeNPfZtO9j5Vojpre86YPT/LtqLs8CI233d1fnKv
vPmZ+9Rfd7Qfx/SBvIPc79Pc81C/waPcb7+vdF9+38iXIRg/a9dvCt4Fnka9
gnMwnvQd95SlSYtOru+gUVJ//MB/ez5TDuTY35Yu92OnrbT7Vz829u02Q47H
54rtrzquwU/tZS5Rh9qNWkuf6vvIE9Yhwsd89vB907Zzb7d4yTKZmzXe+co1
9v2/ecv2hDx4rftV+M/3669x9R/n6891b6T1c5PUEI2Ddujazz373GvukSIV
XIWq73ie+Up4YJXnBubiHQ8Wcy+98akr+8Kb7ub/POl56ivRlaCW11G33lvE
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
JQeoVfvAD2zXpa+sjaFraCdscfiW+BHPfUlmdyD6nK3t3m+ifPgW5KIHOjJN
ODdZPcPPQ0nUn/Q/eROVq30gfYIeI6e2VYeewlWaO8G9kfAI9j/X55kI73pe
C/gmWMfi/szwuDh7JuB0/AXaF3+M48nTx2eO14vKgbRlpm117oKsrxE7rFm/
hfjt8BznJg9o4+ZtwTqiL1epSq+719//RtZ54R78N+IV5PDL8yOIiXsfmWcq
0YYP+OtgPzCe0fPcMwrIX3nIjy9iEGCBbxd8cK5J+fAXf/Rl4V4duENj1dpf
z5SvJnOC++sKlXwxug8+U6I6kGeieb7wPnajjjuw5PeVct869kH8mLzW/Uq5
Fv32h8SZ4+vPmNfnyXDPEvlIGzdtk7obB5pcD2EuEINItwvTnxeBzuB+QbhJ
18NURzJueZZuVucP7k2+KN+JiRDXDJ4rdlzWwuP3ZW2EuSS/zwTzl2sRB2Ke
a45ZMv2PDxTU53TSOgbbTss2tZUzq7P6QuhA/FXyBtgH+z38DA/OA4/gU+za
tVfsg0T2VcD5adJ+nEfjkvw+FMmRxCdAF3Ee+I79tm7fKTomO2smmvOJTiS2
Rpn1v8zqmZ3+1BgvMUL65ELkuSL0reqtoB1O+n02i40g/ejbRfsc/yN+XPD9
XCR+RnmxnXhGgjxXJEHucdgPzKqt9LkQlIv8WPT0jp27ZRv3fRP3Y3yUfuEN
zylBLHaf719yWTQWH742ZT9y9JjkGWnskjZlW/qYS39mtsYs4Nst23ZIrBk7
9GCk3kjahdj+Cp53cELOo22frA76fCXqQRnin0fPtTkP8yM3+lWfs5Oo/un3
6Adz90KSZ0CYXDtJ5ecUJHs3SuAPno+uC+natv6PruK47FxDdRdjW4+Rdyed
z/jupPiyyL1D54JnXyUqR3bqk91tWdVZdSnxOPbRuFzs82rOSNso/2TWJqLP
OE/Ep9PcOEA8+Pb7i0puCkDH6TpJdtdKwu1+IdRXWdUzK9Gce10rTNR34X5T
G+GctPn5hOXTcaFxV71fRp8dl6h8yoHZbav0/kuLOffJk0GfwVfFvP/FPfZn
z5yL7pfo2a+qt4NxkBb9rX0eP75i2izKV7FzKFF/xc+zZHUI32OeaG5l5x1I
17Jf6dOs6q+/bS3w+ksqxkLDkllM7ZSuCV3GcZldJ14nZeecsWtTV1afy9mW
WZ3jy5OdembVHrqvrOXpfY4jJ8i9CjwrR3N/rlQ3JCpPdup5tf2ZoX5Z9G+y
8iW7vsbzL7etlGfD+2AH85vnGvGcNrVLMitDov47Hfd/7P7ZnwPZ2Se+DvHX
yc54v579mlX9k5XbxMQk9UT4MEncyuTatZW+3+FMCseGTFJPUt0PNLnxhPwQ
G5fXv63ORp5hntt1MjG5nmJj3uRGFHuvjLWViYmJiYmJiYmJiYmJiYmJiYmJ
iYmJiYmJiYmJiYnJ1YjlxJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiY
mJiYmOQ3sZwYExMTExMTExMTExOT1JJUfn+giYmJiUlqi8VCTUxMTExMTExM
TExMUkvMDzQxMTExSVUxDjQxMTExMTExMTExSTU5ffrMdb9ediW328bExMTE
JP8K9wVcuHDBnTt37rpwDnFHrpeWlpalsJ/FKU1MTExMroXALydOnHJbt+52
R4+ecOfPn7/m1zt58pTbsmWXW7t2q1u3LpFsc+vXb5P/N2/e5ct30njQxMTE
xCRHBZ8PX+vPPze7AQOmuLFj57pdu/YLD54+nfPXw9/kvDNn/uaGDp3uRo6c
7UaMmBUjI0fOcsOHz3RDhgT/s9+0aYs9b56+pjxoHGtiYmKSWgInnTp1Wrhv
yZI1btGilW7SpF+uCR/AfefPX3C7d+/3vDbD+517ZDs+KPyG8J1rr169RfiP
33v2HJD98QfT0i7Y+qCJiYmJyVWL+oAbNmwXn4v45ObNO70PNku4R/cJJOeu
R4xz1KjZnnvPuHPnzgvnqbDfxYsXJRaKT6h8N2LEbLdmzRY53jjQxMTExORq
RLkN3pk8eaGbO/cP59wlzzNbhZ/IjYGL8LvgHbgqJ67JOX//fa2bMGF+0n24
HuuAcCA+Kv4h39lmHGhiYmJicjUCv5FrCXbu3Cc+IGuAAF9r4MApbv78ZW7B
guXyuXjxKnfw4BHhwavhH47lunPnLnNz5vwucdH48xkHmpiYmJhcCyGeCY8d
OXLcbdy4Q2T69MWSnwIvIgcOHHaLFq3y3LfczZu33P3yy0o3btw8N2XKwojf
eOXX51j8TtYbWXvEJ8yKA69nLNRyYkxMTEzyr6Dj4T/ikMOGzZSY56BBU+Ve
BOUW9RH1vjywY8deydM8ePBoxBe88uvj040aNUdirsRZ8fPC98HHc2B6Tsx0
y4kxMTExMbkiUW7B9yPHEn8PfkkUY1ROgp/gHPyv0aPnyO8r9ZXUB4VH4VN4
FYT5Vu/P5ze8DD9f33sjcr+fTExMTExyXpRb8L+4/063ZbbOpjksS5aslryZ
IHfzyssQ3Bt4xp/rFzd+/Dy3cOGK6Loja46HDh2NxmSJzxKn3bBhh+SqkrN6
rWOVFgs1MTExyZ8SH2PEp8Kvy4oDyVuZM2epmzdvmfhqV5sTE/iCRyJrjvDf
Cjn3wIFThZ8B+Tnk6ezcGeTpUAbjJxMTExOTK5VE+ZZZcaAK64fcz5Aoh+VK
BB7UZ4FyTvw+1iaJuXJ/BvdpqN95PZ+ZbTxrYmJikj8ls1go96PDRWwL36/O
89KCHJbZcl97TuVksjYY5jbWJbkvX2OerP9x3/71vg/CONDExMQkf0rGnJgj
wj3knPBcMnyx+GeWcdy2bbtlf55vluh+vpwQvV+C57RxzwTPbQvyb3K/3UxM
TExM8oOcCd0bsUDujcAfZN2NPE2+Z3x2dZCTSX4Kvtu14KTgGaLnZQ0Q7uO5
3Ty/2+6FNzExMTHJSYm/R551QGKcxEL5nkh4v9G1zslUHuS9Tby/SZ+bndvt
ZWJiYmKS/4S4Z3beXXs9318bvj/fYqAmJiYmJtdS0t8HkbVc73LlVpuY72li
YmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYpLfxHJiTExMTExMTExM
TExMUkvsvkQTExMTk1QVi4WamJiYmJiYmJiYmJiklpgfaGJiYmKSqmIcaGJi
YmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJikt+EnBjukzcxMTExMUkt
OSdy6tRpExMTExOTlJRt27abmJiYmJiknOzYsdNdvHjRxMTExMQk5SQtLc0Z
DAaDwWAwGAwGgyF1cOnSpdwugsFgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDIQdgeaEGg8FgMBgMBoPBkFowP9BgMBgMBoPBYDAYDAaDwWAw
pAIsFmowGAyGVIVxoMFgMBgMBoPBYDCkFswPNBgMBoPBYDAYDIbUgvmBBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAz5A5YXajAYDAaDwWAw
GAypBfMDDQaDwWAwGAwGg8FgMBgMBkMqwGKhBoPBYEhVGAcaDAaDwWAwGAwG
Q2rB/ECDwWAwGAwGg8FgSC2YH2gwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBkD9geaEGg8FgMBgMBoPBkFowP9BgMBgMBoPBYDAYDAaDwWAw
pAIsFmowGAyGVIVxoMFgMBgMBoPBYDCkFswPNBgMBoPBYDAYDIbUgvmBBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAz5A5YXajAYDAaDwWAw
GAypBfMDDQaDwWAwGAwGg8FgMBgMBkMqwGKhBoPBYEhVGAcaDAaDwWAwGAwG
Q2rB/ECDwWAwGAwGg8FgSC2YH2gwGAyGVEZa2sVsy4ULaSYmJiYmKSSXwxF5
TS5evOg2bdqdhewS2bjRxMTExCRVJeCCrPgib8mWLXuu2uc7f/6CiYmJiUke
l1T0D/EDE+NSzHfWDdPlYoxwDhMTExOTvC+x+j1W96fzQv7NI4mvc3z7pKWl
ZZALFy6YmJiYmOQDSaTjM/JkvF+UdzkxXPZk3KdtkIzvzp8/b2JiYmKSTyQR
L4a5ID9xoCIz/ovnPm2nc+fOJZSzZ8+amJiYmOQRSaTHE/FhIr8wr/NgZrHP
MPeFeS/cdmfOnIn5bmJiYmKS9ySRTld+jOfD/MyDyfgvzH3hdjt9+rSJiYmJ
ST6SRNyoXJiIB/N6XPRy+I/2OXnypMiJEydEjh8/bmJiYmKSD0T1uup5dP7l
8mBeQqIYaJj/wtx36NAht2/fPrdnzx4TExMTkxQQdD66P8yFYR4Mc0deRDIf
MOz/nTp1yu3du9cdPHhQfOPcvn/FxMTExOT6CDof3Q8HwAXx/qD6gnkZyoGJ
+I/6U3d8ZIPBYDCkJuAAuEDXCMM8mNfin2Ek8wHV5z18+LDYAAaDwWBIbcAF
cEJ8TDSvI8yB8T4gsWA+DQaDwZDaCHOC+oJ5nQPDfmC8D6jrgHk91mswGAyG
qwdcEF4XVF8wryNRHBSeJz+WvCDjQIPBYDDABXAC3KC+YH7jwHAc1DjQYDAY
DIpU4UB9/otxoMFgMBgUYQ7U58nkFw6MvyeC+pELaxxoMBgMBqAcCDcoB8IZ
eR3GgQaDwWDICvmRAzUvNMyBGgs1DjQYDAaDIj9yIDAONBgMBkNWyCkOTPRY
Gc1LuXjxUsz3a414P1BzQq+EA4NzZXwvvcFgMBhuLFyJbr4WfmBWPHE9eCQn
ODC+jOHf14sH4d9z586b32owGAwJgCq+GnWcUxyIjxeUJ70wy5atcu3adXM1
azZ2tes0db17D3KbNm0Nlf3a8cjVcqCW7ciRY27OnF/dwIHjXb9+o93kyXPd
jh17r0P5g3OvX7/VNWvWwy1fvjZaL4PBYEh1xOtfOOjQoaNe51/ec85yggO5
5ttvf+bmz18kv3lHYa3aTV2BR0u40qWruC+/rO2+/qauq1Chmnv8iWfdjz82
ckePHE1Yj5zA1cZCtUy7d+93HToMcPXqdXDt2w9wHTsOdI0adXY//dTDrVix
LmbfzHzG4Hcg4bhqoriwbtMY7J9/bnR16rR3S5asivyfsdzBeS/GnCOrdg3K
kzHOG1+uzMqoxySqe7hdru7/xHXOTnw6fvv1iMMbDIZrh0R69dixE27nzr1u
zZpNbunSP93hw5fHLfEciGSXA/Uapz2/wG1Tps70/HfKVanylnuqcDk3c+Zc
z0Np0f3T0i66ufMWujJlXnKvVHvPX/PENYmL5sR6IP/37z/GNWnSVfgueLdi
mtu+fY9r1aqPbD969HhMO+hxOQHaCqxdu8VzcEfp2+ycP9yU1z7enHlsOCvO
udr/M9snN+LWBoMh55Fo/sIz8B4+wsqV692yZWvdH3+sER7UmGR2kRMceMof
82ypF13nzr3cG2986iq/+KY7cOBgzH7hehw6dMSVfLayq1P3p6R1vFpcLQfi
27Zv39916zYsph6Adh47doY7ePBw9D9iliNGTHXduw93I0dOld+KEydOyTaO
g0/79x/r+vUb6xYtWhblOj3/b7+tdAMGjHM9e46Q///4Y7Vr0KBTpn7g2bPn
3MKFyyRe26fPaG97LHT79x+KnDNj3bjmuHGz5JxaHo5dv36L/Ldgwe+ud+9R
bujQSTK+wmBtcuHCP+SYXr1GuunTF0j8Idw+GzZsdWPGzHA9egz37TTTbdq0
/bL+37p1l5s4cY60Ae2mceAwKNfgwRNkH+qLzz5q1HS3bt2W6D6Ui/JRTspL
uTVOYrxoMOQtnD59VuY5ehSdsHr1RtFzrE2hD5YvXyO8CC5nfucEB8LJFStW
dwWfLO1erfGB27Vrj/hMifhYn0Ezd+4v7r77C3u9uzFajpxCzviBl1zfvqNd
06bdvY2xJtMY8++//+nq1+/kmjfvKXqdWGmDBh2Fv8Du3fvEb2zbtq9r0aKX
6G1irHXqtBP9rZgyZZ6rW7e9a9Omb+Q83WW/Zs26CTcG5YotN/Xr02eUq127
nevSZYh8b9iwsz9uoDt8+FikPWLLC4+1atVbpGXLXnKtZs26u9atewsXNm3a
zXPgSPm/bt0O3tbaEL3WsGGT5FqdOg0U+6B+/Q7++yBZNw3aYrW/fifXrl1/
N2TIRDkH9dS2wJ+N/79u3XZiwwHGNrFn2pD2JwZNm8yduyRafri7fv2OUnb4
jTalndg2d+5vss/Bg0ekDdhGOYljU+4RI6bI2DQONBhufGDf79t30PPeZtEN
+H3w3MmTp+V/dBzbd+zYIzxIbBFcbw7kmKJPV3QPPFjUFS9RyRUr/rwr9sxz
vkyrI9eIjUuhg+CUzl16u3XrA981p3VSTqwH4p80bx7wWefOg8Q3QZcfP34y
uh990bo1nDVM4tIAPujSZbD4kVznwIFDntf6eA7s5/nwgOzDvnBH+/b95Peu
XfuFJ+Ewzk+bYeN07jxYOC0+Fqpl3Lv3QNRnVGAfwRtLlyb2HeFArt2yZW+x
oTjX5s07PJf0FNm1a59s4xP+HT16uhyHLQCfzZiRzturVq0Xnpkx4xf5TVla
t+7j2zywdYgX49fOmrUo0//VFpg+/Rf5HfYt4WO4MGjb48J5XbsOlX1oJ/xs
/DzKoe2AfwnXYjMG53Fu6tTAxlBOt/VBg+HGBNy3ceM2iVOhz9BF6MUwTxw4
cETsYXgQXcm8zol7Iy6HAxVcd+q0WV5XTvS6Z7IbPWaimzx5htdvx6L/X0/k
hB+oZWb9b/z4WeJHwFHqpyknYXvgt6DD8T127twnunnq1PnCXdu27fF8d9w1
btxF/LzwuceNmymcA/DzatduK3FtoDHSxYuXy3b8K5BZueGCPXsOSNnI3SH2
l+gY7A84mVhnuL7t2vVzgwZNCG1z4l8RXwVwIb4ptsHevQdFiE3A4926DZVz
EI/k2rSHcmkYxDYz+1+BXUR70v74pvioAJsPf079Ym0nuI7tv/66Qn5TF3ie
9kD27QvmCP1AfDRoF+NAg+FGBBzIehJ2N5/otjAOHDgseg4eBKtXb7qiOCjI
CQ7MDrRcxzwvwo9jxkwK+NLzJvx5I/mBiQBvoPPnzVsifgzxQrgObmrUqIv4
VPiMxPD4RODGVas2+P47KT4Ja3bqB/M5bdp82R/AdfgxrIXxn/rGyrHJcmLg
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
ifhnheQ1qB+ovmA4Lwae37dvn3waDAaDIbUR5gQ4Aq7I6xwIksVDkcOHD7uD
Bw/mdhENBoPBkMuAC+AE5Qe4Iq9zoL67MJ4Dw74gvi+5sAaDwWBITcABcEHY
B1QOzMv3G/M87vh4aDwP6rogNgD1131NTExMTPK3oPPR/eF1wDD/JXum2Y0O
5e1du3ZFnxuidVYODMdEuRfk0KFDEgsmL8jExMTEJP8LOh/dDweEY6DKgWG+
zEvQ8q5atUq+J/IF4/1B5UJ8R4T8WAQf2cTExMQk74vqddXzYe4L+39hH1A5
JC89h1E58Oefg3fDxvuCmfEgvrGKvkvYxMTExCR/SFjHXy7/5RUOVAwdOtRt
2xa8UyMrfzCeC5UPE3GjiYmJiUnekUQ6Pcx9+Yn/wmuBvXv3dv369YtyXyJ/
MMyF8XyYSMLtZ2JiYmJyY0siPR7Pe8p9Yf7LixwYLuuYMWPcsGHDXJcuXdyc
OXOi/8fnBWmd47kwnhNNTExMTPK+xOv4MAck4r28wn/hvJ358+eL/zd58mTh
wU4dO0Z5EFAf5fysJBEvmpiYmJjkPclM14d9v0S+YJg/Mvsd3h7/f2bHZve/
cDxTuSyMefPmCf9NmjRJOHDEyJFu+PDhrnPnzm7EiOFu67ateYLTDQZDclyJ
bZ4Xc9wzQ1gPJvovqzYK61JD3seiRYvcO++849q3b++mT5/upkyZ4qZOnepG
jRrluW+EG+m5kPVBuHD4sOGy/+rVq92OnTvk/hB9ZxT3SYpEcmcTCf9fyX+X
I0EO71Wc48TJmBzgnCy/HW/HX83x2RHG7rFjx+Q7n+S1c24+yWtQ2505y778
d/ToUdlftx05ciTmmPB90XpMovJzPY5FdBvnYLvqB82157uWVf8Ll53vWq5E
bcT/PJ+L+9T2798fvV9Nr8Gxel6+h9tBfRf8G35Tbz4pt/o9bEvWR6yL6Tn0
vgGtv5Zf2z/8X7jttG/C585qDGQ1fq7l8VH9nonQZtSL/qAvaHddW9T+1XGm
Y035QzlExygg/qpjMH5f/c1/Oh74rv/pcdqPALuF7ytXrnQbN250EyZMcJUr
V3Zffvml6969u/h+06ZNEx6cOXOmGz1mjPDgyJEj5BOfsG/fvp4Lu7hOnTt5
6Sy82KlTJ5EOHTq49iLtXbt27Vzbtm1dG6RNG9e6dWvXqlUr17KllxYt/WcL
16JFIM2bN/fyk/vpp59cs2ZIM5GmTZvGSRPXpAnSOPLZRLY3btw4m9Io+GyU
vq1J4ybp/zfi/yaukf+sWbOmlC0oc8voZ7xkd7sdb8dfzvFI/Pht1KhRpuO7
YcOGclyNGjVcsWLF5NxFihRxJUqUkO/333+/e/TRR92LL77oqlSp4u699175
zdwtU6aM7NutWzdXtGhRV7ZsWdexY0f30EMPuccff9y99NJL7uWXX3b33Xef
e+KJJ8Re5pzMa53bzPk6deq4f/7zn+6VV16R87Kdc7z++utRHfHhhx+6u+++
W87PfgULFhRdwe8PPvhAysm+b7zxhhzL+VWHINSxa9euUo8777xTykZ9nn/+
eTmeazRo0MDdcccdrlatWq5evXryHV3x0UcfuX/961/uhRdecFWrVnXPPfec
+9vf/ua+/vpr0Sf//ve/pU3efPNNaU/ORR24vn5S1q+++spVq1ZNjr/11lvd
J598Im1Cm7799tuiF9nvsccec9WrVxd9dvvtt0t52M7/pUuXdoULF5ZraN1U
wvVN9Du72/lUif8/fnv893hJdDx1CR/LGKDdaD/GHXV++OGHZezSp4wl+o1c
E34XL15cxh7jjvZlDNAP+GSMDdqP8dajRw9XsmRJ2ReuwieDu55++mn578EH
H5S+79OnjwicxhiDr+ir2267TfqBMcV4+a//+i/hnffff1/6HL6bPXt2DP/x
e/y4cZIfM3rUaM+BI8UnHDXSc+KIIEY6ZOhQN2jQIDdw4EA3YEB/179ff7km
ZaCMSM+ePaWMPXp09/Xs7rp76dqlq4zhLv6zs/Ion75NaAOEcdERPvXjSqVd
+3bBp29nvivPInxvz+92bdO38RntKy9t2JZ+jHB0G92H3+0ifdrGNWzQUMpI
3+hnIgn/R9/wWyXRPna8HZ/d4xnTYV2TSML/8Z35VqFCBdE1vXr1ck8++aTw
ITrnlltucQ888IDo/4oVK7ry5cu71157TY754YcfRE+gq/jEBuR4dBg8hN6o
VKmS6Hz0UzCne0i59Tv7U2444bPPPhPdwG/4B/3Uv3+gH7755hv3j3/8Q77D
I+hIdAV6BI7imgMGDHBvvfWW8CHn5fy0D5+ck3u3KE+BAgVkX+qg+ob9uBbc
yvnhX3gNnUXZ//u//1vaAF3MJ+fBhmAdCP3NNrjspptuknqwnXMi6DbaDp7H
TkAP/+UvfxGdy37U9eOPP5YyUR7q9uqrrwo//PWvfxW9SxkHDx4s7Y+Op6yc
O11XBqK/td6J/tPvKvG/488Zf0z4u7bzlR6PwGvaTpwPv+Z//ud/pA2IJzKW
aDP6j/7G7ipXrpz8ZjzAf/Q//Qpn8ckxcA98R5txntGjR4sNU6hQIfl91113
ydgZO3ascBY2DbbO+PHjpW/oI8oABzIeGPfku/z4449yjhkzZgj38Tlr1izJ
geEe+f8Px79J3Q==
    "], {{0, 405.}, {224.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{294.329833984375, Automatic},
  ImageSizeRaw->{449., 810.},
  PlotRange->{{0, 224.5}, {0, 405.}}]], "ExampleImage",
 TaggingRules->{},
 CellChangeTimes->{3.889474918155591*^9},
 CellID->1822574373,ExpressionUUID->"9632ecf7-afa9-422e-926c-8cb13c53fac8"],

Cell["Stop the web server:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8894570636480227`*^9, 3.8894570737987967`*^9}},
 CellID->746610301,ExpressionUUID->"1f64c651-479d-4c6d-9b1d-1553c2e7980f"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8894570680026712`*^9, 3.889457070158811*^9}},
 CellLabel->"In[5]:=",
 CellID->882448711,ExpressionUUID->"1e762b25-7ca3-47b9-9a5a-6a234cef6926"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "caa931e0-be42-4d77-ad9a-9a8421f52c0c"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->2051748563,ExpressionUUID->"cabeaf42-7736-44a4-a920-c28aaaf6348b"],

Cell["Deploy a plugin to the public Wolfram Cloud:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.890924985598996*^9, 3.890924991559719*^9}},
 CellID->925942238,ExpressionUUID->"410bc869-3da9-4a54-8120-5ff36d6c98f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginCloudDeploy", "[", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "->", "\"\<CityPopulationFinder\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Endpoints\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<getCityPopulation\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
          RowBox[{
           RowBox[{"#city", "[", "\"\<Population\>\"", "]"}], "&"}]}], 
         "]"}]}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.890398508332391*^9, 3.8903985957004223`*^9}, {
  3.8909249790390863`*^9, 3.890924979630536*^9}},
 CellLabel->"In[9]:=",
 CellID->1387438434,ExpressionUUID->"8a49a5f4-5353-4c4c-bfd5-d1e70fc4deee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginCloudDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"https://chriswolfram-assets.wolframcloud.com\"", 
                    "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], Background -> GrayLevel[0, 0], 
                    FrameMargins -> 5, FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], Background -> GrayLevel[0, 0], 
                    FrameMargins -> 5, FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], Background -> GrayLevel[0., 0.05], 
                    FrameMargins -> 5, FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginCloudDeployment[<|
                    "CloudObjects" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/ai-plugin.json"], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/openapi.json"], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/\
getCityPopulation"]}, "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], "URL" -> 
                    "https://chriswolfram-assets.wolframcloud.com"|>]["URL"]],
                    Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"https://chriswolfram-assets.wolframcloud.com\"", 
                    "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginCloudDeployment[<|
                    "CloudObjects" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/ai-plugin.json"], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/openapi.json"], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/\
getCityPopulation"]}, "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|"Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], "URL" -> 
                    "https://chriswolfram-assets.wolframcloud.com"|>]["URL"]],
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CityPopulationFinder\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getCityPopulation\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "CityPopulationFinder", "Description" -> "", 
                    "Prompt" -> "", "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getCityPopulation", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "city" -> <|
                    "Interpreter" -> "City", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Slot["city"]["Population"]& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Editable -> 
                   False, SelectWithContents -> True, Selectable -> False], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"cloud objects: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/ai-plugin.json\"", 
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/ai-plugin.json"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/ai-plugin.json"], SelectWithContents -> True], ",", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/openapi.json\"", 
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/openapi.json"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/.well-\
known/openapi.json"], SelectWithContents -> True], ",", 
                    InterpretationBox[
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://www.wolframcloud.com/obj/chriswolfram/\
getCityPopulation\"", 
                    "https://www.wolframcloud.com/obj/chriswolfram/\
getCityPopulation"}, "HyperlinkURL"], "]"}], 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/chriswolfram/\
getCityPopulation"], SelectWithContents -> True]}], "}"}], "SummaryItem"]}]}},
              AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginCloudDeployment[<|"CloudObjects" -> {
      CloudObject[
      "https://www.wolframcloud.com/obj/chriswolfram/.well-known/ai-plugin.\
json"], 
      CloudObject[
      "https://www.wolframcloud.com/obj/chriswolfram/.well-known/openapi.\
json"], 
      CloudObject[
      "https://www.wolframcloud.com/obj/chriswolfram/getCityPopulation"]}, 
    "Plugin" -> Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "CityPopulationFinder", "Description" -> "", "Prompt" -> "", 
       "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getCityPopulation", "Prompt" -> 
           Missing["NotSpecified"], 
           "Parameters" -> {
            "city" -> <|
              "Interpreter" -> "City", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Slot["city"]["Population"]& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}], "URL" -> 
    "https://chriswolfram-assets.wolframcloud.com"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.890924981153474*^9},
 CellLabel->"Out[9]=",
 CellID->1911896150,ExpressionUUID->"b4b905fe-b9b1-481a-be83-c24d74af703f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"f522820c-0979-4426-9e34-29ffd160f827"],

Cell["Implement a TODO list plugin:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.889474467787005*^9, 3.8894744730264378`*^9}},
 CellID->1274307077,ExpressionUUID->"300336cb-5150-42cd-8e8a-1b8695e416f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"todos", "=", 
   RowBox[{"<|", "|>"}]}], ";"}], "\n", 
 RowBox[{"server", "=", 
  RowBox[{"ChatGPTPluginDeploy", "@", 
   RowBox[{"ChatGPTPlugin", "[", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Name\>\"", "->", "\"\<TODOList\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Prompt\>\"", "->", 
       "\"\<Plugin for managing a TODO list, you can add, remove and view \
your TODOs.\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<Description\>\"", "->", 
       "\"\<Plugin for managing a TODO list, you can add, remove and view \
your TODOs.\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Endpoints\>\"", "->", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<getTodos\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{"\"\<username\>\"", ",", 
            RowBox[{
             RowBox[{"Lookup", "[", 
              RowBox[{"todos", ",", "#username", ",", 
               RowBox[{"{", "}"}]}], "]"}], "&"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<addTodo\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<username\>\"", ",", "\"\<todo\>\""}], "}"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"todos", "[", "#username", "]"}], "=", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"Lookup", "[", 
                  RowBox[{"todos", ",", "#username", ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", "#todo"}], "]"}]}], 
              ")"}], "&"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<deleteTodo\>\"", "->", 
          RowBox[{"APIFunction", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<username\>\"", ",", 
              RowBox[{"\"\<todo_idx\>\"", "->", "\"\<Integer\>\""}]}], "}"}], 
            ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"todos", "[", "#username", "]"}], "=", 
               RowBox[{"Delete", "[", 
                RowBox[{
                 RowBox[{"todos", "[", "#username", "]"}], ",", 
                 RowBox[{"#\"todo_idx\"", "-", "1"}]}], "]"}]}], ")"}], 
             "&"}]}], "]"}]}]}], "\[IndentingNewLine]", "|>"}]}]}], 
     "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8892965279564943`*^9, 3.889296531899847*^9}, {
   3.8892967426239843`*^9, 3.8892967723501663`*^9}, {3.8892968593944063`*^9, 
   3.889296921140484*^9}, {3.889321382514422*^9, 3.889321408323019*^9}, {
   3.889321477310009*^9, 3.8893214804463463`*^9}, {3.889321896319826*^9, 
   3.889321910054644*^9}, {3.889325811363647*^9, 3.8893258117232656`*^9}, {
   3.88941170940053*^9, 3.889411712451518*^9}, 3.889450158192483*^9, 
   3.8894503830116034`*^9, {3.889450484885947*^9, 3.889450491289304*^9}, {
   3.889454945124021*^9, 3.8894549453458643`*^9}, {3.889474478392243*^9, 
   3.889474499492263*^9}, {3.890398613335616*^9, 3.8903986529149714`*^9}},
 CellLabel->"In[7]:=",
 CellID->41348088,ExpressionUUID->"99f47b18-e7b1-41a3-b190-01ab95057e4f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ChatGPTPluginDeployment",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:60916\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3613037394814852128], 
                    "URL" -> "localhost:60916", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "ContactEmail" -> "", "LegalInformationURL" -> "", 
                    "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"url: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"localhost:60916\"", "SummaryItem"]}], 
                  ButtonBox[
                   
                   DynamicModuleBox[{
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$ = 
                    False, Wolfram`ChatGPTPluginKit`CopyButton`Private`\
mouseHover$$ = False}, 
                    TagBox[
                    PaneSelectorBox[{"Default" -> FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.65], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Hover" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0, 0], StripOnInput -> False], "Pressed" -> 
                    FrameBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    GrayLevel[0.286], 
                    Thickness[0.05], 
                    CapForm["Butt"], 
                    JoinForm["Bevel"], 
                    
                    JoinedCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{9., 15.}, {5., 15.}, {
                    3.895430088043213, 15.}, {3., 14.104599952697754`}, {3., 
                    13.}, {3., 5.}, {3., 3.895430088043213}, {
                    3.895430088043213, 3.}, {5., 3.}, {13., 3.}, {
                    14.104599952697754`, 3.}, {15., 3.895430088043213}, {15., 
                    5.}, {15., 9.}}, {{11., 21.}, {19., 21.}, {
                    20.10460090637207, 21.}, {21., 20.10460090637207}, {21., 
                    19.}, {21., 11.}, {21., 9.895429611206055}, {
                    20.10460090637207, 9.}, {19., 9.}, {11., 9.}, {
                    9.895429611206055, 9.}, {9., 9.895429611206055}, {9., 
                    11.}, {9., 19.}, {9., 20.10460090637207}, {
                    9.895429611206055, 21.}, {11., 21.}}}, 
                    CurveClosed -> {0, 1}]}, {{{1, 0}, {0, -1}}, {0, 0}}], 
                    ImageSize -> 20], FrameStyle -> GrayLevel[0, 0], 
                    RoundingRadius -> 5, FrameMargins -> 5, Background -> 
                    GrayLevel[0., 0.05], StripOnInput -> False]}, 
                    Dynamic[
                    FEPrivate`Which[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    "Pressed", 
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    "Hover", True, "Default"]]], 
                    
                    EventHandlerTag[{
                    "MouseDown" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    True], "MouseUp" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseDown$$, 
                    False], "MouseEntered" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    True], "MouseExited" :> 
                    FEPrivate`Set[
                    Wolfram`ChatGPTPluginKit`CopyButton`Private`mouseHover$$, 
                    False], PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], DynamicModuleValues :> {}], 
                   ButtonFunction :> CopyToClipboard[
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
                    "SocketListener" -> SocketListener[3613037394814852128], 
                    "URL" -> "localhost:60916", "Plugin" -> 
                    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "ContactEmail" -> "", "LegalInformationURL" -> "", 
                    "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>]["URL"]], 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Misc"}, "TransparentBG.9.png"]}, 
                   Evaluator -> Automatic, Method -> "Preemptive"]}, 
                 "RowDefault"], "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"plugin: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ChatGPTPlugin", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TODOList\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TODOList\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"description: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"endpoints: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getTodos\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"getTodos\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}, {
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"addTodo\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"addTodo\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|"Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True]}, {
                    InterpretationBox[
                    RowBox[{
                    TagBox["ChatGPTPluginEndpoint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"deleteTodo\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"deleteTodo\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Missing", "[", "\"NotSpecified\"", "]"}], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {"username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|"Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"prompt: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Plugin for managing a TODO list, you can add, remove \
and view your TODOs.\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   
                   Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
                    "Name" -> "TODOList", "Description" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "Prompt" -> 
                    "Plugin for managing a TODO list, you can add, remove and \
view your TODOs.", "ContactEmail" -> "", "LegalInformationURL" -> "", 
                    "Endpoints" -> {
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "getTodos", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (Lookup[$CellContext`todos, 
                    Slot["username"], {}]& ), 
                    "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "addTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Append[
                    Lookup[$CellContext`todos, 
                    Slot["username"], {}], 
                    Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
                    
                    Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
                    "OperationID" -> "deleteTodo", "Prompt" -> 
                    Missing["NotSpecified"], 
                    "Parameters" -> {
                    "username" -> <|
                    "Interpreter" -> "String", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>, 
                    "todo_idx" -> <|
                    "Interpreter" -> "Integer", "Help" -> 
                    Missing["NotSpecified"], "Required" -> True|>}, 
                    "Function" -> (($CellContext`todos[
                    Slot["username"]] = Delete[
                    $CellContext`todos[
                    Slot["username"]], Slot["todo_idx"] - 1])& ), 
                    "APIFunctionOptions" -> {}|>, {}]}|>, {}], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"socket listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3613037394814852128], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, {ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {64.43359375, 68.}, 
                    PlotRange -> {{0., 24.}, {0., 24.}}, PlotRangePadding -> 
                    Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3613037394814852128], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "Wolfram`ChatGPTPluginKit`Deploy`Private`handlers$", ",", 
                    
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], ",",
                     "Wolfram`ChatGPTPluginKit`Deploy`Private`resp$"}], "}"}],
                     ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}], "&"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60916", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-dc9a52e3-a007-40b9-a0fc-780d8cf994df\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["60916", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-dc9a52e3-a007-40b9-a0fc-780d8cf994df\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-dc9a52e3-a007-40b9-a0fc-780d8cf994df"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3613037394814852128], Selectable -> False, 
                   Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`ChatGPTPluginKit`ChatGPTPluginDeployment[<|
   "SocketListener" -> SocketListener[3613037394814852128], "URL" -> 
    "localhost:60916", "Plugin" -> 
    Wolfram`ChatGPTPluginKit`ChatGPTPlugin[<|
      "Name" -> "TODOList", "Description" -> 
       "Plugin for managing a TODO list, you can add, remove and view your \
TODOs.", "Prompt" -> 
       "Plugin for managing a TODO list, you can add, remove and view your \
TODOs.", "ContactEmail" -> "", "LegalInformationURL" -> "", "Endpoints" -> {
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "getTodos", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, 
           "Function" -> (Lookup[$CellContext`todos, 
             Slot["username"], {}]& ), "APIFunctionOptions" -> {}|>, {}], 
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "addTodo", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>, 
             "todo" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, "Function" -> (($CellContext`todos[
              Slot["username"]] = Append[
              Lookup[$CellContext`todos, 
               Slot["username"], {}], 
              Slot["todo"]])& ), "APIFunctionOptions" -> {}|>, {}], 
         Wolfram`ChatGPTPluginKit`ChatGPTPluginEndpoint[<|
          "OperationID" -> "deleteTodo", "Prompt" -> Missing["NotSpecified"], 
           "Parameters" -> {
            "username" -> <|
              "Interpreter" -> "String", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>, 
             "todo_idx" -> <|
              "Interpreter" -> "Integer", "Help" -> Missing["NotSpecified"], 
               "Required" -> True|>}, "Function" -> (($CellContext`todos[
              Slot["username"]] = Delete[
              $CellContext`todos[
               Slot["username"]], Slot["todo_idx"] - 1])& ), 
           "APIFunctionOptions" -> {}|>, {}]}|>, {}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8894744842485857`*^9, 3.889474500147913*^9}, 
   3.8903242766498423`*^9, 3.890398654285071*^9, 3.890925012655299*^9, 
   3.8914404445596447`*^9},
 CellLabel->"Out[8]=",
 CellID->818252307,ExpressionUUID->"610d4a45-6f71-446a-a3bc-8fef8b192090"]
}, Open  ]],

Cell["Install and use the plugin:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.889474674038274*^9, 3.8894746785243177`*^9}},
 CellID->1668834681,ExpressionUUID->"59fc93f4-afaf-42ca-87d6-b3ba2e845650"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
40bS5THDhQNHjBhCV+dMo8ykJH3PtGqV1MLhBmyTkhWHVW+73uodTRU5Xp28
Df4bXLHeNWFxo9L7iitbD2BYZHweBV4qJN8LFl+9Hep30cLg1AzH89t3sO/K
a59b8e7KXG/8rIqmKe9RKSh+lwj6tKLvwCz3fVpG4Xcxx82/hYIHZ1fnHZqq
33rVfVqq30Y177kofi9W9ce+8NMs63eXbqdavLX22/Bu0dL70Go0/cwsWfMt
1gyHljymPFi1Oornh/U9Hqqq1VfDTXNus9Z2PVVVVWtOwQXwPi3lw6qqqqqq
qndegbvvvP2O4rCqqqqqqmotKPiw63pXeQ96tX6rU1VVVVVVVbVKOnv2bEpO
TlEcVlVVVVVVrQV1d9stfNj+u2Sqqqqqqqqqt1/Bgb29vWV9GO+pwTuEVFVV
VVVVVe+cenp6UmxsnHDilJQUVVVVVVVV1TukqampgsN4h42KioqKiorKnRfg
cHZ2FhUVkfN341RVVVVVVVXvjHp5eRF+X0RFRUVFRUXlzgv4MN5Vq6KioqKi
onJnxfDhnBzlwyoqKioqKrUhXp4al1ZRUVFRUakN0fVhFRUVFRWV2hPB4Uqv
DxfVoKqoqKioqHy7RfhwhXG4prFTsVhFRUVF5dstlcNhlsI8KipIZU2ruuan
SjoqKioqKirfZkFcWp5buuX6cKH8X5B2gpJDn6akoN9RcsjvKCX495QaxBr4
CKWxpgTj+G/lrxwvUx9h/Q2lhv6H8jk9e/oqKioqKirfNqnQPq2ifPmTFTme
4vfWoaSAn1GS/48p2e8+SvH7CaX43k+pvvdRMh+zjv/EOl6e+j9EyZxOduS4
EunXpBSVE/IuKu/EbZTayPNWcreVqaLlud3lvuva5Xan76jv3VZvFZVvk3h6
et16n5bB4SsTKHH/dykp8OeMxQ9ScgDjKf8Frqaypsgx6/tNNeAXlOzzXcq+
MrFE+hUV8y6wmpLS7xizHy8sLHR+LiioHG+/l21beW1S+nxl0zRtaH0uqJGy
2gX9VVvNbh8vFb22sLDkX9Om9s+l0zXfTRuW1Y72Y2jz6o7Fmp5zKioqxVIp
PnxlPONwHQcOP+BUg73J/g9a+Oz4bCmw98GSGvBzxmHmw4zr9vSrK8ZMwAaV
51ugrhWxleXZnKpgT1JScq3bMHv2KEtWVpZ8xm984Pcva1sq2i9paemlMKnm
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
R1Ga45V3bVlS0XcjVeaamkyjOtdWpG6VeZ73VlJe+9+sHAbPwf/xnpLKlOFm
9a1M+Soqlcmv9HtgysqrMu/bLHmfvn9aReV2S2VwOCdyAqXsZRz2t54fhqaK
PkRpgazMkYv1IYlBA4fx/q1kPEtcQ+/TKu+Y3R5V5HhF8yzvOQ2T7q1sZFn3
3Oya8q6/VRy9JvKsLhZX5N0i5e39Kuv7rfC+InUrfU2+vJO5sFp9UZnrK9Im
5R0vr60qOvbKur+svCs6Zqo6j1RUVMoX90rsl7Y/P3zDO6MFXx8oVscx+7sv
b/f7pVVUVFRUVO4lgU/r4eF+698fvgGHf1E2Dvs/cMMx8+7pO/E7DyoqKioq
Kvea7NixoxLrwxPk9wpTAn556982vI2/e6iioqKiovJNEQ+PPRX/vaXIsfJ+
acFSv59Y6u9Qv5uo/49LfX+IkvcyH44cVyJ9FRUVFRWVb5t4e1fk94cdz5Ok
H6fUg09SauBvKDXoEdbfV0yDf2f7jvv4/tD/UH7aiRLpq6ioqKiofNvEqyK/
P2yXojwqKkhlTau65qcSFepvjquoqKiofLsF+7Q8PSvAh4vvqOkS1HB6Kioq
Kioq95Z4enpWAochRTWoKioqKioq316x+HBlcVhFRUVFRUWlJgQ4jPVhxWEV
FRUVFZXakQ0bNjjf3a6ioqKioqJSLNb7XG/fu1yR7pIlS+S3W8x3FRUVFRUV
lVtLenrWrS+qgEydOtX5G3GKwyoqKioqKpbgt0sTE1MpKSlV/qamZjiP+/kd
J0/PEAoLu1ytPIC748aNc/4GqeKwioqKiooKyW+y+fgcpgMHjlJg4An+e0Qw
F7+P7uUVShcuXKXIyBj+HELVgU7g7vjxExSHVVRUVFRUbJKTkyt4a/8Ne2Cz
t3cohYdfoeTkNNq+3Zfi41OqndesWbMY3/X9zioqKioqKkaAwz4+h4T/QnJz
8wWXDQZv3XqAYmMTaySvJUuXyG+Fq6ioqKioqFgCHN6375BwYMSKfX2PSiwa
GLxt2wG6fj1BMNrOl6siSBvPLeXl6bueVVRUVFRUjACH9+49KJ+xTwufsR68
bZsv8+AkwU+sGdcEj/Xw8Kjc7zyoqKioqKh8w8XgMPD2ypVY2rnTTzhxXFyS
nM/KypHz4MvVFfzOg+KwioqKiopKsVjrw4ed30vvYy4oKHDGrasr+l5LFRUV
FRWVkpKbm0fu7oEUE5Moa8JQPEOckJBKKSnpdPnyNebDh6q9Pgyp9O8Pq6io
qKiofAskPPyqxKIDAk6Qv/9xpwYEHCc/v2MUHR1f7Twq//vDKioqKioqKjUp
+ruHKioqKioqN8qt3m1VE+++0t8fVlFRUVFRqT0BDnt7eysOq6ioqKio1JLs
dnNjHNZ9WioqKioqKndazO8Pm995UFFRUVFRUbmz4u7urnFpFRUVFRWVWhDw
YXcPxWEVFRUVFZXaEMFh5cMqKioqKiq1JorDKioqKioqtScewGF9r6WKioqK
isodF41Lq6ioqKio1K64e3hQbm5ubRdDRUVFRUXlWylubm6UmJhIGRkZlJ6e
rqqqqqqqqnoHFXHpxMQkysrKZizOVFVVVVVVVb1DmpmZRR4eHpSamkZ5efmU
k5Orqqqqqqqqegd19+7dlJySSrm5efKeaVVVVVVVVdU7o8DhRYsXU4risKqq
qqqqaq0o4tKKw6qqqqqqqrWj+P1hxWFVVVVVVdXaUU9PT8VhVVVVVVXVWlIv
Ly/FYVVVVVVV1VpQ7NOqLB/OqkGt7fqrqqqqqqrWpgKHwYfx/HBFcDgrO5ty
+Z78nDzKY82vgpr7kA7Sq+02UFVVVVVVrU31Ej5cMRwuzM2n1MxMik1Lpfj0
NIpPq4Lyfbgf6SC9ypQ1J8f6m5WlqqpaWu1zRFVV9d5RT69bx6Uzs7KpIK+A
AqIu0aObptDDLmPpd65f029dxxWryzg59nuHynmXcSWvcbWuwf1IB+khXaRf
kbKmpWVSYmIaa6qqquoNmiZzpLZtiqqqasW1onHp9MwsoiKiEQc9qc6i3vTg
mhH041XDRH/i+Hv/6uHy93vLBtF3lw2kH63EsRF8frhDhznvwf1IZ8TBPZIu
0r9VWTMysighIVVVVfUWirlS27ZFVVW1YorfdsA+rYri8NjD3vTdpf3p52tH
0YOMsdAHWH+6ZhT9vxVD6D7G2xd2zqVXdy+gX6wdTd9fPkjwF8d/tgb3jJR7
cD/SGXvYq0I4DH8Bfn58fEqt2zhV1btZMUfS0jJkztS2fVFVVb21yn7pCjy3
ZHB4DONwnSX96GeMow84MPjnjLf/yxgM/A2Oi6TjidcoMPYyeUWH0zueyyUO
/cu1Y+g7Swc4cRv3I50xisOqqjWqisOqqveeenp6Ueot9mmVh8PguHWY12Ld
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
bqwT4xjKAp8AuIv93VKG1Gwnd0LcunTZi7Xk88P252kFo/D8LmOmxKKBU+EX
BBvxbBL4Z6HjvRqCrdgPheeF8VwujtmeKxa8xjPCOGd/bvis7Tli5GV/fhjf
8awx7sH9eB4Y6TvSleeHT56ScjifZ7Y9s+x89rjE88PHi7+fOVP87PBd+Pxw
6TFdlXsUh1VV7x2t6O8PZzJeF+QVUEDUJXp00xR62GWs7LnC7x2WUJdxchz6
e4fKdS7F1+A77kc6SA/pIv1blbMi7/Ewz/eY92zY47KlnxU253DMPFNsx3OD
02XhmPUMUUaJcyZvpAe121HkieuByxb+Jt8QMzb3WbieXOI++70mb5OneYbY
+AOmrjh+q+dNS7xPy4Gtgk14zxUwkvHLvKtKsAzYZ96r5bhO3ovlUJNGifds
mXNyT0jJax1plPU+LWf82/YeLuc7s8y7uMz7vW71ri19n5aqqupdrBX5/WGj
hbn5lJqZSbFpPN/T2e6nVUH5PtyPdJBeRcpY2fdL3+wdWZV5n9at+HdZx+wY
W1Z6N4utV/Te0u+6rOr7PEu8X/rQ4ZLvXj54iArwPNNB63uJd09/Y1TfL62q
qlr7WpH3eBjNys6mXJ7f+Tl5lMeaXwU19yEdpFeRMurvLd1G1d9b0t9bUlVV
rTWt6O8P2zWrBrUy5VQcvt16F/wesP7+cLVVcVhV9d7Tivz+cG2r4rCqasVU
cVhV9d7Siv7+cG2r4rCqasVUcVhV9d5TxWFV1W+OKg6rqt576lWB33mobVUc
VlWtmCoOq6ree+q1bz+l3PV8OIcyMrJq3capqt4LirmCOVPb81ZVVbViumPF
IkpJSqbcvIo9y1ubCk5svVsjVVVV9QZNkzlS2/NUVVW14orY1cLmL1Bi7HXK
zS+k7Fu816q21fj4WVmqqqql1T5HVFVV7w0VHG5Rl5JiY+4JHFZVVVVVVf2m
KXA4MeY65SkOq6qqqqqq3nFVHFZVVVVVVa0dRVx6UYsXKekeWR9WVVVVVVX9
Jil+f3iB4rCqqqqqqmqtaPE+LcVhVVVVVVXV2tAFzRWHVVVVVVVVa0sXtniR
EmOu6T4tVVVVVVXVO6xWXFrXh1VVVVVVVWtLFzavq3xYVVVVVVW1FvRe26eF
/d12tZ/LzMyS99uXPl7RdNMzMiWN2q5j6TqZMmVw+cqqW6bjWGZZ52z311T7
o41ru10qUkerrJV713J5bVydspUekxXtk5ruuxvqKulXva5lzcGbXWvqU6zZ
Jc5nlDN/cZ25vrz8rHa++fwtPZeq236Vqf/tHmd3QssbL7d9nN4lbXWz/q6J
Mi5sfm/EpfH+3IKCAsrPz6eCfOtvlqN94E8YKSosqlSbII28vDzn/XdDn5t+
N4LvkLy8/BLlQ71RX/xWFv6Wd39N1AlpFHIepjx3g5ZXR3zO5zFSmbKaMYSx
kFVGPpUtl+kzSGFhoXMeV6RPMNbtfX+z66rVbkVVGxvFc7GgQvcXFRU560O2
j2hz2HCMa2dbFRQ67bqMb9u9yNNuD0u3qUmzdJns12CumL/VGXuVqX/Z4yz/
rrE11RkvxeO55vO9W9oKdRPc4bFZ1nn72KxqHvfE+jCXC31x8VIkXbl6jSIu
X6XIq9FyzMwn733+tH7zLjp77sIN87E8rozvuXxdTEw8TZ65iDZtcxeMN9fb
/bxM8ekdvnk53FN88jLOlbYdJdJ1fLZzAhxDvwcEHSK3PT5Sl1XrNtPV6OtS
Z/Hn+Xr8zuzJ0+coITGZTvFf3GdsG+4PDD5Muz32SRulp5f02QxfLO3LmnqU
5HDZkt6xE2do41Y3OVaWD4jryuY0JdvftIGzDOWMO8O/MzKzbig76oN6ee3z
owP+IVI+U3a0AcbK2vXbnd9vVjYcS01N5zbeQteux0ob26/B95J9VnZapmwo
C/Lcuz+QXDftpHPhlwRPkE5AUNl9YtoE5YUv4Oa5n1a7bnXa+uI2LLZReZxG
6bFUFv827Wg+o3zbd3tR8MFjjnJklPA97Nfb08l09BfuuRhxhSIir1K+w0be
bI4dP3mWAkOO0KEjJ+jw0ZMUHHqUQg8dp+SUVJmrcfGJUh7MX/Sb8T9S09Lp
6PHTXM6jcu+VqGviCyJ/mbvifxbKuTXrt9G+A4FyX4ENHzOzrLngxfYBbR8b
lyBzPSEhSe6X8WUby5ZfkCd1La9/0Y8XuJyRV6KdGFHWODWKvjJlTuO2Xu2y
ha5GXZfjGTfMvxvHVnHbl+qPm/DQsua36X/TV2XZI2fsQuqZ5/STtu/2Ljle
HL7uuo07aBePZ3w27VjWnJY8bfnfbL4bO2baKsrYvXLiHjeLhZaOo2RmlrRD
kl855y07Z9UfYy/8YoTVj9n2OE2WzPGw8xctblhFDL0XcBjtDxk4YhLNWbiK
ho+dTlNnL5FjCQnJ1ObTXvTqW62oVfsvqW79ZjRu8twSttRIab8q05Hu6Amz
6P0Wnck3MNQ5j+28BQq+WVRYVOK4vYxOd7+oJB+Xe/mY4UToKzvPMT6D8dPl
nMP/HD91HnX9aqicf+GNpnSIbRjsDjgD5Nz5S9Tko67k4xtM7zX/lBIZj1FH
zBPIhGnz6dMeg26ov8VtC4vzK6MeyMPUA2MRsnLtZnq/ZWfnNfAPM21j2oid
J9iPGzwT/lNETq5j2qYse2fE/K596eNf9R9No8fPks9YWzCyd38AvfZ2a7Hl
uNe0WWGpMps+xW9w132jGZ04HSZlA0ZCgCFjJs22yi+4V1wfi7tl31DmuPgE
+oTH5CtvtuCx+RW9zH9h+02ffvrFjX0Cf1raw9EmK9Zs4mvnS9tkZxfHe0wf
oX4z5y1zHivd/saWme9GzJj/uNNXNGv+ijLb14xRiOkXFKvQNv4H8Vw0dbK3
u73vcxxzrNfAMfRBq8+o4QdteZ62pCZtulHztp9TbGw8BQQfopcbtqBGTTrQ
h6270LP1PqSlK9dLWqfPnJNzjXmM49xLDZtTn8HjnHXDOMf3515vTC3afiFp
4+9V9tVNOTIcZcN1X0+ZJzj8WY/BFH0tpsQ4Qvvn5lrzcMjoKZSUnOporxvx
BNJ70FinDcoswbdzbfMm09lXM+ZafYU5WpfnMnxaSBFRifFTug+NXTBzxeC6
fTyUNXfKmt9URDccL3DMC2ffO9okh/MdPGoKJSalyPfWHXqWGC8yJng8YAws
WWH1F+ZDeXPaXi97mUrYScf4gv1FvRMSk+gltufw3TAATVnt92eVsO95JW1v
dkmuWmyLi6RtTX52m22VMd/p55n2mjZnqYxjCPoVaUp/c55vvNeGdrrvdYyX
qsXorfdL3937tMx4HjZmmuDwmImzaZpjDnzeezi1aPeFzBuMT/TZv59vRFt2
7JHzaE/4whu27Ba/u9AWt8Y8hF/e8MO2kjZ8fMgl5tvwr0PY/8OYwHVHed6c
OnOedrrtleNmnlhjuYDtyWFatnojnTgV5oxfGJuGOXf67Hn5DB8a3MDwdZ8D
QcJr0xgvwMfBCcDJIJi7fYeOl2vfbtqRDh87JceDQiw+AVsC++bPvPk9xkfM
GYxFg8Mz5y2nfsMmyH1ruT7XOV3MM4w/+G/L2db7+AbJeBN+xedQnmWrNrDv
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
SWbutefNXRes+137OZMnvC94BzGUbbv2UI6Dh+3f5dq/Obbfa38v53fHbuUD
2wJjRxgLg5+C+K+JPbp/m20Xw0dSVg5b1/28t/7FXg7gcHB31fotxS+2/Kj8
fa7ROU99Y7oHf8ddsrPzr4FQFAQEBLI/nFhuedi0R/taLu56iWMFrT9rreHi
uoaKucduV3u73zzf23ovJh9JtvSSHfNo8z3T9i6yto4ttudyrw/rPKfke0aK
0z6x3i/V+TzXsvKcvvO8ed/k1PznkvPS85amOWbPp7f4uj2P9rrIy0fevd7e
yyWtZNc1rOy64W2dWHON+z0FrVNs3sldJwuuE8/rJTnf1023CsqXNXabJH4s
/CPM/XDRP7f1slzKKiW//lvP9ra+c+FtLO89PNWz57IybcbAU/3Y70kupI2m
2NpSQfqO60xZudeXvYwKqx9vOuRJB721IfCku54V9jxv7cDezznfjY8hBov4
XI7b2rj2cnAvW5Omu56759HENeDnYw0bxA7c16srqI26/+29DbvWoYkNIO6A
8RArTuHKlfb2kjfPxnsf4qk+3fum4iKwnPvDCoXCM+x+rruPr1AY2H3dkk67
IJ/1TsP+bE+xnLICmafFPJyQoDysUNyLKMhnVyiAwuIYtwvjY5bGnnYmpnI7
e4vdDSAurf6wQqFQKBR3HzJPKyBA5ocrDysUCoVCcfehPKxQKBQKRemhPM3T
cp8H7X6srONO5bU8lYFCoVAoXAF/uLzwsFkzwayHZj9W1LRk3v4d4C/zzZ+n
c5l3qIx9KQP7tx3K2wqFQlF2UJ78YXwTjvl2WB8Q657gmFl3tCjpmG/L3PdJ
lXO+3O8lTfyPvCXY9j6yn0deS5IDzTdvWN+msHmxLt+cF3PdF4VCoVCULMw8
rbLOw2atE+wXhP3OsD6jrGPPvPx+i46yVqOsr+rY3wj3JDvWRzTfq5u0zDor
WNMOawkaH9V8i27WVPTEUyYdc439uFlnD2vkYz05CNZik+PM99jXHfsGYU1y
+7qJ8p1+AXk1z7Pnw1yH9YawHhvWo8P+l1jWKMmxF1S6rQywTg/2WcG6gVgP
D/swFHcNNoVCoVCUHPK+Hy6787RS0/J4D+uSbti8XdYHwn6c4GHs+469S8TP
Yy7Gu5j1C8z6gvZvuM2671NnLqSWbb9yrkfmuNB5j6fykDXWsE+W4xrDncK5
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
M9cYeBKzVpKB8Xtycuz35q1VhaTt13pbq8uerllzyn1tK/u9rtfnj1/a38W+
dpb9t3tevB037+Mpf/b1slyv95w/+3FzL77xRswX89pM3u3v616v9ve5fv2G
zGnDfG/zXbC9DCDQXcxBQwwggP10e3m6rx3mrf591Zf8eXX97SmdwupSRUXl
/hYzT8tXf9jwMPZ1iHespRUveMjBxw8LBwtkzY6HxR/G2loua1uWAX9YpWyL
J7dRfUkVFZV7UQL81hVrPS3P+zc4eNl2TNbd2l0y60urlD+x1kgp3j5Qxv80
a3sXdk22+psqKirlTMQfXlcUHh7h4OH/LXxPJd1vSUVFRUVFpUCRdS2LxMND
ZN/g+JDf2vYSNnsOF7TfcMnuP6yioqKionKvSODatT6s42HNRUm/Pptitz0g
vmyRsCP/79itD1D6tTku6auoqKioqNxPYvzhQnnYsRZubk4mc+ds8WMxtiu4
5MDlgjDc9TffDw5Gevb0VVRUVFRU7jcJXLe28Li0ioqKioqKSomL+MN+fkXj
YYzl5mY6/i8uMnVMWEVFRUXlvhff49IqKioqKioqd0ICNC6toqKioqJSarJt
wwbnnnMqKioqKioqhYtZl/d2l/lDGotmz5a9bcxvFRUVFRUVFTvXunJuSXPl
jAkTKTo6+o6kraKioqKici+J4cmrV29RWNgJSkxMue00rXlahey3pKKioqKi
cp/J+fNXad++Y7R//0n5/9Spi3L83LkrtHVrGB0+fI527Ai/7dh0kb9bUlFR
UVFRucclIyOT/P1D6MKFaxQZGSX/JyQkU0TEVdq8eQ9lZmYxN5+gAwdO3/az
fFpfWkVFRUVF5T6S9PQM8XXtcvHidebgvczBmbRnz1HaufPAbY/n6vfDKioq
Kioq+QU8vG3bfvF7IYhF2zl4166DJfYs9YdVVFRUVFRcxfAw/FXEqLdsCaWU
lDTh4KCgQ3L83LlIysm5fX/Yp/2HVVRUVFRU7iMBD2MuFuTKlSjy8wui7dvD
affuw47zmRQQsI+ys3Nu6zk+7z+soqKioqJyH4nxh+HvxsUl0rFj5+natbxv
fNPSMoSXb5eHIT7tP6yioqKionIfCXh4y5Ywr+etWHVYifnDysMqKioqKip5
An6FPxwSckS+Hw4NPc44IWt3hIefkrnS+F0SovsPq6ioqKio5BeMAV++HOUB
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
7YwdnKfTwrtIE88Cn58/f5nmL1hCc+cuZNo7J8fAswcOHKWgoD3OfKWnZ9Pi
JSuowjsVJS+4xvjQ5n+Tf2++tyDa4uGUsxGWP8i8xC9KxwcPpp0tWxIXGh3p
24821atP4d27U8L69cKJdh7O2buPMnbutPiZuSwrOJgyd+8WzswMCnJyHo5n
8XEcw3nDfdkhIXIsm5+fvmMHpW/fTmnbtslxwPmbz9OhQ8Kd8jxHmnKegf/N
OTzb3GvO435zPZ4jHM72hdOuAA/zNSgL4eFSHvuw25F2nSzctlIeVijKI3zd
f9idh4VHp33FXLuPFp0/SGOP7aarKYn0SdAK+u5YEAVHXaDnVn9PE0+E0FOr
vqe1F4/TE6u+o5mnQ2n2mTD6f4hLz+pZIuPDOAY+unYtmqpWq8Hd7CHhOUif
PgPo66/7yN/gtqwsEhj/Ff5uTg5RZiY5+zv4rLmcJ/imNWrWZp7dKXyK+9eu
3UCPP/53+tvf/0mP/flx+uvf/kF//8cTwrMBzLN//NOf6dE/Pka//f0f6Lnn
X6R9oQfkvgYNG9Mjv/09/euJp+gPj/6J6tZrSKdOnefyz6Ddu/fS008/R7/7
w6P0KJ9D+v7+AZSdTfTpp+3phRdfdvrHSAu83/WLbnT58nX+jTrLluP4H3ne
uTOYKr5XhY4cOSnH3OPanng4x3Arc+3aSpVoY926dHrUaIqYMJFCu3Sh5a+/
TscGDRJ+NrwYu3oVLXruOUrZwrbU+fO0p0MH2vbBh5S2dQvN/utfKXL6dOJM
0v6vvqIdH31EJ0eMoCUvvWTFgo8coXVVq8q5i5Mn0ZTf/pbm/esJ+T9i7Dg6
PnQITf7Nb2jBk0/y8X/R9blzKcnfnxY8/ZQ8f0/HDjT1d7+juf/8Jy185lm6
tXwZLXr+ebnmyIABNOnXv6Z5TzxBMx57jK7PmUuhXbvQVE57Pqe1+MUX6dKU
KRa3Gz+7jPAwuPbGjRgXOw2A/rmPWSgPKxT3Bnzdf9jTd0v47ujLfX607do5
emBCB3p7w2RaGnGYmmxbKDHpoQe30sn4KPrN4qG0/vIJ2h99hQ7eukqPLRsh
861Lap5WQTzcu3c/6t6jl/w9f/5i6tixM40e/T1duRIl3LVw0TL6rEMnmjx5
uvSBOBYQsI06ft6Fvvt+PDVq3JR27QqR43hWZOQNunjxKk2dNose+d3vadmy
VeILX758jZ548il655336OzZCxQadpD++a+nqHqN2nIv+Lxa9Vp0hs/NnDmX
Hv7Fr6gNc2xqaib7tu/R0888RwcPHhVufuONt+mpp5/l+9KpffuO9PwLeTyM
/njr1p3Uk20L9NeHDh2X/NepW59GjfqefeTL8vev/vfXVKt2PQrjfCAOno+L
3Xg4NzRMfErwbAjz6cJnn6Xwbt2IX4b4pen0yJEU2KSJCw/HrFxBc/72N0oJ
5DqMiKCgTz6hzQ0aCA9P+OUvhQdzjx+nsK++pA21asl10x59lDlzufjB0/7w
B4peupRODBtGS195hTLYV07dupVyjx2jkM8+o7WVK1M6+9Qb69Sh1e9WpPh1
a2nWX/4iY8uBTd5nzv+AMplDUwK3yH0z+VzSxo20j+0GcHwWn0tlGyGXfd/A
xo1oC+c/jq9bX6MGzf773ykL7434OWLZZYCHTWwEdlmTJs1FR8HFsBtXr/aj
hg3fFy42sR/lYYXi3oEv+w+78zDWsvzZ/P708PyB8i3S3LPhsrYH1pKuHTBb
xoM3XjlNjy8fKZwdlZpE408ES4z6v+f0lbWnS2odDzsPV6teU7jH8DD4atDg
b2jfvnB66eVXaXNAILVr10H8TT+/jczbNWn1mrXSx4Fbz527yH7sSzRmzFjq
1asf/eXxv8m94D/LN4kXX3nlyrXi327bFiTP2b59F/3fr38jXI9+E9cMGTpC
rgFv16nbgOo3aCy+NqQD2wNPPvUMu4Un6Le/+wONHPmd3JPDPvCMGXOER3Gu
S5cvmYdfcsaakfaYMT/Q//zsQTpz5gJVZ25/5dXXaey4ifTuu5XEX//88670
+z/8kT5t+5n4xPbx7QJ52OGnbm/Rgi5OmkTBbdvS1qZNxdc998MPtJV5z52H
4Y8mBwTINbs//ZT5rjElb9pE8598gub+4x/iSx8dOJD8qlUjOn2aVrz5Jh3u
25cuT5smfi7GoI8PGSLXhvfsyX7rF5TKHL2vc2daV6UKZSI/H7agNeyjJ7C9
OIf5M2ffXj72Ia2vXp0i2Oe+MmOGxJtns00AHg7v0YP96KcovHcf9re7USa/
1xbm7d38PnT1qnUt++s35s+T981xzNUqbR7O49A0Gjx4mNiUsbGJtGnTFomj
gIvB0x7jG8rDCkW5RnHXtcR6Wj+e25f+vPxbWnXxKJ1LjKGzCbeEZ3rt38jX
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
R5SHe9+SlJRCcVzPRX0vb9cif3FxCcV6T6/Hi1nepr6x1wFiO57Ox8bF+6QX
Jg8oq+TkFJdzKFNIUeoTPGIEZSaSSz6XIZCQmES3YmJd6jTVlt/MzExnmkXR
M2f6CUnyDHtZFgVZWdnSJn2pS2db5fxCX42Y/geSlZXlLCtcgzLEu9uvt5ep
Kefc3FznMeTJU10ZPYl36Il7W3PPN/KJvBVULuiT3J9llUlOseqjIBSkT9BX
X9q4J32yv3+Z1Ccv15JRCehTbp5+mPXWjW4hH5BsTht/l6Q+3S7KS1wa5YYy
mb9kNW3YvJ0WL/cjP/8tUi79hn5Hn3bqRV17DqHufYfTtp0hov/e6h+2kady
cH+e2EFs07nbZtBTsUUd5+CD4353G9Ict+o01SVdyzZzTRfHczjfV6/doEq1
P6S9YQflnZOSkh3pu6Zj5SHTmR5iGsNGT6Ijx07Rt99NoWs3bkr/gLYJWbV2
k5STZTNnuOQ1xUtezTPsZWDa/t7QA9SkZSfhkSx5Tp6t6fqeqbZ705xtwN02
xTlP5e2eR3Ov/TiAsho/dS71G/Kd5A/lJse5rZ2PuEQNP/yM+544eZ+k5JR8
dWb+Rh+UyPe2+PRL2rI92NkOcV9sbDzt23/ImRe7nrjXp11vQ/aGU+sOPanh
Bx3oi6+H0sHDxyXdkH3h1ORjqwxRV/YyQX3jHSAz5y2T/Jtn4jyeiTJHvq5z
XYcfPGrpsq2cMzyWc15dJ3JfCYHefDd+huTVPaaUp9+usQDz7pB1/ltp1vxl
wrHQN1xrdNP+bJTtpBkLqG3n3vRV72+oZ78R1Ln7QOr41QA6evy0pDV34UrR
q3pN28o1Z85e4HRzpYwGDhtLnboP4nsGUe+Bo2hXcKizfvDs02fOS/nW5XtR
rguXrpFnOt/F0RYmT1/AejJGOOu9Wh9IW7PybpVniuig9Y5hB45Q1M1bEk9x
r1+jd+s3baMR30+VPh7PQH43Buyg6XOWSpt2+lVe9KSo/aC7Ph04ZOnTitX+
1NZLG8e9BekT/r4dfbL2wrsz+mT03X59uuPZeFb7rv2oW59h1KPfcNGlrl8P
oWvXoyid7xk/ZS41atGB6jVrJ30D+lfUSRz3l7erTyXJb+VhHQ/TfsCzP0yc
Tb0HjaLR46bLsberNeH2OozmLlpJXw/4ll6qUJdCua90t11M35Oalu7yrihX
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
Aw9gDijm7Jr+L29NENd1CI0+etO/gtYtNG3IlKO3PsvTGozmWjMPU9Y2sd2P
diFtXfrDLMd6G65rSpjvwE0f7On5dh0z6zLk03enXuTZ2+714lpvrv2C/f3M
t/me9ETStaWFckYsF36qfHvo9n1MYfrk3sbNGgEF6hOnZa0PULg+mfvBYegj
wd93Wp/c9d3TdZ76DdO/mHm17mVfUvpUElg9ayzFXL9KGVk55ZKHzbz+1FTP
69S4n4N9BzsbeuB5XTdrzRqchy1k5liaNWAKekZxj7tf4+m3t2PFXaMy1Uv6
7vkq6Bmudoe3/BV+3BfdTi0gP76Uc5HKtJA8eS4j39YgLqyuvetAYXn3nC/7
NcY38qbHRdG/wt7Vpzot4N29lVVh5e3t3qLVZcHX+FwOXvJeWBngmPEni65P
3p9fEvpkP2biYYXV993TJ8/HU+6iPhUXGB+OL8dx6aLCxKt90RsTpynJeXEK
RWlBfO0ykA+FL3VV9vvj8pDH8gBZT2vz5nI3X/p2URRb+U7bQQrF3UJJ7DOg
uEt1dRf22rsf8lgeUF72eVAoFAqF4l5FYDn8flihUCgUinsFAeoPKxQKhUJR
KpDx4U0bKS42ljLcvuEpi7D2NrXGbDHv+XbSKPJ9jjU1fb3+dvJoYPYtvdP3
m+8e3PdaM+9Q3PmCuC+pmOV9p/XI5C/ZQ/n4Mo+yuPCmF56eaervdvasLWso
bvtz6pSX+e9yzMtxn/JVxPZdFlCQLtnX/ihp3G6/VKJ58VLf3vJob/v2tTFL
ux4XDu5AMdcjKbMcfLdkvpcz3xcW9m7ux8x34Z72ty0sLesjMs9rR3q63qx9
fzt1Y6SoeS3K/bDF8G0cysZ8IwegT8pxfKOY9+2d723P/vysQuan302YdRBE
F3Lzl0/ed99Z8t2i9f1myTzbm17kf6alnyZ/EHzX6k2vywuK2/7sMLqKcnT/
7tB8m16ceilK+y4LsHQpx6MumeOevsssiecWp1+6EzB9l/s3AN7y6NL2HWKO
3YmyKsp7TGz2JMXFxFj+cJnVQesbcKw3i+/GsZ4u9glw7imUYu07Yi9z+S7b
xhv4lhzfnmP9YqzNYu2la9lE7ja62JMpeX4g+kesBYu17swevOZau68ia9gm
WXsYY71z7Mdnvk83tqt7n5/iIe/YwxvPxL6EZj85s/65vVzc78X/5pss/I81
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
lkveH/L4bd2+S6bNnKc52MmrRL7Oe58oHskdGeTAxackPwg5+ZavXCdfjp4o
9z9VQn1rzrn38eIyZfpczSH6p388oTn9WCcm71a7T7rLdMf7hctUVL6MvHv1
rHI8nEoe6teq1NVcT1VrNtbcf/AwOV85npxivGf/rM877rgbe4H8ruTH453q
dz5YUPOqjXG2Afm6yFtCvh5ycJHL1gt2ATlXyF10Lnjfe273icFgMBiuHvLC
Pi0fP/64Y0/NfYWQ36pxq4+jfEU+1DqOpzVenBR5bzd5NcjRTS401n/JyUku
rTfrNIvm0kbI6d2992CZ6ri9cJnXo3lbyE+HH+rfjQ4H7969T3MF4xMj5JbG
RydnGH61z4vJ9X2O3F2790bO2R85h9xl5Nbl+9i61KjXQnPcEYPetmOX3PHA
c46DR9q7WA0Gg+EGRV7It+Rz2L7/cVfN74mwXkqeUy/kJ32rrs+nnaSxbPJL
kgebWDH5xB9/rqysWb9J85T37PtFiPuaKw8TSybWnBbkTMNHfa5kec2BAg/D
qeTRhZvhX4S143zFXpW16zbJ6281kj4DR+gaMz45vAmfbtm6I8ihHTmHfKqs
D5NDuHJMXcj3Tr5cZOOmrZpvnvxfkXi08bDBYDDcaMgL/nB0n5bj4TLl3tTv
Bg4d7Tj2Bc3bRnwXnuvVb6geR75xpHnbDsqrCPm273ywgObCZm24UOmKmrt7
zdpNcvu9+TSnO3np//lIYZk+a4HyaOW3GsqTjsdPh/Yz4+PmL/6adOjSR2PE
PRyHsm7Ns0isK/d2PKw+uebSOhPds/WMqx+2Ap/J3X77ffnk8OGj0qXHQM3/
SW5qcoyTG9bnoSaXOXHzgweP6N4x84cNBoPhxkJeyT8Md+FXkhv7EcdTxHLh
JPzcp51fCQfjH3u+9M8HEZMm1zV50V8K1m7XOL8VniYWDce+4riz+ItVlJuR
zo4XiV8XK1tFXn29tvu9djQfFeXiE893nF6wVAUpWLKC5C9WTveQ4a9Xqt5A
Bg0bE+LhlOg5HIMPDIdzbeyAzVu2q6/NenH+4uXk6cIvS5v2nfUeKA9//I77
8+t9XCyXncFgMBjyHvJangf2Qx93Pizrq9SXeC0+7N59B5Snsz7jm6Lfwbk8
dwwfsg8LruadGDzvtH3HHueHntTj4Vr+55wDzv/ctXuflsd7PGJzgsGJ+Mv4
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
EXx/Pg+3zVL+xWT3nr1y+vRp/ZyREdHV+/cflGPHjkeKcfobvwXfzOty/vaf
w76zPzaepKWl62+bNm2R8ROmZDZD4HP48/CPvhg68rzrxys3/F1sHcMSrZ9E
6rps2UqZNm2W3m88f+xi/nK8OmV+d+48f/5cDsv07eDPnTRpmqxavS6u35h9
HTKP4XNs/2TXPr7O/pzYa/jrbN68TTp17hnUNfN32j77MjPOqztYsXKNtGr1
oWzfvlO/5/jYtvPnxpYfrl92/Z6TcRo7/pBRo7/SObBz524ZN25S3PJMTEyu
b5k0aVKO/WF4+EQMDyvXzv2xw0/k2IIfOXxPji/4jvOZb5Zj8/Cbv+/+d7/P
/+EV83DlyjWlfPlqWWJwtWo1lB49++vn2LjcleqhIUNGyIsvVY5bFn8nJSXJ
I48WkA0bNsflR2Tbth3yyaddQt+fX06sdOvWR5YsXaGfP2jXQapVr3veMTm5
t0u5/5weG68dkAoV35Su3fpcUR28tGzZLjomYzkxfp3Ov6a3YerUbSypqalx
z7tY/cJc+OyzxaV1m/bKebE2yuXc46Wekt01ChcpKwsWLpGJE6dJ6TKvXXI9
TExMcleY27Nnz865P7yrjfKn8qj6vxF/N2HOD+TErB/KkTnflSPz/0OOzv9/
cmzud93vNztO/g+Hf5djc/6v4+Cbr4iH3367gfzyV3+Vvv2GRL976636Tv/3
jt7PvPmLZNxXkyUxMUm/W7VqrRw/fkI/79ixK+rPnDhxUlauXJulLbxMnjxd
5sxZIF9+OTYLB+7YsVO+HDlO9uzZp39zjSJFX5RNm7fq38nJyfKVu/bChUv1
b/I6f/hhR+XqyZNnuL8jfLBu3UYZNeorOXb0eOj6kf/Xr98kTz9TTOrWayL7
9h1Qbnu38Xuydu16GenOSUg4laXOU6fOlJkz52bbZmfOpMiECVNdP8+PfgeX
bN26XesxfPgYOXTocPS3jHMZFy1z9+69MnToKFm8ZHn0u5rOHuo/4AtZsGCJ
u96ULFwVrw60IfEGL+vXb5SDBw/pde+++zFX1lCtV6xffOjQERk+YrTzdbdq
f+7bt1+/T3fXmzZ9tkyZMsPxbmQ8nU5M1OOQjRu3yN69+4JjZmap365du2XY
8NHu/z16vI9vaLnOths8eITrw+dk1qx50XG1YcMmHQv79kaun5qWJqtWr3X3
tVdGjx4vp06djvYRwliYMHGqG5uTomWE72v16nXZjNMEWbFidaTdXdnEXxYv
zmz3l1+uLEudvTHd3Re2kC+Tdjx69Ph51zExMbn+pHnz5k4vJOrnbOdrwJMp
jofZF80+LPzg487HPea4N2HhbZKysawkbSonRxc/IIfn/1VOLX9cji74qcP3
JWHxXXJyyYNyfM733Lk3XzYPv+k4t7HjpCefKqJxQqT6m3Wle4+++rlKlVpS
qnQ55c7nCpSWAwcOOX+5UdRfRk+VK1dVP/ftO1iqVq2tn30MD76oWOktKV7i
Fald+115/InCUuPtd/SYkU7n5stXQurUaaw8CadwXr7nSqrePHzkqJQs9arW
sWTJV127vi+JSclap4cezi/NmrVVfujeo58UKlxWy8+Xv6SsWbNeyyeWi6DD
4e3iJV52dsIa9cnvu/9p5eVSpV+VEiVfkSTH9+jy116rJpVeryEvv1JF2yEl
5WyWOCY8Xqz4y/KGu8+yL1SU18pXV17hXu53Zb5Vo77z91+Xp54uqvyW5Opb
7rWqccv0sYbpM2bLY48XlHr1m8qzrj06duym3zdo0FzrXat2Iyld+jV5yfED
dscBx63Fir8UqkMknoF98XbNhtG+rVylpnzxxZfSvXtf+de9T7q6vaNcF24b
+IdrVHf9W6HCm9ou2DPJyWfkhRcrad/Sf/iFCQkJsmjRMm1HrlfD2XDcJ/V+
6JH80rBhCy3zq/GTtX/4nXvmM/6lnw/45fXdOfc/+Iz61gcOHNbxxL3XrvOu
PPZYQZni7BbWMh51n0u461H3o0ePBWPrnK6llHm+gta5ohuDZV+o4L5LjPRV
EMNmzPbqNeC8cdq790Adc4sWL9V7r1cv0u6ff95dfy9btoLGTrCdKlWqod9R
L9rbX8N42MTk+hXmZ8mSpdSP83/HPzDYpxWsDx8nLj3/R87n/Q85sfReObO/
gySvLCCJm8pK4o5akrD6KUnZ00oS5gbPKK18QZK2N3LnOp943o8jPH4ZPFy+
QnXVN+jrZ/IVd/XNUJ03ePBw1bnPPFs8ei/4Z+3bf+b8vdGqR+GTAgVLS37H
m/Dtu++20vgvgq+CsL7mf0fwv+EkeO3pp4upzuZzN8cVZcqUVx2d/7lSysEf
ffS5cgmcsXv3HnnwoXy6Zrd82SrHz+W0PPwd9Pzy5au0nGbN20b97bB/hj4d
PmKMfu7SpbcULPR8lAvR9fAzbUC53NdJxznc+/jxU7LcT8tW7aRqtTr6OTUt
1d1/GccZM9RnfOLJwpISHIc9QLviG5dwNkS8Mj0Xbty4WX03ZOzYiVLA2Tva
VjUbyOuV3w6OTVc7iLgCPF35jVpZ6jB9+hz16+A+L9grI0d+pZ/hyyOuTXVo
hHiEvmjXroN+ps0fcNw4w9kFw4aNUhvFC3za03Hlpk1b1W5B4OcWLT/Qz/Pn
L5aHH3lO7c/iJV+WgQOH6fccD7cvWhSJZ6QFtgfxg+cKlNLPxCMefPBZWbtu
g/491N1HsWIvqV0ET9K2vt5esAnmzVuka8NwIzw6e86CoK8iMZKevfpLA2cb
MKbC47RRo5bSu89AjUEsXx7xi8e4di9U+HntE+wd7JNp02bruHmvdXvtCx8T
MA42Mbm+hTn61Vfjcr5f2vHwMXh1wU/UFz4684eSsq2VnFxeSg7O/pacmvVL
SZr+Mzm9+Fk5s2+AHFt+jxxY/i85traeJG6u63j436+Ihys6PUM8FCldppx8
/PHnTnc1V65FjzVsFPFx0E9wZmXHC8Rf8S/wM9u0+Uj1FP4gOn194G/59cMP
HW83bvJeUEa60++jlcfgBOKS+I7PO/+jaNEX1bcjflm4yAsaQ8RPeeqZovo9
/s4TzpcmRrt48TL1r6nTkiUrHHc8q7qT49Cl1Vz5sftzKlZ8SwYOGqa826Fj
V3nH+ZrhNoAzP/usm3IJdaIs+Jn4qb9/BF6Eo/y+qVaOlzu689hTVS3gZ6SG
s2Vow06deroy88ct07fRzl171N+iHQoVeV7vASEO0KfvoOjepdatP1LOxO8c
7Hx6Xwdsg06desiIL8c4W6lRdN9Rtap1tF84Bh7GhgnvueI44gyLQjFZfL7x
rp/btv1Y1+DxLTkO+6qh4681azZofMQf++XIsVo+8W5sm7379qu9AM96wb6a
E3Ck52H6l1gIdaFPfZlwHWMA3ty5a7cULlxWDh8+Eu1HuhWcdW3XtWtvV/Zr
zi9+TW2x6TPmBPcV6Sti9PHGKfYDY3iX42FiO9rurs2LFH1B5y1jCbth4YLF
cutt98uf//JPHXO+zUxMTK5/efXVV+XU6axrWedJXB7+viTM+a2k7vxUDs+7
U04s+D9yet7PJWHmt+XIwofl7LGv5MSOhpKwtZYk7+0nidveUR5OuAIerux8
JvwP6slaHryHT4TPNn7CVI3Refnkk86OG+ppXBCfk7jl5CkRXxCeIebqucXz
1oCBQ+Ul95sX1narOF+O9XPij+sCH+ik84m2bNmmPhAx5kNO97KG27RZ5H4i
e6236nkzZ8yN+mTUGZ/p4MHIeizrw+zjOr9P3tB9sAg8XP+dTB7G55k7d6HG
datWqx39fvuOnVEf0t8PsezWTqd7ISbMOujEgId9f7PGjm+LD/lG1fhlej58
xdWNe0Xwd+EghBhz8xbvR88ldgH/winsu/JSLqgD8eRXy70R/Z6+Gzduon5+
7PFCun4fuW6mP0yd4VfqQvvfffejumbbrVtf15/1omURe6bvNm3aptyH8LuP
MbBeUdD55fQfv3/2efcIxy5cIne6Mv26t+dh1h0KFiqj7cq6NvaJX/9dtmyF
cjlxaMbC3mC9OBzLx/fnnuBsxgTHsZ6L+GMYi9gyL7z4epZx6uMl9N27jVtF
2x0uxpcmfr3E1Zf1YDiadQzsM9YZfD1MTEyuX9F1sxo1Lm43n8fDP3Y8/AM5
PuvHcnprIzm59S05Puk7jmd/JkdW3iuH1z7ruLe9+/0HkuD49vTS4o6HG12x
P4yeGTBgaPRv9gP98Ee/1f1B7MnBH6lTt4l8/EknefChZ6M+B77Zb265TU6e
SNC44i2/vS3KT+FnT4h1olMpA7/xLqeTy71WTX9r9d6HutaKzn+1XBVd70UP
4t/u2r1H99LAsfDm++9/orqWOPQW58vc8Y+H5YN2n0pGsE758iuVdR0Uv4rr
IGHfD/589LECuseMuG6YG/HXRjmfif1JrJPjC+IbEx/38eLM9dRlzvfKp/H5
Ru+21Pgz/Na//xDlUy/ly1fXtUn8wieejF+mHyP132kmzz9fXnr06Kdrr/c/
8Ix+z33ddvsD8mmHLsqVxL25/xUrV2tf+DoQ34WPiG/Tvm3ctdq69vqfP97p
fMGI7cF9Yf9s27YzC5/hI+MHlijxiuuDqrpOP2bMeF0Hf/yJQsr38D48hA9L
vPbZZ0voucSqsbOQ/fsPyL33PaX9Rxs/7ew5+oJ+yZe/hMydvyjSjsF1sZW4
B8+92HeMRfqaGDP7BGlzyvR7+MLr9KypE0/BT2ct4o9/ukvXlCPtmhG9P9oh
dpziFyOsTZcJtTv9yvoD+wQXOF+YfXDPB3ZoixYfaL2woWx92MTk+peaNWvm
mIczn1v6ifLwifnflcOL/iQJB1rKic1N5dSW1pK84005vvIBSd7TQk7M/ZnD
9yRhRTFJ3FLD8fC3r4iHx4ydoHt8Ea/j8LmWLV+pn/FFWKdFD/nYHEL82a8B
IsR8163PWo7XVfg+rZ3ug8t5bpc9rl6GfPGlNG7SWjmUvUGcS1l+T87SpSt0
DRLOZt+zF3zNtu9/rO/xRl/Deew387Fnf31fB/jwPVcG8Ub2cU1y/k9mG0zU
vcXIBsdlcCa63d9vOMaNsBbNc6/tPuzg7m23fgf3+HVfZOKkqXqclrkhfpm+
PPjh00+7KOfhs7GnHJnq2oq/8S1bujbwe8hj67Bz557o9zOcnUTcGjsK/9/3
LdxN+exxDvcR8QRitHAs7V+h0lsyIvBxObZt20/U5lq7dkP0eOLyCPuUfZ+z
Low9x/orHEt5cDz3VrT4S/q8E+KfA8Z2Geg43K+7s37ep88gZ4u1Ub8ewZ/t
3/+L6PPtsdzHPnpsmKHDRuo5W4M4SJivGTOx49SvQ1OHcLsTs+aa/I8dwril
XP+cNLF/3w7GwyYm168wP4sULZrj/dKehxPYpzUXPv2JJMz7oRyb+1M5teRW
SVz+D0mY81M5MftmOTHvFn2mWPdzLfiFwy/l5NwfXtFzS/HqH+/zhb7LaXlX
UperUd7lXC8nx+TkedmrJRd6F8eliOepEY7z8bPhI+K1+IXw05Vco3Pnnur3
f+5465Vyb+iaAPx2LZ69NjExMYkV9MeIESNy/PwwOZV4bol3Seu7s+bd7HgY
/MDx7/+ThNn/Lqcc18LNp+Z8X3maGPaJ+eAHjruv7D0e/r1I53+X9X1Dse8c
irzHKD3uObHi3zEVwfnnxb5HKfzZXye2fP5m31dsHbOLQ3AMfnPGucx3MMVr
g+yul/V+QsfE1DNee1yszNg29uWkB/W8UPvHvn8qfHzsfWX3LueFC5dojB9/
NPycb7x6h2PasWPH9wcybdpMXUsgtpKcdP6zA+FyYtsgth2zk9gxld07tbLr
l2zbPZv3S1+P78I2MTGJL9OnT8/xfmnPw+R1OBm8S+uk4kcBH9+sHKzQd3bc
rP4w79bK8m7Lq+QPm5gY15iYmOR1Ie/hRfMPx3mfVvz8DQEvh77T927NvTrv
lzYxifjK5/vWV15m2jXPnWViYmISK+icnOUf9jzcNuDh/7p4TiXLt2RiYmJi
YnJRuaR8S7taat7gk/N/Gcol7HMOXyjf8NXJP2xiYmJiYnKjSc7yD0f2f6Qc
6C3Hp9+kvuwlYeb5fx+fdpOk7O+TpXwTExMTE5NvmuTIH5bgmdSMVMedvdWP
ZW1XsSvA7guhTda/3flwMOWFyzcxMTExMfmmCTx8UX/YxMTExMTE5KpLZJ9W
Tvzh8ElpDqnB/5eLVFsTNjExMTExkeC5pUvhYRMTExMTE5OrIv65JeNhExMT
ExOTr1/g4Zzt0zIxMTExMTHxEs4zfqUyadIk26dlYmJiYmISI5lcm5Vzr+Z7
9yhr5syZ5g+bmJiYmJjkQDwH79t3VJYsWS+nTiVdcZnvvfdeNK+qiYmJiYmJ
SUS2bdsnixatlaVLN+j/Gzfu1O+3bt0r06YtkVWrtjpfdtkVxabh9aJFikb9
YXvHvYmJiYmJiTj/NFXGj58vO3bslz17Dun/CQmJsn37Ppk0aYGkpqY5bl4v
y5dvuqLrwLvFihaTxMTE6N8mJiYmJibfdElJOau+blh27jzgOHih4+BUWbBg
jcyatfyq8GbRYsbDJiYmJiYmYYGHp09fqn4vQiw6zMGzZ6+4atcqZjxsYmJi
YmKSRTwPw4vEqKdOXSxJSWeUg+fMWanfb926RzIyrow3KadIkSKOh5Oif5uY
mJiYmHzTBR5mLxayd+8hGTt2jsyYsUzmzl0V/J4qkycvkvT0jCu+VunSpR3H
Gw+bmJiYmJh48f4w/u6JE6dk7dptsn//Ef0Nrjxz5qzy8tXg4XHjvrL3eJiY
mJiYmIQEHp46dUm2v0di1UuuCg9PmzbV3uNhYmJiYmISEvgVf3j+/NX6/PDi
xesc1uu7O5Yt26h7pfn7agh5HswfNjExMTExySqsAe/efSgODmqMOi0t/Yqv
cVn5h01MTExMTEyumljeQxMTExMTk/hyfq6HTFyt8o2HTUxMTExMckcs/7CJ
iYmJiUnuiu3TMjExMTExyR3x/nBKivnDJiYmJiYmuSFTbL+0iYmJiYlJroit
D5uYmJiYmOSeKA/b+rCJiYmJiUmuiT63ZDxsYmJiYmKSKzJ79izjYRMTExMT
k1wQ4tLt2rWTxMTE3K6KiYmJiYnJN1IKFCwgp06dkvT0dElLS9P/DQaDwWAw
fD2o8XYNSUhIkJMnE+TEiZMGg8FgMBi+JsC9pUqV0s/kbzpzJkVzHxsMBoPB
YLj2OHs2VerUqaPPD8PBBoPBYDAYvl6UKV1aTiacUk5OTjY+NhgMBoPh6wI+
caVKleTIkaMalzYeNhgMBoPh6wXv8WCdGH84t+tiMBgMBsM3DbxfOiGIS+d2
XQwGg8Fg+KZh0iTzhw0Gg8FgyC3gD18KDydfReT2vRsMBoPBkJtgn9alrA8n
nzkjZ905aSmpkuqQdhnw51FOsj0vZTAYDIZvMODhS1kfzjibJglJSXLoVIIc
OX1Kjpy6DLjzOJ9yKO/S6hv5PznZYDDEIjxHDAZD3sEU9YcvzMNJyWckPTVd
5u3dLv87/EP5xeBW8ushreVXQ97LxOD39LvfBNDfB7+X9ZghkWM4n3Ioj3KT
cvi81KlTSXLs2CmHBIPBcB5O6RzJbZ1iMBguDZOnXDwufTopWeScSNMlk+Wm
brXkRwOayvf6NVb8Z/D/D/o30f+/1auB/Fuvd+S7ffmuqfu9SYDG0XM4n3Ka
Lpmk5VL+xeqZmJgsR48mGAyGi4C5ktt6xWAw5Aw5jUt7Hm61bKr8W8968tOB
zeVHjmPBDx1+PKC5/L8+jeT7jm/vH/u5PPpVF/mvgS3k//ZuoPzL9z8ZwDnN
9BzOp5xWy6bkiIepJ3b+kSMnc13HGQzXM5gjp04l6pzJbf1iMBguDt6fxT6t
nPJwS8fDN/WoKz9xPPrDgIN/6vj2246D4d+Fh3fJqmP7Zf6hnTJl3xYpMLm3
xqH/e2BL+T8960d5m/Mpp6XxsMFwVWE8bDDkLeh+6Rw8t5QdD+Pj3uT8WtZ9
9yadlFqLx7nf68l/D2ohy47s1fzG604ckvUOdRd/5fi6YdQfNh42GK4+jIcN
hryHyZOnSMJF9mnF4+GbBzTTuPPTE3rI4iN7pN+WZXJTlxry6qwvZNPJw/r3
n4e3k+8EvvL2U8fknSXj5d+cX/zfg1oaDxsM1wDGwwZD3kNO3uMRy8Pw6Ld6
vSNvzBspWxKOyM7Tx+W12cOk5NR+sub4AXloXCfnKzeTT9fNlU7rF8i/O77+
07B2ssMd93N3LuvE+M3Gw9cTTsnRY98wcM+53u5XF8bDBkPeQuY+rUvjYWLS
vxvaVmPRd476VPpsXiJvLxwr5WYPlfJzhjlOHqrrxPzff8tS5d9q80fpdw+N
6yzf69tY49nGw9cBHB8d4Vmwwye+kTgS5eTroC+uAoyHDYa8B+LSl+QP96zv
/NuG8sqsITLjwFa5qVtt+Wr3Bqk870spO2OQrgU3XDpROm9YIG1WzZBbhrSW
B8Z+LsuO7pXktDT5/dD39Xkm4+HcBxx04sBRSVm7TjKWLpOMJUvd/98kLNN7
pw2O3CBcbDxsMOQt+PdaXtJ+acfDPKNUdGpfWXJ4jz4HPGLnWmm9arq8NHOw
VHF8fFPXmvKt3u/IKPf9nIM71C/+juPuyfs2S/MVUzWmTTmUdzV5+LDzb2J1
0pVw96FDx7Ocz2euEYvw75xzofPi1edi58UemxNdnJP7O+aul75ipciCBXJu
0SIRx038DzIWLnT/L5QMftPPizKxeNGF/77c73MB3DttQFvkNocaDxsM30xc
znNLPx7QTMFa8Iszh8gvB7aQT9bNkbXHD0rFucOVh+HqbhsXyT9GfSJLjuyR
u0d9Kk9N6C7Lj+6L7LPuXlefR76aPHz6dIq+U8jro5Mnk929JV82F6ekZLgy
Mq974kSiJCWlKhITz0Y/Hz9+WvmSa509e07OppzTYz2Hnjp1Jnosn8NcyTEc
q+c5UGd/XkLCGXdPZ0M6NkHrc9Jdh2tmy68X9e2cfeKueXrHLpGFjmeXLFGc
nT1bZNkyOef4WNatE1m1SmTDBpEVKwL+XJwJd7weG/wNhyuPB58zguNl6ZLo
b/53/X5J5HtfjmL58sj3/jv9OygrdD0ty5/Dd+HfwuX535ZkHs8xamOE78O1
AW1Bm9A2uc2lxsMGwzcLl7NP62fBfucGSybos0kfr50tv3Bc/Nj4rtJ3y1L1
ebtuXCgbTx7W54fH7F4nD47rJPeM7igrj+2Tnw9q5Xi4zlXjYXiH3xYsXCr7
9h3Wv+GrtWs3ypo1G/Wz9zcPhfyeeN/Bgf67fv0Gyfr1W/R8yty+fY+zW2bI
1KkzZfr02fo/2LVrv6tnuqOuzdK7zwAZOPAL2b5jj9oF1Gvx4hWunWc4zHR1
2qS8S5lcCz7ftm239B8wRPr2Hehob6t+B88uX75G5sxZEK1XSkq6DB4yXB59
7AmtC8d4H9r/7+ufne+tOBLh4aQt2yP+oOMld6OyrkULmfXqq+IaTVa/21gm
Fi0my+rWlYRx45QTwzycsXCRnJ01K8LPjsvS5s2T1LlzlTNT58yJch7fp7nv
+Y7fPfelz5+v36W766fMnCkpM2bImenT9XsQ/dv9LitXKnfq9YIy9XcH/ve/
cW1/rv+d8/3xXEc53NkXUbsCHnbH0BbKw7m89hG2I8Nj8uK2lfGwwZBXMWnS
pEv2h5VHu9V2XLtIBm1bIZ+unSv7kk5JhTnD5aO1c2TeoR1y58iP5fP18+X2
Lz+W0TvXya1ffiQ9Ny2W3puXyP8lLt2r/lVZH+Y7+Gj//iPybL7nnJpdqTyH
NGrUVN55p5F+htvS0kTh/Vf83YwMkdRUieo7fNZzrk74ps8VKOR4dpbyKeeP
Hv2V/PGPf5E//+V/5fd/+KP86c9/lb/89Vbl2cmOZ3/7uz/ILb/9vfzy17+R
O+/6pyxavFzPK16ilPzil7+Wv916u/zmlt9JkaIlZOPGbZKcfFbmzl0of//7
nfKr39wit7jfKH/8+MmSni5SqVIVufuf/4r6x5QF779ds47s3n3A/U2fpev3
/E+dZ82aJ088+YysXr1Bv4uNa8fj4QzPrY5rRz/1lEwoUkQ2tftQtn/2uSyu
UUOGPfCArG3eXPnZ8+LxkV/KoDvvlKSpzpbatk0WVK0q0198Sc5Mmyq9//Qn
2dO9u7hKytLatWXmK6/IhrZtZcg990RiwatXy5hnn9XfdnbuJF1++Uvp97db
9f/tn3aQda1aSuef/1wG3Hab+/5vcqBvXzk9frwM+Pvtev0F1apK11/9Svr+
7//KwDv+IUeHDZVBd92lx6xu2lQ6/exn0u/WW6XH738vB/r0lcVv15Curuz+
rqzB//yn7OrSJcLt3s++TngYrj148FgWOw0w/mLXLIyHDYYbB22dfrxYrqV4
zy3x3FGtRWNl+v6tctNnVeWRrzrLF9tXSZnpAzUm3WrFNNlw8pD8fHArGbd7
vSw9sldWHN0nvx/aVvdbX619Whfi4YYNG0vdeg30c//+g6Vatbfkww8/lr17
Dyl3DRw0VN6o+qZ07txddSDfTZ48XapVryEffdxRSpZ6XmbPnq/fc609ew7K
zp37pGu3XvKLX/1ahg79Un3h3bv3y6233S6PPfakbNmyQxYvWSH/+7fbJf9z
hfRc+Dxf/oKy2f3Ws2dfufnHP5WKjmOTk1Odb/uk/P2OO2XFijXKzQ8++Ijc
/vd/uPNSpEqVanLX3Zk8jD6eNm2W1He2Bfp65cp1Wv/CRYpJu3YfOx95t37+
6X/9TAoWKipLXD2Ig5/HxTE8fG7xEvUp4dn5jk8H/uMfsqxOHXE3I+6mZdMH
H8iUMmWy8PCxEcOlz5//LElTXB9u3y5zKlSQScWLKw9/9pOfKA+eW7dOltSu
JV8VLKjHdbvlFseZw9QP7vab38iRL76Q9a1byxf33itnna+cPG2anFu7Vua/
8YaMfvppSXE+9YTChWXk40/IyTGjpdf//I+uLU8pU9px/ouS6jg0acpUPa+n
++30hAmyyNkNcHya+y3Z2QjnnO87pVRJmerqf8IdN+6556T3X/4iadw38XNi
2dcBD/vYCHZZmTIv6BiFi7EbR44cKyVKlFYu9rEf42GD4cYAc7Vs2bLKU8kX
yHkUy8O8y/L7/ZvIzf2b6bNIfbcs03d78C7pQpN763rwhL2b5I/DPlDOPpR8
Wjqun6cx6v/o866+e/pqvccjzMP58hdQ7vE8DF81b/GeLFq0TO75130yafIU
qVy5qvqbY8dOcLxdQEaOGq06Dm7dunWn82PvkfbtP5UGDRrL//zxz3ou/Bfx
TU6qrzxixGj1b6dPn6PXmTFjtvz3z36uXI/e5JiWrdrqMfB24SLFpVjxUupr
I1WdPXDb7Xc4t3C9/PJXv5EPPvhIz8lwPnCPHn2UR/mtRo1ajofvicaaKbt9
+0/kP7//Q9m8eYfkd9x+730PyKcdPpfHH39K/fXq1d+WX//mt1Lp9TfUJw6v
b1+QhwM/dcbLL8vOTp1k3uuvy7Tnn1dfd+snn8g0x3uxPIw/mjh5sh4zt1Il
x3elJHHiROl/263S969/VV96TbNmMjZfPpFNm2T4Qw/Jqnffld3duqmfyxr0
upYt9dhl9es7v7WmJDuOXvTWWzLmmWcklfq89LKMcj56wtgx0sfxZ8aihe67
l2Rc/vyy3fnce3v00Hhzb2cTwMPL6tVzfvTtsqxhI+dv15FUd19THW/Pdfcj
+/ZFjnX++sH+/fR+M4K9WrnNw5kcekZatGitNuXx46dk4sSpGkeBi+HpuPEN
42GDIc+Cufqu04vp6ekXPC6792l9p++78odh78uXO9fI1lPHZEvCUeWZBksn
uOPq6PstFxzepbHom7q8rfkeOO9qvl/a8zDrwuiu5ctX636mjIwMadioiTRu
3MxRwDZ56OFHpdG7TeWrrybpOmuVKtWlUOFi0rNXbylVuqz6np988pn6wghl
PvV0PucPL9D4r+dCYr1DhgxXjp00yflvjkDHjBkvP/v5r+TLL8dI4umzGuf+
6OMO7rtfOr7crnFogC+TnuHax/npxLZZz4aHO3bsojHlJOcfD3I+Opw+f/4S
jT8T3/bxScr9/POuGvtmTZl7+MP//Cnq06PDWb/+1a9v0bVljj8Ubx9wLA+z
Xgu/Oq6Er1gnhrOmOl5dWK2a7PjsM+VG1pCjPDx8mPKwrrnu2qVx6cklSzou
HO/86Tvk0MCBMuCOO2TEw4/IxGLF1GcmDj3e+bdw/bQXXhDn9ClP93K8OL9K
FZn92mty2vnNyx0nE0f+4u67pfMvfi5Hhg6VhK/GOq79k/rts8u/ptee5Mqd
U7Gi+sPKw+PHy3LHw30cry+sVt3ZBq/L2fnzZOrzZdROcEaRrhXD+3scf2NX
XE887IG91aZtO3n4kcfknnvuVZuR9ZOLcbDxsMGQNxFZH76890t7LuY5pN8O
bSu//aKNNFs+RX3kuQd3yI7Tx3RN+IdBbiaOvxZ5HvweFuLAxJW94Hc2bdrS
cd85WbVqnXTr1lMeefRx6d2nv9SpU1+eL/uS+hvde/TWeCCxXWLXCGU+82x+
mTNnYdQPgdNYUyYezTova7XwJ7FoeBk+THPchz/+XIHCcsc/7tLP8H3JkmXc
saI2AXFo4sbkjGV9mfXj06dStOzyFV5XbuZ+qr/5tvzr3gfUp004maz16tSp
m65D4w9v2rRdevfuLzXeri3f/d73pXv33urrw/+zZs3X8nLKwz4uvbdXLxnh
/Fb8UrgYvsT31HXU5csjxy1bJmcc93X/7W9ly8cfS6rj5aH336/x5GTHoz3/
8Ad3/FLZ3K6dtPu3byk/y9q1cnJ0JLbMui0+Mby4smFDGf7ww+qb6jU2b3a2
QGXlazi5x+9+p3WC33v+4fe6jo3f7XmVvdzYAlwTX3yhsxfGFyyoNoXuw3I+
96QSxZX7U1atknmO73v98Y9ylvu7juLSYR71Nhd2IRwML7MOkXOf2njYYMhL
uJT90vHyHt4cPMNETPq7jpN55/RfhreTpyd0l7+NaK+5iH8Q+MH+nKud99Dv
uWr/UQe57/4HpU/f/tLE8S++5Pr1m9VvLeF4kLh0gYKF5ZNPP1P+ffKpZ2TE
iC/lzbdqSteuPZXb2BfVtu2Huq4Mn82fvzgLD8O7AwYMlv/4zve0DGLNPK/U
6r22Gi9mHRjf+wc/vFn69R8kyclp8oS7DrHmZ57JL7///R91j9f48VOcrs1w
tkEvd+yP5NFHn5Cn3e//+YMfyQcftFf/p1y5CvKd7/6n2hcPPfSoNGnSIhqX
Zh930aIlNbbetGkL+dHNP9E918Tl+Xz/Aw87mlmlzz5ddH2Y55aC53lkzVpZ
WreucvGqVq1kfKFC8uWjjyrvZQTH6V4rx71wKH5o/9tu071c8GbC2LEy8M47
da8yzzzhC08qXiKyR9nxN+uz7O/CL8W/3ti2rXS/5RY9p4fj0p2du8iKBu9E
fOg9e2Se4+RRTz4hCWPGyEDnX3P9ma+8rOvY5zZu1LrAw/3//neNS69u0kS6
/OIXWh5+8cH+AzQ+zno0e7lYi1YbwNVHn1+6jvZpxY5pnn9jfMW1pYyHDYYb
Apf6Ho+mSybrezt+NKCpfM/xrsd/Kppo3Jl3ZbFP6/84/v1274bu7yb6W/h4
zqecpksmXdXnh/E92QeFH1yzZh2ZNXu+6jF8ic5desibb9aUzzt1dTruuD6X
S3yZ71q3+UDjvMScp02bLW/VqCUdO3ZSX5PniPwaq1+/g+tatmyjz0XxG9eG
i3v16qv+7OuVq0bX8/itT9+B0rRZS3m3cTNXbmdZ6Xxzrk95HDNs2EjdG12h
YmV9VioheO6ZdegmjmM5t169hq78fjJz5jy99v4DR537ukHq1W+oe754VurE
8UT14wc4Pm7Q4F3nKq6N//y05+Gt2zOfH/Z7puFY50OypxgO3tOzp/qW08uW
1bVcuNM/fwuXsRfq+MiRkb+db5rhyuM5ZL8XGZ5MnT0ny/NKaTHPL/lnlCgL
fvbPNHne988vUS5/8/wTx50L2QXh55bOBOXhs6cvmK/H6t8Oyruxzy25OtMW
1xMPey7OSSzaeNhgyLvIaf7hJHdcemq6zNu7Xf53+Ifyi8GtdM8V+Q6zYPB7
+j34TQA9bnDmMfzN+ZRDeZSbdIE9YiCnPMzvxPMA/iQc7J+95DueBeL/yJ7T
zOeW+N6/d8M/t8Rx+L58H/uOK3xMzgvvgeJ/jqdM/g8/M8R3lIkQYwz7qPzv
nzny53rOT05O1/P8ufzGnjGuzT3AsXwGnOvryGfkQu8wOXL8tJzce0AkxEce
ysVr1kTf5cH7LolJE8uN7DFekrm3i3dtwGvBedF3aniOjP07eAdH9JpLI2V7
8HfsMfp9qJws7wQJ6hy9Rnbl+b9D9fR1og1oiyMXeDdKXoHxsMGQt5DT/MMe
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
4Zdl85Ydkp6RrvoiMt4Tz7NPfV96Yay3cbzB8dig6KLoHHXz+JybE6++Xlu6
9Bwo5avWl36DvtTzevb7Qu55tIh0dd9/OWaSvFSxljzl6oB/ezaoJ9yVcjao
c7QtUqL39VyJ16T3gOHRWCPiuYe6RPglJUu9w23qj8MG9teLtYH9mAjHAzPj
WKnRa9KO3gZv1OJD+fDT7vr9EwVflIOHjhC00PMoY8r0eVLypapqP6CPvX7w
def8jzr2jHKF7zPmNEK/RNo7I3of1MXfh6+fL699hx5Sq+F7kXODYyLtETnX
66/I9xG7JXbM+PbgHrG5fNlen4TbTI/JiOgyf74fM3wf7pdwO6amZo6zM2fO
ZDk3I/B/uG4k/pYZ99d7Cc7jN8arbzNfxqmAx5q0/MiN186Rtj2dFLTrOXml
ch1p275zhNPcNfiO+z8V6OPw2OL+c3YPmTqa2M3WbTvlvieKyxtvN5ZxE6fL
Bx93ldvvyy/zFi5VfZqveDnXnqk61ukTylS/J7g+5WKrznH2W7Tfz2b2O7LC
ccVThV9S396Pt3jzgnpF2isSl+V6gLFSs8F7wTnJ0bGSHKd9/f3RVhxD2X0G
DpfnnT2RGswHykwION6P14g+S1e91b3PEGnubKN/Ol3Qpecg1RPbduyWLxxH
3/avZ+VjZxeNGjfF1amV3PVQIbVjuNaj+Z+Xeo3fd/N/hNrwdz1cSO18hHsv
VKqi2vjDHM/2GThC7n+yuOP6tlpX5eHg3gZ+MVqef+0tva95C5bKnr0Hor42
9daw47nI/XFf3J9vz/CY9+3LtX58y53ODu8X7ZOBQ0e5+lSI6ttw21I244O+
juiWs0Gs/GxU18TjfGTM+KnRcuFhdPjGzdtc/TMklbhE0N60dfiaqRfx6XML
17s/HOZiL2XLvaW2sZcvRoyT4k6nw4uFy1SSDztEeIB+njZzvrxcqZaUebW6
DBs5XvV5ckj313P2JPqh9KtvyuJlq2TDpq1Sodo7aofWa9xG9h84pOegO+B6
7EvmC6O1yXsfS5v2Eb3WvfcQtU0pM6znq7z9rvRxfFnd+QHYuPAIHDxhysxo
/Skfu9jbwhFurqnXw24O6w/Qom0HrTP27sQps5wfcFLeafKB+tZ1320rO3ft
1XnfvmN3aezmaRl3b7694DbG5sw5i+SVSrWlqLtPyiM+5f085usnzs/n2sgQ
176UgxCXqN2otfIr917M1eGF8jVcO8/T3xu7PsCfpR2eKvSS3u+hw0ed7f+O
zHN+z9IVa6SsO35kYO9n+lORuYw//fqbDeWdph9I4dKVZMToCaoPtmzdITWc
/U+/VKvVVPU694hefq1KXeX2ds5P8LE170N17NJPXnG2UGPHQUWfr+zuq6de
i3MXO9+pgvNJSr1STbr1Hqz1QA+FxwxjCxk/eYY0bN5OGjX/UAqULK++/JnA
lvf+BX3BMfgvtBf1aO9sipLOVn/DjYO16zdrXzM+m7b+RMo5/qtWu4mzTeZK
1VpNtC+430g8Mkl9K/QkNhx+3r79h+TNOs21PTmG8YpPhD0w5qupqitfcG06
adrs6DgnHlPE3Tf2DeMa3Y7AsbRBZ/f7vU8Uk/zOrhs7YborZ4reI9fsGMQ1
WrzfUccQYxif4+L3MNHpwfRA50f6teUHHbU9w9KxS1+dSytWrZd8xV6VZq48
bDP6iv5jHNd286KBa1PiXQudb9XKjQ90FT50OdfvJVy/t3d1OXbspFRy4+be
x4vJa2/Uk81uvBBrbdAs67xAP1N34i74n9zXuImRudGxcx83JmtqWxV0Or5X
/2HR+Cfjlb6gfYkfRPTOWHm3RXutB8eOGjdZxxrts2PnHjenW0nxF9/Qe9i1
e2+UA4DnO8bEc248eTuWMfPYc2VVn4SF+6c8jnuuRHlZsGh59Lfps+fL3+9/
TnkUbn3k2TJR/YMsX7lW7n6ksOPxzTq3/dwY7PwXxjljuFW7z1zfrlddQv+X
eOkN1V1b3Dwj5njPo0XlmSKvqE7w/BnLw/gZTxR4QR56ppTaGao7ho/VfqfP
0DEtP/hM27xqzSayact2NwdXuTnzoaS5+9q1e5+b201ku7NFaEPGwQznYyM+
noHu2umOK+3KZNxWr9NUtm/f5fT/G9Lc6TF0yutvNnB+1XblDOYM8Qb6oUmr
j+XY8ZOBjXf9cLHfp3W987DnYvo+0elZdO7gYWN0TNJf8Ba2NfYafPN395lY
8Padu+XRfM/L2PHTZP7CZepzTp+1QMeij4/MdXbg427sUAbxrhZtO0q7T7up
3i/tOJfPSc7HjnDnLB3TL5R/W/1o+Avb76tJM+RJxzlwlOdMbHnGAToRO3ay
+3+nm4uMK65HfAmfAh8YYNOdPZvm5tQCvdZwZ8uOdTbfvY5vmfcap02MxFeW
uTowJ9BhR48eVy4pV7mu6iY4AJ5Dx77ouJw5S9yKOap2ZuAbo7979Rsq653d
QayP2AJCfB5BV73hyuK65d6oK3e4eU5bw1fMlemz5ut112/YIp17DHS+7wt6
LLoZjmKu47Oj+553dlNrpz+Za7v37NM+Qk+Oc3o/lodpb2yMKTPmqp7+12NF
Nd5IfLmB42b0Avqh5jstdczSv9R9q5uLrzpOWLA4op98rLFHny/kL3c+qb7H
NFfnh54upePkdGKiPO3asI/zKVY6/YMuhMvQl+ExQ18tWb5abbg/3vGYDHJ+
PDqZ8TbJjTGEcYPgD/z1rqekU7f+6tdQf3gCXUs8GB+FOvt4I3ZXJacz7njg
Oflq4gxt2/ufKqHHMK6eLPiiHgMfo1u37dil53nbAL6o+24brd/jTnfPdjbJ
BNfXfEanMabhJTiy76AR2g70ldpjga9LP2DD0m+HHW91cFx067+eUd3LmGnY
rJ1ek3mCHstf/DXtK+zEIs7mjXcP6OHjx09EdQq+dVnHYZ1cH0ba61QQ007R
MbFw8Uq52/l02H7Yc4z//kNGauzx9nvzqU3GmGeeMVaPOZ+PWEv3vkOCfq+t
+pzr03cz3RxirpR3fAxHhucF13vZ2Z8PPFVS26Vn36Fy50MFVVfAI/ihI127
oV8Y85s2b1fOo03nBO37mPNHic8Rz/rbPc/oGhHtvWHTNleH6Wo3vlmnmc6f
/QcPSY16zdUWR3z8HnsRXcEYe8bd02FnW/H3OjdW4OGdAW+fcNzFvBo8bKzO
ZXgSGwGbT+NZgV2dr1g51Rktnf561/GaH5e0M3qOc+nT8HgdFPAwdiQ2M+30
qet/9Cv1xi5i3BLnLuCuiW7EL6Hfsuw5ja4BDXR6pZnOR+YN8TzqBKejO/AV
igZjCY5lXK3fuEX7jPmK7//T392tdhz1fvjZ0jo+vW/r44L89pmbY/jAi5as
1LFGn1Su0cj5FwvV7sJmpN1Yu6zXpK27zlZ53dldcL7q/+uMhyPPD1//+7R8
fYn3Mk68LvI2F7okajs6vdB7wDAZ6nQn862708V9nY6kr+h/r4eIkzAfGMPM
IwROJObBWMK2rfNuazdOk3QcY3vBjQcPHtFjia09WeBFeargS6p3I3bb+fFf
xuC5YGsFugLfg3HHPGvU7EPJ5+YhsaORYydpTLdhiw+j94LdXqdhZqzsbBCv
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
1PG4CdN1TAR7eItiY4qxwXyI7djX6ez0E+YjfCh+TkLvxZfBOjh7UhOVAa7j
mfQR+Jc6oX6ZR3k+eqS3W4I+UL6mQr7w2VEO5oxlK1aHdRa8k0Z66s8WidRZ
MMbgD9Z2nunUVW0FhLGMz9L3xbrguYZ0jgdSGpkLou/C+jr3rw5H38HzbenF
pxWV6Ht8RXHv23nx6UXvj3/Xj3kVOxAb5y6n56KbM19Fz6zJj9zv32ONl+hz
E30Xew9QKr6/69+tiUqF+gv1y/L3XivWcfx7uonqIf4d1egzolwcrSv/DkJU
/PpUovdUo+9h8zn6TrjPQ3V9RfNb8RYV3xei5fTC87DB8eExHyHx540wz2Fb
sF8TPsBu6dXvvfI0SqLvild+R5a0ov3F16/O29X051iZIr+VFCdug4plqvie
cX5B9fXmyxCfTvx5H/HlKz8jKrm+Em3b+LIh0Tnb/x7fB/z9iG9XX4e8A+XX
DOBMfX877v1R3wfi+6FvnxLd87M/9pxoHuc5WwvfFf5YOI89Tvh7vM2aqI58
OtGz5qLvJvvvAr9txXJGOZg04Wn8MC1attU1sOrGvn9XLlHdVWzPymOiqvO0
qpoLSyNzRk1jNno+nL7vVVCxDwR9KXEfjYp/Tzq+zuLP0s2PvHtcfk1+7Lu6
4rWGFn848Xk2ebEzr4J+GpzHEr0n9ndexbNR/Xlaic5Jjd6XzJmqMVvX9UPW
NfHToJeyvlFWWlapD3JvTnhPeTnyY/DX+PJFz2yKjvOc3MpnMlWol2j5I9f6
a+LrOHZvXn6la+KfHc1zVekEzy0/X7q8jJXzkshfWl7fBZXqoiZoHbM3ODdA
omf6PsB1zInYxvjm/fiIzgO+fXc4vapnn8G6rxr7gHkx2f5ZXfsk05+TaYNE
dVzduUZVjbHytBOf4RtttwPtK4n6X26kvyd6Xmw85FU85yu4vjwN2o1xxzte
2MfxnB6t96rGhP8++C6+bvOUY7DP8Qfgd4UXE509UVPZq2rDRGPff08/xZ+G
z5n1kKiPo6q+lVfhOXkJ13Oi9/rnJ2qD6uZCPyclO2b9cyr2Od8Hqu6j0X4Q
7eM1PS++jNXNhYcTFn+49hGV6Ls1hvqNeJ9JVddUZYca6geibVTVuUy18Yyo
vfdlPaeqZ3spbuBnphss/vCXBW/rHimxQI4mVGUHROH155xq9G5D3cLbZQcT
5ytZVLT3Du84z6vCF2ZomDAeNhgMBoOh7tCQ9mkZDAaDwXCkoSHFWzIYDAaD
4UjD0WQPx58jZDAYDAZDXaKhxR8+VPjzh6u7Jpl9N/6M3WTfBTEYDAaDIREa
QpyH2oDfU8jZMD7GTFX1keg9lPy4tOLF9iwaDAaD4WBR3+MPJ4vomWTR97PL
z80rlYeeaK9n9fHaH+fv+etzw9h//sxCfw82rz8vy59VwL1Tps3SOKaPtn5e
49eV6nkuxsUGg8FgOHDU9/jDUUR9yvHx29Qudd/7c9XgRX9unY8bQBwmzvWN
nnvGOXD7gxfxNQ4XZxr68+X9mXPl8en2S8qsuRrzkpgonCfOWeacH5743F6D
wWAwGKpGQ/FLw5XEWyIuB/GzEOKsc344cViIbcfZcsQuIY7IjNQ0PcuOchFP
gFiixFQgPg3xG/jtjR799Jxg4ouMGDVRn0Oc13+dc4XGred8fGIhPPBoO3fd
fRojC54lXgtnzAfnmpZq/CDiMXi+ruu6MhgMBkPDAbxS38/x8OePE+vonEuu
1xjaCPFoiGOHL5mYY8QMI34G571y5jo2PrFuzm5yvcZ+IVYZsaqJr0ZMJPh6
/sJl8onj1NPPv0Z27d4jn44cr/Hsprrruf/aWx5Qfieex3Xu7zfDWKsI57re
4tKAs73vui7iZRkMBoOh4aKhxB/2PEzsSOLAcZYrcQiJy0r8G+L9EusNwS9N
TGfiGd5892Pu/yC2KHFTiNWNPYzAwcTBe9PxM3FPsbM3bNqqMTvxRy9aukLj
dBLnkrhqcO5FV94WO2f97ofaaoxUv7ZsPmmDwWAwHAzUHq7H+7SiPEyMaOLY
ImMnTlO+JZ5sE8fPfNa4CsUlcsOdj2j8yhvd/8R9DXzIZdL8toc0JufM2Quk
kbN7iUFJbNBGFzVTm3fZyrVyXtObtC6I6dnowuv0d+KvEl8HrmetGf2lW6+B
Grc0WH82f7TBYDAYDg5jx4119nBWveVhH6McPoaH4URsUGJ+Yp+ybkyM0RYP
tdF3kiZNnSknnXWZbNi4VWOK3+JsYq7HN/3bE85WOxof9VU33huuM8+Xv53R
VHl47fpN8q+zr5CVq9cqv+Oj5j7P+8QMLwljfRKzm73V8XFZDQaDwWBIFvBb
SkpKvV4fBuxrxheNr/mMC66VK66/R5o52/b2+1rJnvS9unZ7wx2PyJXue2zb
3mFc9g0bt+jerAsuu1luvusxaXrtXfLRZ6Nl3YbNup4Mf2Mz49detGSFFBQW
SosHW8vZTZrLqjXrNbbsWRc3l4sd3zdueqNyOO8oYRM3uuA66fJ6r9h+7Lqu
I4PBYDA0TJxzzjmyd29Gg7Dr4MCdu9Jlw6Ytuk67b1+u7pe++KrbZXrKHN07
tW37Ll0L5npi//L/OmfnZmfnqF3M9fzOO9Ps1yId/c1xKfuyqYNt23dq2gjX
rVm3UW3t4MyOQH9JT8+o8A6ywWAwGAwHCjjkjjvvdJyyt0HwsI/vDR/zmb/h
R9438u8ORfdM+X3MvKfkz7Tkf2J38j/f++88n+qZH46//dkd/jq9L3JWB/VV
n30IBoPBYGgYSE1Nrfd+6Sjg1ijP8j+2a3DeVWFCXcLfE32vKFE60d8q31v1
NQaDwWAwHCxmzZrVoHg4EfAnF9aDfBgMBoPBcKC4+uqrG4xfuipYPEODwWAw
NFQ0adJEMjIyGzQPGwwGg8HQEMFepCPBL20wGAwGQ0MEPDxmzBjjYYPBYDAY
6gjj6/m5lgaDwWAwHMloSPGHDQaDwWA4ktBQ4g8bDAaDwXAkoiHEHzYYDAaD
4UhFQ4g/bDAYDAbDkYxx48bbPi2DwWAwGOoI480eNhgMBsMRhEQxAQ41rapw
qOmX79MyHjYYDAZDwwfxfDgfcv/+slqJS1taWurS2q/pJUJtPAO/tNnDBoPB
YGjowD4tLi6WzZt3ysKFqyUnJ++QeJJ7V63aJHPnrpD581fGsHDhKlmwYJU+
IysrJ4xdf/DPsP3SBoPBYDgSUFhYqHHiJ06cIyNHzlCuhJeDuLjJ+5Dh1JKS
EuXzceNmy/Ll62XJkrWKFSs2uPTTFLNnL1UE8RkOPt/GwwaDwWBo6IBrS0tL
1H6FG7du3eX+XyZIWVmZ8nGyacHZ+Jzh8UWLVmsa+KcBAhcvW7Ze7e0pU+Yd
ct5tn5bBYDAYGjLw7bKGC99OmDBHtm/fI1u27FKbeN68lTJ37nLZsWOP8lwy
djHXwLlz5iyTlSs3qm0MzwdcXyqLF69Vn/TevVkybdqCQ84/9rDxsMFgMBga
IlibzcjIdty4RlJTF8vUqfPV9s3OznW27BpJS1uh9vHYsbMkNzdPfdfJpAu3
T5++0NnVu2NxgQFcj3966dJ1ysOTJ89NOs2qYPawwWAwGBoiov5j/MOAv+FK
fud/BHuWdd6sJM/KgINzc/OVuzMz9ymv+/1eZWWlul48enSqTJo0V5YtW6fp
H+w7TH6flvGwwWAwGBoaPA/Pm7dCNmzYpuBvvuM39mxhq6anZ+q+Kj4nmzZ2
dlracvVzz5ixyNm989TXjV8amxu/9K5de921h/beksV5MBgMBkNDhefh+fNX
yKpVGxXwMDYrnAuwVTdt2iEpKYvC94uS42Lva96xI139z/ioWSvevTtDuZk9
YaRdG+UYr/aw8bDBYDAYGhY8D2O3rlmzWdau3SILFqxUXzS+ZIDgR2bPFX7q
A/Ufw90I7w2zLjxnzlLHxxvULj4Q+7o6WPxhg8FgMDRE+H3N2Kms/2Knjhkz
0/HyMpk1a4kC/mWdF5s4WMc98GfAj9u375YRI6bL+PGza41/gfmlDQaDwdDQ
AZdt27Zb1q/fKhs3bpd167Y4bFVgI+NLxq49lGdgW6enZ8mePZmHnFYUFn/Y
YDAYDEcCsHVLSkr1f3/mhseBnOFRFbCj4cna5kqLP2wwGAyGIwHVx0WqzefU
ft4t/rDBYDAYDHUHO8fDYDAYDIa6gcUfNhgMBoOhbmHxhw0Gg8FgqBtY/GGD
wWAwGOoWxsMGg8FgMNQdbJ+WwWAwGAx1B4u3ZDAYDAZD3cHsYYPBYDAY6gbR
fVrFxSX62WAwGAwGw+EBNjD28N69GZKXly85ObkGg8FgMBgOE3Jz89Qe3r17
j/qms7KyDAaDwWAwHDZkqz3sYyWbmJiYmJiYHF6BhwsKCmT/fnHYbzAYDAaD
4TACv3Sh42ETExMTExOTwy/eHjYxMTExMTE5/EKch8LCwrrOhomJiYmJyVEp
Zg+bmJiYmJjUncDDZg+bmJiYmJgcfgn2aZk9bGJiYmJiUlfCfukD4uH9JQ7F
4f+JUN1vcdeYmJiYmJgcxeLfWzJ72MTExMTE5PALPJzcPq39wb9lRVK4faDk
b3pe8re8KAWbQ2zqLIUO/J2/5YXwu6rgrtvUyaUzwKVXXCF9ExMTExOTo030
HI+a9mntL9X/4OA9E4+R9CnHyN6px0iG+z9zssOkYyRrUvC5wvdVwf2e4dKB
i6Ppm5iYmJiYHE2CPTx27NgkeDhYy8UOTp/yFcmY+UPJSD1OMlO+J1kp35Ws
Gd+TbIfMVPc38N9XhdQfOi7+d7WLo+knk9+olJXtT/h7aVmZ+60sqTTrQshn
aenB6R6U62DvrSshv/FtV9338cI1ZWGbRhG919dLfLtH7/VnyFWVfmlpWbX5
8fVeVo/6l897MvVoYmJSPyUlJaVmv7Tn4S0vBvau4+CMlG/FkJnybcfF35ZM
4D7zd7VwXIxdXLD5pQrp15VUNT/X9jO+jDRt/k1ct9XVS5RDE/FpvH53MPk5
HO0S/wzrCyYmDU8Yt22fbislJTXwYMiTrPuqz9nZvIl4OCMl5OIZx8Y4md8y
w+8r83DnCuknzmPwf15enqzfsDH2PfPn+vUbpbi4/N4NGzdpHOUJE6fKokVL
9Zr4spXbTftjdRCtj0R1FG9n+Xk2aodUZ0/FP2PNmnXyxRfjYmlXtvMT23vI
nLT5MmDAewnzzX/xtlqQz3J7L1qm+DQS2ZOJ6i4+X8G9VduIn38+WjZs2FSh
Pfi759v9ZeXK1RXSjs87kpmZpe25ZMlyWbVqjSxbtlIWLFwsW7ftiF27YsUq
Gf7pFzJr1twKzyam55Kly2XxkmWyzvUXb9NGuZK+NWHCFBk5cqzs2LEzrk7L
rxk8ZJj+zXPGjp2of5fG5TtRm0XLU15fids92odot2g+EukP9P+FC5fIrl27
Kz3fxMSk/gtjtlmzZklcWM7DmXE8rFw74zsOx8nemd92+LpkzPyqs5mPlb0p
2M3fcP+731O/dVA87Ply8+at0rjxFbJz5y79zJz893+cLTNmzNTPxHA8/4Ir
db5/4MEn5O1e/Wsslp+T33vvIxk/YXL4XWUeqLF6qrFL/Hz53nsfy9gxwdz9
wQefSPNmd1SbRvz3Pl9jx06SZ559Pkhz6McyfrzP98H5qvfvT66ch2J7XX7F
DbF8eoGPn3zyWZk9Z16Vafm6S505R6697ja54cYWcuppF8g1194qV1x5owx8
d6je2+qp9nLKqY3l5lvulXPOvUyaN78zxksdO70sp59xodx2+/1y4UVXyfnn
XymzZ5dzNXrNWWdfIpddfr00a36H/POf52h/8GX0edvh+t2/TmksRUVF0rNn
Pxk8eFilfPs2GD16vAz78NMKZahKamr3xD8G/61du17r9vob7pKzz7nUPXN4
Us80MTGpXzL80+E1xx/2PLzpReVP5VG1fwN7N3v6NyVz6rdkz/SvyZ7U/5b0
1P+SvTO+5n4/1nHyfzv8h+yd/v8cBx97wDzsBT5m/v3ss1E6R/UfMES++71f
y1tv9dbP06alSpNLrtNrn3jiGenff4ikpMzW+T/KrQuc7fDBsOHOJl2vn+Ht
K666Se655xFZunRFpTkMe+rjjz/X9P3ciD27ceNmmejs7sWLl+l3S53N9amz
k/amZ5RXWziP+2fcdVdLvffzz0c5XeFJtQU/GT5Cdoac4WW60y2wt7ztGJ2S
9+7NUJ0EXHFlkG90kqCOypw+MUWmTJkRu4dnr1+/SfkOfkBWr1orw1wdeNsP
2b59h9MPhsus2RXtSV8OZMUK8jtStm3drp+xxbBTd+zYpWWfP39RpXv4/447
HnDPnqA2p9ebfD3u25ejf2/bVvXzaXvqIicnVy5ucq3MnbdQP5P2oEEfKAdT
ToT06CcPPtRKPz/u+sLLr7ypHJmbmyd9+rwr/zz5PFm3LrCNG53VRF5++c0K
HHrCCafL0mUr9LPvO7tcP7i4yTW6hrPVlX9LWAe0x0euf0yePF0/01/uuOtB
aX79nTJ37oIK/SkjM1PrEP788MPPtA9F2zcldbaM/GKc5hPB7t++fWdYP9vV
F0CZ+X2R63cvdn5Nnn7mec376DETHBc3dXpCcYX6NzExqf8yceLEpNeHCx0P
sy+afVjYwRnOxt3ruDd71vFSuLK55K26VdLnnCq7U/9P9s0/W9JnftfhG5I9
52+SlXaaZEz/urv32APmYT8XdujQRTp07KJ/M88+8mgbaXH3w/r59Td66pyL
tGrVTu2D1m066Nz0xBPP6vfdu/dxNtHV7vf2csaZF8nMmWkyb94iveYyZ1d8
5vgxeF4wJ8Nv5553uTz6WFu59LLrNT2k0/OvOLvsfLnl1nuVMwcN/kB1gMce
e1rT97zofeZwz7nnXSZNL20mkyZNUz7Crrv//sddGvfJeedf4eb2bTp3Uq4b
b7pb7nb8in2HT5Yp1XMyttrDj7SROY5XSfMyl68RI8dIdvY+ufW2++SuFi3l
ppvvkXvufUSv79Gzr9pxbZ/uKJc0ba425X3uuXc6neCCC6/S+5YvX6V2VYcO
L7lrmjne6qb3Rn3jPd/up2V77PGn5ayzLlG+J0/wGPVAvk/659ny4UefVahD
7r/99gddutfJ448/I6edfoG8+WYv/e1Kp5ukpS1QXsIeTfR8nwYCxzS9tLly
vxc4950+A8P6DjiI36lf8tCmbQd57bUeYXpBOre4en2r+ztOb1js+sHFlZ5z
110PKTdH23DXrj3S2LUT8vQzneT113tq21xzzS3qn7j66ltcHXdSnqWvXHzx
tbH1A5/+rFlpmi/a9k73jFNOPV/5nsfee99jWpb7H3hCLrr4Gtntnkc/w55H
2j/3kpzb+HL9e/KU6WoDe74O+v/bas97f7fxsIlJw5AD3i8drg9n4JdO/baz
ef9bMueeLAXb35T8hU0kd1Vzyd3wqGQvPk8Kt3SS7BnhO0oLr5e89W3dvc4m
TvlOwOMHxMPBnD7G2Yi33/GgZGRk6ry9eUtgE2KPtWz5lAx570O97h43p7Vu
85z+jd1w+hkXKd8w72JHUu5nnn1B+RXBP/rWW+/o3yUl5et2G5y9gu2FLFiw
RP2bSPv2ndWeRZiLSR9bkPm2/XOddS5Fomu1rZ56LsY/I0aMlrPPbqr2HQIH
fvzJCPWXMteTJv5P5uXevQOOKSws0v+x5Vu0eDhMs7284eZfpHfvAXLddbfp
dVnZ2crR+FzxC5AOgr1/4t/OlG2hjXX55TdIqtNFWPc8r/EVyjn49+eFZfay
Z0+6488LYzYitvQVV9yoPIA+gy2GdH2tu9MF7o+V3cs119wqb7wZ5JM1WPic
fF7X7HanA6yWd98dquWu6vmeV/LzC5WnWQ/lM/0W/QdbNFh7Dtpur+sf55x7
qaSnp8szzl58tWt35Tr0TfpSly5vqD73kdMZ0Fl8+jyf31966XXXJ9pV6HtR
HibNd94Z6HSI+U73OEfzjA4wY8Ys/R1OfNb1L3+/rwv0PvoKaSE33NBC+vYd
5HSq+bqmkp+fr98/6vS5l1we8Q3gTydf6E88n75PXXp9FOnS5U254KKr1L/g
68vExKThSFLneER4eC+8OvM4tYXTp3xLCtd1kqz518jOaV+RfVN/JHmTvi85
cy6Qgm2DZe/8k2TH/H/K3qVPSu7qJxwP/8dB8bCfV9LT90qz6+9Qbnkg5Lon
ne3Let2NN7WQ9aFvEo4cNOh9XUbLcvyL3Yf/kHkTm5H5nzVB7BfSxo7t2rWH
2ndRHoZ/2rV/Ua697na52tk93IPgC+zWLeBUfN9wFDYsvkhsXuzc6Loufz/u
bPJXX3lL0//Eca6345EnnB7AeiMcC08y515/w51ubr5CevToo9d4W49r7r77
kTDNZ+QVZzuSb+Zl8se95ON0lyd82/C454Q1a9c5W625a+9CvR+7DD9/Tk6O
s2efVO6mXv3eKc9BlNFzOZxAXTa55FrZtGmz2qfbtu/Q9EZ+MVbtvHi56ea7
HVfOCPeorZemjkvRi+AhuIm/H3yw8vPj90qRb8/Dvm6xPT/VtYqAZ+G8zZu3
qM7E56ddGwd1VBrr50+2elZ5Dr8E7eXLiu6DoN+0a/ei/u39EFEebuf0sK7O
xiZfbdp2VH8K/Qo9iu/geb7n3igPT5s+U9vH+3eeczYuPIzd3Cb0tXDPqFHj
5Q6nb1Iv9FX0DNqQPOu1Lm32CfAsdADafd26DXq/rQ2bmDQ8SSr+cEIe/oZk
T/+5FG98Q3annCiZM/9NclJ+INlT/lP2zDpDivZ+IZkb2kj22kclf+u7krvu
KeXh7IPgYb0k9O8xB+HPg4uZnYcN+1RtS+Zv5loEf/XAgUP1b+yHSx1XsEZ6
ZqMmyjvI8y+8qvyLPPxIa+VyJJg7Qxu2VXvlFZ67fPlKtbGQ9o6b8YMjq1ev
k0ZnXSI7dwZrvKwP+zkR8fPiI4+2Vb84Mnz4SMeBD8f4BXscf/PYcZN03o3t
TXP2/rZwT7DnxA8/+lTuu+/xWDm9Hf/Ci68pl3lZvWat2qvY4J6HV61eo7zp
7fC773lU9zLDT8Wu3PQD1lLhFXg/5hdw+g1zvV/LnTdvga7T7nF6EenhY0BG
jBij3B4vcNTEidP075Wr1jhb+gZNC797auoc3eNekuD5vt2jPHyZs+Gjfml0
ohtuvKvC87q8/KZep23oOBXb1Qtt88+Tz1W9AL/DX088Q3UBL+h6+I5Zzw76
Q7k9jB2PsD6CTUq9YcOSPXwKpEV7v/rqW+pv8e3v+8B0Zy9jf3u+x9fcp++7
qg/gU/aCz9v7VNAD8Ze8//7Huhfh1lvvUy6Hf33+8IUHzzI72MSkIcrB2cPf
cTz8TcmY+h3JWdtWstY+JBljv+p49vuyZ+HJsnvpBY57X3W/f1OyHd/mzL3S
8XDbg7aHEc9DzKk/+OHvlVeR3bvT5Sc//ZPaPF7wXb/9dn/9G9uNtdxNm7ao
Tdu69XPSt98g+dvfG8lDLYO9PMzbp55+QczG8DYQNg/2F+uPd9z5oPzhjyfr
9/izX+jcNcxXmTz0UCu52c2v5A27sdtbvfW36Jkbr7i5+eRTGsvUaSlqD8O3
XuDV117rru/G4G9H10AvgOtYT0Y8L7EvqfkNAe9QZvYojXP8Db9gr7F3h71r
/A2Hs86JnoEsX7FS7UTPw+xBxvb6fMRotUVZ5271VDvd+1VxnXG/1hVc8Wa3
Xupf6NW7v9bTyf86T+1iBD9vs+bl5fICj3heW+b0mTPPvFhtvSaXNNP1efSS
8xpfXuXzPQ/n5xc4Xeri2FoB31NG9kizzt6r9wDdC8B6OO81+bZivZX6x9eM
7yLaV+DTf5x0tvYBfA+kBXf79D23sfYBfyPob3Al/nP88gMGDHH3vyFXXX2z
3sP6CP0rfv/yxEnT1f72bYkvp1Onl6XAlQt9Bp/Ja6/30DV03+4DBr4n3/vf
38jyZSv18wl/PT2mhyGbnO1P26HPRJ9lYmLScCSp+MOV3ls6Tnk4M/Vrsnv2
byV7R0fJXN1O9q15QfI3PCgZC0+V/C0dJHPG9x2+LtkLrpDcNS0dD//nQfOw
n4vZYwoXRfdADx36ccyXiTDne99lvtMx3n33fZ37eN8Yn2K3br31/V32OyPY
RczH8EH0WdgtcDD25PjxU2Sos0n4jTmSPTdeWOvs13+wrhsyByd6RxX7hbmb
/bhwJnZoeRtMjqWHDdy1a3e1pyZOmhqmU27rLFu2QtdYNd9ZQb7Zc42sXLlG
OjseZo3av0c7I2VWbE5PdzrJey5/ngfIg9+Di78b2wsO97ZWNP+Fri7wieIL
YG80Qjq0BZyKkFa0XF6oV+pe8+DsTWx/6ow18S1bgv1pw6p4fvR/eP+9oR/F
fA++TrZv36W+4IdaPiVPP/28LA05S8vvbFB0EfZ+Yaey7z2+bOgijz/+tLR8
uLXyXvxzEXwL7w56X/9mP3pqymz9m35Evl95tVvMd4GNjL+5X7/B4d1BOuiC
7L33XDl1aopMnx7sH2cPNu2Orc0ePC98T737/WLU/ezZ5b9nuT5Avyrfe202
sYlJQxLGbFLxh+N4OJt9WjPg0+MkO+VbsnfGd2Vf2p8kd/5fJXv6dyVz2rGS
mfIzfadY93PN/KHDjyRrxrcO+r2lo0EOZQ6t6fyQ2pb6Mt8fzPu3ic5AqW9S
X/NlYmJS+5JU3MPYe0ud9b0lzpLWs7NSjnU8DL7p+Pe/JHvaf8g+x7Vw877p
31CexoedmQq+6bj7wM/xqJQV9RtXPLMiej5W+eeyCp/9vfztEX1fhTQTnX8U
vbaq84Xj060u39HzlMrzV1YhL/H5iwrljJYnmm+fx+i90bxWfm75nrRo/qvi
9ERlDK6veE28RNOMXnMgz0+UVnze/P/x5075/Xf8n6hO/T01nd2dqP0T5Tta
V4nyGc1bTe0e398r/578Od0mJib1TwJ7+MB5mLgOWeFZWlmKb4d8fKxysELP
7DhW7WHO1qpwtqXZwyYmJiYmJsrDB7JPK3qeVuL4DSEvR77Tc7dmHPz50iYm
JiYmJkeyJBd/2PNw55CHv1dzTKUGFG/JxMTExMSkLsTbw4WFydrDHTVucFbq
jyKxhH3M4eriDddO/GETExMTE5MjTcYntV862CdSuKO/ZEw6Rm3ZA8KUyp8z
Jh4jhdsHVEjfxMTExMTkaJKk14fD9x/3lxU77uyvdixru4pNITZXhxcrfnb3
w8GkF03fxMTExMTkaBLl4WTWh01MTExMTEy+FFF7+EB4mLXc/cXh/weLYlsT
NjExMTExkYPgYRMTExMTE5NaEX+OR2GN68MmJiYmJiYmX4Ykt0/LxMTExMTE
xEt5PLhDTyup+MMmJiYmJiZHmURjr0Y5t7bPczd72MTExMTEJDnxHLxtW7qk
pS2XffvyDjnNpOIPm5iYmJiYHGWybt02mT17qcydu0L/X7kyiKO+du1WmTgx
TRYtWitTpsw7JN900vGHTUxMTExMjiIpKiqWUaNSZcOG7bJlyy79Pzs7V9av
3yZjx86U4uISx83LZf78VYf8rKTiHpqYmJiYmBxFUlhYpLZuVDZu3OE4eJbj
4GKZOXOJTJ06/5DXipOOP2xiYmJiYnIUCTw8adJctXsRfNFRDp42bUGtPCf5
86VNTExMTEyOHvE8DE/io54wYY7k5RUoB0+fvlC/X7t2i5SVHfre6aTiD5uY
mJiYmBxFAg+zFwvZunWXjBgxXSZPniczZiwKfy92/DlbSkvLDuk5SccfNjEx
MTExOYrE28PYu5mZ+2Tp0nWyffse/Q3uLCgoUl4+VB5Gkoo/bGJiYmJichQJ
PDxhQlqVvwe+6rRasYfHjBljPGxiYmJiYhIR+BV7ODV1sb4/PGfOMoflenbH
vHkrda80nw9V4OHUlBTH60W1kGsTExMTE5MjR1gD3rx5VwLsVB91SUlprTyn
devWkpWVpX/X9pmZJiYmJiYmJtXLV77yFdm3b5/+bTxsYmJiYmJSLpVjPZSj
ttJ/8803nW1dUivpmZiYmJiYmByYTJ8+3fZpmZiYmJiY1JGMGTPWzvEwMTEx
MTGpI7FzLU1MTExMTOpOLP6wiYmJiYlJ3YjFHzYxMTExMalbsbiHJiYmJiYm
dSMWf9jExMTExKTuxOIPm5iYmJiY1J14e9j2aZmYmJiYmNSNYA/n5eVJaWmp
wWAwGAyGwwzs4V27dkt2drZkZmYZDAaDwWA4TMjKylZ7eN++HCkuLtG4xwaD
wWAwGA4fxjt7GD4uKiqWgoJCg8FgMBgMhxHjxhsPGwwGg8FQF1B7ePx4yc7e
ZzxsMBgMBsNhRn5+ge7TMh42GAwGg+HwA3t4nLOHzS9tMBgMBkPdgDgP2Vlm
DxsMBoPBUBcYf4D2cH4toq7LbjAYDAZDXaJ8n1ZyPJxfUCBF7p6SwmIpdig5
CPj7SIf06roODAaDwWCoS+CXTtYeLisqkey8PNm1L1v25OyTPfsOAu4+7icd
0juQvHIONv/n5xsMhnhEx4jBYGgY0H1aSeyXzssvkNLiUknZul7+8NEr8sOh
neQn778gP37/+XIMfV6/+2kI/X3o8xWveT+4hvtJh/RIl/STye++fXmyd+8+
h2yDwVAJ+3SM1PW8YjAYDgzJ8HBOXr7IfpF2aePkmN6PyrcHt5Ovv/uM4n/C
/7856Fn9/yv9Wsu/93tKvjaQ79q5358N8UzsHu4nnXZpYzVd0q8pn7m5+ZKe
nm0wGGoAY6Wu5xWDwZA8ktmn5Xm407wJ8u99n5TvDnlOvu04FnzL4TuDn5P/
GtBWvuH49pQR3aXRF2/L94Z0kP/Xv7XyL98fN5h72us93E86neaNT4qHsdvR
8/fsyarzOc5gqM9gjOzbl6tjpq7nFoPBkBzGJXG+tOfhjo6Hj+nzhBznePRb
IQd/1/HtfzoOhn9n7d4ki/Zul9RdG2X8tjXSZFx/9UP/75CO8m99W8V4m/tJ
p6PxsMFQqzAeNhgaHg7EHo7nYWzcY5xdy7rv1rwseXTOSPf7k/K/73WQeXu2
anzjZZm7ZLnDE3O+cHzdJmYPGw8bDLUP42GDoWHB79M6GB4+dnB79Ts3Ht1H
5uzZIu+umSfHvN1Sbpn6gazK2q2ff/fRy/LV0FZev2+vPJU2Sv7d2cX/+15H
42GD4UuA8bDB0LCQbJyHeB6GR7/S7ym5N2W4rMneIxtzMuS2aR/K1RPelSUZ
O+T0kT2crdxe3lg2Q3osnyn/4fj6tx++LBvcdT9w97JOjN1sPFyfsE/S9x5l
oMx1Xu+1C+Nhg6HhIYg/fGA8jE/6F8M6qy/6xE/fkAGr0+ThWSPk1mnD5Pbp
HzpOHqbrxPw/aM1c5d/7Uz/V704f2VO+PvAZ9WcbD9cDOD7aw7tguzOPSuyJ
cXI9aItagPGwwdDwkEz84Qo83LeVs2/byM1T35fJO9bKMb0fky82r5C7Uz6R
5pPf07XgNnPHSM8VM+XFRZPlZ++/IKeO6C7z0rdKfkmJ/HLYS/o+k/Fw3QMO
ytyRLoVLl0nZ3HlSljbX/X80YZ6WnTrYc4RwsfGwwdCwcFB+acfDvKN0+YSB
krZ7i74H/PHGpfLCokly45Shco/j42N6PSJf6f+UfOq+n75zg9rFX3XcPW7b
anluwQT1aZMO6dUmD+929k38nHQo3L1rV0aF+/mbZ8Qj+jv3VHdfovzUdF/8
tcnMxcmUb697XumChSIzZ8r+2bNFHDfxPyibNcv9P0vK+E3/nl2OObOr/3yw
39cBKDt1QF3UNYcaDxsMRx+SjT8c75f+zuD2CtaCb5jyvvxoSAd5fdl0WZqx
U+6c8ZHyMFzde+Vs+eunr0vani3y90/fkPNGvyPz07cF+6zfeULfR65NHs7J
KdQzhfx8lJWV78qWf9BcXFhY5tIof25mZq7k5RUrcnOLYn9nZOQoX/KsoqL9
UlS4X6/1HLpvX0HsWv6OciXXcK3e50Ce/X3Z2QWuTEWROTZb85PlnsMzq+TX
Gm07p5+4Z+Zs2CQyy/FsWpqiaNo0kXnzZL/jY1m2TGTRIpEVK0QWLAj5c045
3PV6bfgZDlceD/8uC6+XuWmx3/zv+n1a8L1PRzF/fvC9/04/h2lFnqdp+Xv4
LvpbND3/W1r59VyjOka0HK4OqAvqhLqpay41HjYYjh4kG384noe/H+53bp02
Wt9Nem3pNPmh4+KzRvWSgWvmqs3ba+UsWZm1W98f/nzzMjltZA856bNusnDv
NvnBe50cDz9eazwM7/DbzFlzZdu23foZvlq6dKUsWbJS//b25q6I3ZPoOzjQ
f/fuu+/J8uVr9H7SXL9+i9NbJsuECVNk0qRp+j/YtGm7y2epo67V0n/AYBky
5ANZv2GL6gXka86cBTJ+/GSHKS5Pq5R3SZNnwefr1m2WQYPfl4EDhzjaW6vf
wbPz5y+R6dNnxvJVWFgqQ9//SBqddY7mhWu8De3/9/mvyvZW7Al4OG/N+sAe
dLzkCirLOnSQqbfcIq7SZPHTz8iYy6+QeU88IdkjRyonRnm4bNZsKZo6NeBn
x2UlKSlSPGOGcmbx9OkxzuP7Evc93/G7577S1FT9rtQ9v3DKFCmcPFkKJk3S
70Hss/tdFi5U7tTnhWnq7w7873/j2f5e/zv3++t5jnK40y9iegU87K6hLpSH
63jtI6pHRvtkzbqV8bDB0FCRTPzheB5WHu39mOPa2fLeugXyxtIZsi1vn9wx
/SPpunS6pOzaICcOf026L0+VP3/ymny2cZn86ZOu0nfVHOm/Ok3+H37pfq1q
ZX2Y7+Cj7dv3yAUXXuym2YXKc0jbtu3kqafa6t9wW0mJKLz9ir1bViZSXCyx
+Q6bdb/LE7bpxU2aOp6dqnzK/Z999oX85je/l9/9/g/yy1/9Rn77u/+T3//f
n5Rnxzme/fkvfiU/+/kv5Uc/+amc+Ld/yOw58/W+K6+6Rn74o5/IH//0Z/np
z34hl11+laxcuU7y84tkxoxZ8pe/nCg//unP5GfuN9IfNWqclJaK3HXXPfL3
f/wzZh+TFrz/8COPy+bNO9xn2qxUv+d/8jx1aoqcc+75snjxCv0u3q+diIfL
PLc6rv3svPNk9GWXyaqXX5H1b3WXOS1byoennipLn3tO+dnzYsbwT+S9E0+U
vAlOl1q3Tmbed59MuuFGKZg4Qfr/9rey5Z13xGVS5j72mEy5+WZZ0bmzvH/S
SYEvePFi+fyCC/S3jT17yNs/+pG8+8c/6f/r33hTlnXqKD1/8AMZfPzx7vs/
yo6BAyVn1CgZ/Jc/6/Nn3n+f9Prxj2XgH/4gQ074q6R/OEze+9vf9JrF7dpJ
j+9/X97905+kzy9/KTsGDJQ5D7eUXi7tQS6tof/4h2x6++2A272dXU94GK7d
uXNvBT0N0P/i1yyMhw2GIwdjxox2Yz7rgN9b4r2jR2ePkEnb18oxb90nZ37R
Uz5Yv0iumzREfdKdFkyUFVm75AdDO8nIzctl7p6tsiB9m/xyWGfdb11b+7Sq
4+E2bZ6RJ55srX8PGjRU7r//IXnllddk69Zdyl1D3hsm9973oPTs+Y7OgXw3
btwkuf+BltL1tW5y9TXNZNq0VP2eZ23ZslM2btwmvXr3kx/++CcybNgnagtv
3rxd/nT8n+Wss86VNWs2yJy0BfKHP/5ZLrq4qd4Ln1940SWy2v3Wt+9AOfY7
35U7Hcfm5xc72/Zc+csJJ8qCBUuUm0877Uz581/+6u4rlHvuuV/+9vdyHmY+
njhxqrRyugXz9cKFyzT/l152hbz88mvORt6sf3/3e9+XS5peLmkuH/jBK3Fx
HA/vn5OmNiU8m+r4dMhf/yrzHn9cXGHEFVpWdeki46+7rgIP7/34Ixnwu99J
3njXhuvXy/Q77pCxV16pPPzWcccpD+5ftkzSHntUvrjkEr2u989+5jjzQ7WD
e//0p7Lngw9k+QsvyAcnnyxFzlbOnzhR9i9dKqn33iufNW4shc6mHn3ppTL8
7HMk6/PPpN+vf61ry+Ovu9Zx/g1S7Dg0b/wEva+v+y1n9GiZ7fQGOL7E/Zbv
dIT9zvYdf83VMsHlP9NdN/Lii6X/738vJZQb/zm+7HrAw943gl523XXXax+F
i9Ebhw8fIVddda1ysff9GA8bDEcGGKtz56Yd8PowZ1l+Y9Czcuyg9vou0sA1
8/RsD86Sbjquv64Hj966Sn7zYRfl7F35OdJteYr6qP97wNN69nRtneMR5eEL
L2qi3ON5GL56rsPzMnv2PDnpn/+Ssc72v/vu+9TeHDFitOPtJjL80890joNb
167d6OzYk+TVV9+Q1q2fkV//5nd6L/wX2CZZait//PFnat9OmjRdnzN58jT5
3+//QLmeeZNrOnbqrNfA25dedqVcceU1amsj9zl94Pg/n+DMwuXyox//VLp0
6ar3lDkbuE+fAcqj/Nay5aOOh0+K+ZpJ+9VXX5f/+ca3ZPXqDXKR4/aT/3Wq
vPFmdzn77PPUXn/ggYflJz/9udzV4l61iaPr29XycGinTr7pJtnYo4ektGgh
E5s1U1t37euvy0THe/E8jD2aO26cXjPjrrsc310juWPGyKDj/yQD/+//1JZe
0r69jLjwQpFVq+Sj00+XRU8/LZt791Y7lzXoZR076rXzWrVydusjku84evZD
D8nn558vxeTnxpvkU2ejZ4/4XAY4/iybPct9d6OMvOgiWe9s7q19+qi/ub/T
CeDheU8+6ezoP8u8Nm2dvf24FLtyTXC8PcOVR7ZtC6519vrOQe9qecvCvVp1
zcPlHFogHTq8oDplRsY+pydPUD8KXAxPJ/RvGA8bDA0aza+/3unYGVJcXKL7
thJdU9V5Wl8d+LT86sOX5JONS2Ttvr2yJjtdeab13NHuusf1fMuZuzepL/qY
tx/WeA/cV5vnS3seZl2YuWv+/MW6n6msrEzatH1WnnmmvaOAdXL6GY2k7dPt
5Isvxuo66z33PCBNL71C+vbrL9dc21xtz9dff0ttYYQ0z2t8obOHZ6r/13Mh
vt733/9IOXbsWGe/OQL9/PNR8v0f/Fg++eRzyc0pUj9319fedN/9yPHlevVD
A2yZ0jJXP85Ox7fNejY83K3b2+pTznP28XvORofTU1PT1P+Mf9v7J0m3e/de
6vtmTZky/OrXv43Z9MzhrF//+Cc/07Vlrt+VaB9wPA+zXgu/Oq6Er1gnhrMm
OF6ddf/9suGtt5QbWUOO8fBHHyoP65rrpk3qlx539dWOC0c5e/oE2TVkiAw+
4QT5+IwzZcwVV6jNjB96lLNv4fqJrt85o095up/jxdR77pFpt90mOc5unu84
GT/yB3//u/T84Q9kz7Bhkv3FCMe1v1W7fdrtt+mzx7p0p995p9rDysOjRsl8
x8MDHK/Puv8Bpxu0kKLUFJnQ7DrVE5xSpGvF8P4Wx9/oFfWJhz3Qt17s/LKc
ceZZctJJJ6vOyPpJTRxsPGwwNDwwVi9p2vSgeBjfsudi3kP6+bDO8vMPXpT2
88erjTxj5wbZkLNX14S/FcZm4vovI86D38OCHxi/shfsznbtOjru2y+LFi2T
3r37ypmNzpb+AwbJ44+3kmbNb1R7450+/dUfiG8X3zVCmudfcJFMnz4rZofA
aawp449mnZe1WvgTXzS8DB+WOO7DHr+4yaVywl//pn/D91dffZ27VlQnwA+N
35iYsawvs36cs69Q0779jhbKzZTngQcfln+efKratNlZ+ZqvHj166zo09vCq
Veulf/9B0vLhx+RrX/+GvPNOf7X14f+pU1M1vWR52Pult/brJx87uxW7FC6G
L7E9dR11/vzgunnzpMBx3zs//7msee01KXa8POyUU9SfnO94tO+vfuWunyur
X35ZXv73ryg/y9KlkvVZ4Ftm3RabGF5c2KaNfHTGGWqb6jNWr3a6wN3K13By
n1/8QvMEv/f91S91HRu72/Mqe7nRBXgmtvgspy+MuuQS1Sl0H5azucdedaVy
f+GiRZLi+L7fb34jRZSvHvmlozzqdS70QjgYXmYdInmb2njYYGhImO3sgWT9
0oniHh4bvsOET/prjpM5c/r3H70sjUe/I3/8+FWNRfzN0A7299R23EO/5+rV
rm/Kv045TQYMHCTPOv7Flly+fLXarVc5HsQv3eSSS+X1N95S/j33vPPl448/
kQcfekR69eqr3Ma+qM6dX9F1ZfgsNXVOBR6GdwcPHir//dWvaxr4mnlfqdPz
ndVfzDowtvc3v3WsvDvoPafblMg57jn4ms8//yL55S9/o3u8Ro0a7+baMqcb
9HPXflsaNTpHGrvf/+eb35YuXV5V++fWW++Qr37tf1S/OP30RvLssx1ifmn2
cV9++dXqW2/XroN8+9jjdM81fnn+PuXUMxzNLNJ3n2pcH+a9pfB9HlmyVOY+
8YRy8aJOnWSU09M+adRIea8svE73WjnuhUOxQwcdf7zu5YI3s0eMkCEnnqh7
lXnnCVt47JVXBXuUHX+zPsv+LuxS7OuVnTvLOz/7md7Tx3Hpxp5vy4LWTwU2
9JYtkuI4+dNzz5Hszz+XIc6+5vlTbr5J17H3r1ypeYGHB/3lL+qXXvzss/L2
D3+o6WEX7xw0WP3jrEezl4u1aNUBXH70/aV6tE8rvk/z/hv9K6EuZTxsMBwx
GD16dNLvLbVLG6fndnx7cDv5uuNdj/9RPKt+Z87KYp/Wvzn+/c/+bdznZ/W3
6PXcTzrt0sbW6vvD2J7sg8IOfuSRx2XqtFSdx7Aler7dRx588BHp3qOXm+My
9L1c/Mt898KLXdTPi8954sRp8lDLR6Vbtx5qa/IekV9j9et3cF3Hji/qe1H8
xrPh4n79Bqo92+Lu+2Lrefw2YOAQade+ozz9THuXbk9Z6Gxznk96XPPhh8N1
b/Qdd96t70plh+89sw79rONY7n3yyTYu/XdlypQUffb2HenOfF0hT7Zqo3u+
eFcqMyNX7fjBjo9bt37amYpLE78/7Xl47fry94f9nmk41tmQ7CmGg7f07au2
5aTmzXUtF+7079/CZeyFyhg+PPjsbNMylx7vIfu9yPBk8bTpFd5XKol7f8m/
o0Ra8LN/p8nzvn9/iXT5zPtPXLc/ohdE31sqCNPDZi+dmarX6mcH5d3495Zc
nqmL+sTDnouT8UUbDxsMDRtT3fxVEw/n5RdIaXGppGxdL3/46BX54dBOuueK
eIcVMPR5/R78NIReN7T8Gj5zP+mQHunmVeEP90iWh/kdfx7AnoSD/buXfMe7
QPwf7Dktf2+J7/25G/69Ja7D9uX7+DOusDG5L7oHiv+5njT5P/rOEN+RJoKP
MWqj8r9/58jf6zk/P79U7/P38ht7xng2ZYBj+Rtwr88jfyPVnWGyJyNHsrbu
EInwkYdy8ZIlsbM8OO8SnzS+3GCPcVr53i7O2oDXwvtiZ2p4joz/HJ7BEXvm
3CBtDz7HX6PfR9KpcCZImOfYM6pKz3+O5NPniTqgLvZUczZKQ4HxsMHQ8NCt
21uOe/KTGrdlRSWSnZcnu/a58Z7juGzfQcDdx/2kQ3rJ5PFAzpf2Z1j4/6Pf
Vz6zI6PSeZLRczyqemeT77Cx43/zz/RpRL/nepAozaru47O/z9/rv/P5qOp8
kkT5q1QOx+V5a9bpuZX4ZisgNaUczqbU73RPU2rcdakBKnwf/3d1n6PfpVZz
T/z/idKoKb3K91F26sDOlzYYDHUBxupxxx1X4z4tj/yCAily95QUFkuxQ8lB
wN9HOqSXbD4tzsOXBM4e27JD10crYl0E6xP8HX99wwRlt3hLBoOhrsBYHTJk
iGRkZCoPJ3NPfi3iQPJpPPwlzt0ZObo2elTiCPBFV2hL42GDocFhyuTJNe6X
rmsYDx8GULdHI+q63msZxsMGQ8PD2HFja9ynVdcwHjYYkoPxsMHQsJBs/OG6
hvGwwZAcjIcNhoaFZOMP1zWMhw2G5GA8bDA0LCQbf7iuYTxsMCSHgIfzjIcN
hgaEZOIP1wdguxN/hhgO/pwLg8EQRbaOkZrePzQYDPUL4xuAPezB/IKuj9/N
YDDEI8842GBoYCjfp9UweNjn2WAwJEZdj0+DwXDgwC/dUOxhg8FgMBiOJKA/
N4T90gaDwWAwHKkwHjYYDAaDoe7QkPZpGQwGg8FwpAF72HjYYDAYDIa6gdnD
BoPBYDDUDfw+LeNhg8FgMBgOP+DhhhDnwWAwGAyGIxXj1R42HjYYDAaDoS4w
brz5pUF9OQ/wcObjQJ5VX+qnxnwmzPuRVcbaa//Dc+/B1uvR1h5WJ/WnPg9n
PTdUvzR1VNv1VFJSKkV1cC4g5ciLlIV2KCw8PM8+kGcVF5fEzk3My8uv8z4Q
D/JEXdKG/O3zSJ6T6dtFRUVaxmrb6RDKTR54xqH0k2T7vL82Hv733NygHOV1
VZDwXq6LL7OvWz9WfFrxiNZ7SaTvVNd2lfqc1lly81KisnpdwbddVXltSCiu
oS4PpJ6q+j3ZtIJ2q53+fbgQLXt1c0N1c8GXkaeGeI5HaWlZrdWTb4sdO3e7
esg5oD6eyPY60PovKSmR/WX7XVpB38jMzK52vk/mmVVdE/99Rg3PimJPeobk
5ORpXSEH+8wvo07hES+UR2V/kMfc3DzJzMoO67vqNLL35Uj63oyE7c99xcXF
sTQPJr/0LZ7h2/1Ay4ieWFpaWilfia4tKyuL1QF9y4sf4wj9ztcV11CHlD16
fbROfT3v378/9h15StQXAHEnsty8wt+79+yt0M/i800+yVu0XshLRkaWa7t9
SY1J8hKgRMF3zBHUWVQOtN5rs5/WBvw4rKlOquobtC/1Uub+j5/z4VG+Tyad
aLvVRv8+kHqtcq6pwUdDvugPZY4/+EyfZL5NdB19Nqn8HoJPyUP3Szeg95ao
H/rJW73elV79h2o/yI/NEflSGJYpEbdQX7lc4373ur7ve0+16yJnXdxcUmbO
1Xkmer+fn/wzfD7UJigq0t8Ppt9xD+Nh46atsnDJcu0fzDvX3HSfLFqyIpjr
Irqbf44vX6Jn+u8TXePL4X/PyAyetWTZSi1zbl7F9LCT1b50/YI59cIrbpXP
vpign2fOnh/Ud5ie/zv+mf5ZWt/hNT4vieqjqjrVvId5im9briP/qbPmye33
tZKrbrhPHnmqk8xfuEzr8KPho6TFg61Dfasojg8K3JyWq9f1fXeYXHXjvbH8
+vFBP/F62rwFS4LvI+1RlLCuy8u6z81NyAuv9JCu3fqEdV3Rzizvl4WV8ue5
8vNRE6XfoGHKsegWXEu+4p+NvtCjz2Bp8VAbeazN89Lqmc7y0BPt5f7H2rm2
XqVpDRzysVx3y4NyebMWes3qNRt0XDEntX/hDXnwiefcPc9Jm/Yvy7SUOTHe
5dmrVq/T+r3M3XvdrQ/KkA8+1WfGyuLyhvR8Z7A80/FV1YHOveQGmZW2IMx7
UJ9B3w7KmDZ/sezana72r7dXqCfy0KnLW5oefdDHsoivO7jl05Hj5YNPvpAR
oyfKkGGf6T2vd+8nd7g+QX4fad3J1eGEavX3wirmyETjzPeTiv29MNYnou0a
nTuifycqS3RMRa8n3/Av43D4iHFhneRUSjO4tyCm11Toy+6aV97oLamz50nX
t/rI0uWr1KbxOtUmNxdR3+hPQd4qpxPtm3NduzEukOdf6X5Q/dvnrbp5pKZ6
8/lLNL6jfzPHrl67QcuNzJyzQPsw/d7XL+OAcX7epTfJps3b9J7cGLfULgdE
0ZDiD1NXO3ftkZMaXS5nXthMdWXmAH5DfPv4v+PHU3Q+CWyCUlm3YbOcfv61
stTNUaQf1W/8Pf7Z9LHAhg10bD/n8FmvCeuwKM6f5uedaH78vb36DpGbWzym
f+/dmymNXfuvdHPdfpfHYqfXo7vpvFRWboeobRNXPl8HXo8I7J9y3i23YUr0
73SnV59/6c2yYFHAVwVhet4/EO3PhQVFOh+np+91fXi1nNf0Rmc7Zup1aidq
XQTP9O1RVKG+98fqkXvU/o8bI/F1Sv/31/j29OWIjkvaMm3eIvnraU2kzXOv
yBdjJ0vbDq/K389oqm370aejpfntLcPnV+wb6ovYH+j/GzZuUf3C2/t+HvLC
HN702jtjtkhZ6f4K+fV9J9ZnXJqlrkzkDxOybYdX3DzVV3/LCe/x5fB/+34Z
/T6YP8qky2u9HD+2j9UNaXuOpxy+rqj/0eOnqV7xcKuOcnrja/5/e+cZXdWV
5PuvM73WfOlP89bqefPWem/mTc+8dk/3eNrt7na3s9sJnNrGYGPjiEMb7CYY
29iAbQyYnHOOBoRIAhEEiJxzFhkBEiCJICGExH77V+fU1bmXKyGJIAlXrfVf
0r33hH12qH9V7X12ueFjprhhoye7XM91vTw33XXvE26w73cps9Ld681bu/se
e9Flnzgl6zV/+8BzrkuvwXI+HP6r3z/lps+cL/ehPn//yAvCbSmz04Xvf+mv
1XvAiFhbX7wQPBs6+aM2neSZlmSuFv+CuubzubDc2NHo/Mefe90tWrIqdg3q
kf6w2dtSO31/075RGOnLWkdal99+P8B1/K6P55cR7gvP/8gLr7zv3vzwUzdu
8gzXsUtf/yxPurnzM2L1eo2OCetPP2tfrliPXI3ryzq26CPRdtXyK19of4ke
E72uVE14XXR/tD+u8L7C8eyTomsQ+qvel9/1XtQx9S36IOQoytXgpbfFNn2m
0btuxar1sT7McVu37ZL+Qlsh0bYqDfWQjmG+f9zbBOmLMuX3dh261ah/B/x3
Uf4GZSmKfZ9Y9/r9xZiOD75nPDDGdCzq+FZ9LHUX1nvXnoPF9kSWLl/jnnzh
Da+rSqTtqQOuhW7jt/O+XKrHovpH45ja1sEYLL2mP1UH9WUfj4uFwfOOmTjd
81Yr1/iNlqIfrrpA98+dv8Q1ebOle+HVD0TnaFtE/cPeA0e6Rs0+cm9+0Nbb
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
J/Pj9AvKz/2x40aFNkjWgSMyP09f/rP/nbiUjk/08YLFQYy+ujxcX/IPq76j
HZnjoc8Sj/nP3z0Zq6NTXgcyZuFX9OWe/Qel7bQPNvBjat7CpbHx2qx5G+HA
7OyT4gPkns4rj7uE8x/wGHY+4w8OesHrNOb4qXPscUT0lNct+z1nfN21v4wx
7EfamLUxxHboN6pDdf5ZY0GMYew8BP7h2pv8+OOecEtT3w8oAz4DsRTm3fAd
0PVcQ/sQY7Wx+JDBGKO8xPro43BDsBanzPPwLOFxdC5cucXrJM4hns/9Xnrt
Q7E3OVZtUXiYNT3EBfb6ekXv8hs+zgNPNJYYOGXrN2Ss+G/Y2cR/WBPBdT7x
tjUxQ/5P9ffAjtR1cugtbBv6/dmwTql7/Hn8inc++tyN8r4s58I5T77wZoyH
OT8WK/B+gOiAUNds8zqF+2MvN3nr45gtx5yp8LD3Jxo2eldsnzLfDvjLr70b
zNNjx/UJ+xLzBsxDzPd9h3pElnndgw7S+WP0A+MTf4S+p3Nm9D/qc5bnP3j4
ux4DpQyU/2l/HPb4x7488Bv34xjmcvFX4AVi8vix2ITB2sJCeV6uO9HbF8RN
/vR4I5fux7+2VyIPUzf476JnfX0SQ8YXUP2BwFHE6Bkrj3j9Rr2p7PL223/9
sYHYX8w14NNG6xkdjR8Er2IrnI/4w62Uh/344DgE/4j73ffYS2Kjck/8JfwN
1WHap9t5fam6mjLzP3EI2jMn93Tc/K2eR5vouiZiKvidKmO9r0P7ELuiXTUe
QFl5fhicuXHmkuHmTqHuvhByGM9HDA4OVGHsDhkxUWxnOBw7hPFEm44cOzV2
XDuvFwZ4bmSssGYvWoe0L89FvRA3h6vxy+hXxCBGT5juSn37Mmal/Os2CZ/8
pekHMuboJ0O9bbBh83a5Hj4pczv3P/6yXEt5V+ODum4yascoD6PLiAkjxMEp
0x+9v4P9LmuwQn8YO54xQBwRgYd5tur072COqEz6BjEX1SPUE/EEXYcm63j8
OazPID7IOl3iYlN929LHsY3oC9Q7Pjw6FWHdpeo07G7Kj4/RLuRh9BnXJFZJ
uWlz+JqYyaNeH1Hf+M5jJqQE+se3B/V/9Fi28DdrD7X9sPGIfWgfrr4/XPd5
+HI4D4qfMs7bOthbvOczYOg44WPaiLgIzw8/Ykup74vdjmATEVumH7Iumtgj
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
GzxiosSGP/2yq8Srf/vgc7KGp3vfYRL3ZG0Uvhp6Gs55udlHwiPEieV3z6Gs
UdL3YajvY8dPylwwc7m6lpe5RWK9+MgNvM+la6G/9tzBfG6/wWPci57L/vN3
T0r+bM2/y7V7DxjlebuR/ztS1j//77vud+mLMuN4uHP3ga55y/byjHf/sYHn
4VzXo+9w+Q7hGVjDDMe/8tbHMkea+AwXJSd4UE9wL3Oh8N3c+YvdvQ8953r5
+7/r7Qs4Um0FyWPvhTVY+Nm9BoyQ2PP//Pnv5brYM8yzt2jbyXXvM8zd++Dz
EqtmrVZwvxKJwzT29dqseWvXe+BIiZtzPa79W39N8pCrPyx5osVWOCc2C/lb
qbuf3/2IxIbJk87z47dim3Bv2o778Rdfl++xG/7t1w9JPvi27bu6vzQNbI2G
vk/c/aeG4gPP8c/9i3v+LHm6sU2wq96J1NuYCdPl2Xft3i+xep7L/GGD4ceJ
it5bYo4K/49YXIb3n0rLrt0X4ma+t/Sb3/wm8p5y3eVhXes7evw01+6rbq6/
17PwCvXF+ijW+uCroW+J2Q4cNk74BD6V94E8H336ZTeJUydeG38RIcaJ/lb/
ELCWGP5njRZzo9grvCs1YOhY93mH7i5lVrqs5Q1yVpXPMQC+Z46XGDZrh7EV
aNvg/eFSmd+cm75EysH1sSlWe1+cNV7ch/XFPfoNd1kHj4jfz3tRFT0DHITf
+NU3vVzminXyDMR1v/i6h3D70WPZwbtYEVuLMsyau0g4DX92Wuo88e/xe5kH
YM0ZPuvS5WuE86N9FI7Fj8XeoH6Y2+U85lGYo2VNQ5BL+1KkjKWy9rm9LxMx
eXibdeK8c439QF3SdvjoXIdn4i+xik99mzM/zFp5YiHEN3jnGlsJH36Sr1/a
n/uM9W3WtddgaQPK2Cuh3qhb5h2wMXbt2R+Xd91gMPz4kGwfD9XlygfR42/m
Ph5c65mGDeuVPxAVXVuGlIQx4cTfRf+XXIn7PlrPopM9h6P/H3v2NfGLZV1w
5F1hlWgcOFGSxSUSJRr7j77XqsdGyx+9T5DjMv6eifcKfPirsd81FqySjGui
ZYhJ+O5uWeQ9bLleknNLEuo12m+TrfuT+1111whrzlm3Ha0zrevENtVrl1TQ
BtHjuV5iGbUs+n1dnY8xGAy3B5Xta5nsneFbsa9lw4YNAj1bT3iYuCh2SHSf
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
93nTZG549uzZbsmSDPf/AYdSZxo=
    "], {{0, 422.}, {241., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{311.643359375, Automatic},
  ImageSizeRaw->{482., 844.},
  PlotRange->{{0, 241.}, {0, 422.}}]], "ExampleImage",
 TaggingRules->{},
 CellChangeTimes->{3.8894749305975027`*^9},
 CellID->1491546085,ExpressionUUID->"a066330f-e087-46ff-95e8-20a72804c260"],

Cell["View the final state of the TODO list:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8894746857253437`*^9, 3.889474690093377*^9}},
 CellID->187979416,ExpressionUUID->"aa1c073f-f227-4968-9459-c952675d8363"],

Cell[CellGroupData[{

Cell[BoxData["todos"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.889474692533144*^9, 3.8894746930446377`*^9}},
 CellLabel->"In[5]:=",
 CellID->1387489144,ExpressionUUID->"f998c2bd-83e0-4b25-a274-4227011f8c9a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Christopher\"\>", "\[Rule]", 
   RowBox[{"{", "\<\"Go for a walk\"\>", "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.889474693446576*^9},
 CellLabel->"Out[5]=",
 CellID->603970918,ExpressionUUID->"235c4e33-51a0-4e5c-860b-4636e35398df"]
}, Open  ]],

Cell["Stop the web server:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.889473069685279*^9, 3.889473074177333*^9}, 
   3.8894746914424686`*^9},
 CellID->576310274,ExpressionUUID->"7ee0cc99-76d8-4211-9dbc-5858fcc7ce12"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "server", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.889473081013341*^9, 3.889473083050357*^9}},
 CellLabel->"In[9]:=",
 CellID->895527148,ExpressionUUID->"a109f436-67c4-487c-8df7-3f4cfabc751d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"9a70a44e-c917-440f-9c94-c8342407baac"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d2fa75a0-2ef3-4c39-9397-0fc3b7574874"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"fa9c9dd0-88cc-4418-a5ac-58fcc01a41a0"],

Cell["Christopher Wolfram", "Text",
 TaggingRules->{},
 CellID->499907848,ExpressionUUID->"cce4ca5f-2e5a-4db1-938e-c7599bb00d1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ee1500fd-0247-453d-8978-f18ca8aa1505"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"8f1f74ba-ceca-4d51-bccb-19ed6aacb332"],

Cell["https://github.com/chriswolfram/ChatGPTPluginKit", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{
  3.889455616053879*^9, {3.890321674408029*^9, 3.890321675424055*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"c1122029-c354-473f-bf7b-3597916f8302"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b810f846-0706-471e-917e-17a15ca9c3bc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"5d932463-d680-4af1-adaa-7643109414b1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"dac292e4-803e-4772-9398-f55f94dfccc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f92e367e-b29c-4204-b54e-0c1c101c36be"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"69a1827a-21af-4e00-9c10-ae397a9146ce"],

Cell["ChatGPT", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.889455571048521*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"fd4b6aa5-d500-4532-b655-1f717862bd12"],

Cell["LLM", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.889455575420596*^9}},
 CellID->48978922,ExpressionUUID->"726ceec4-2c1d-4ac3-bb96-a47e4af7ec8f"],

Cell["Large language models", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.889455578905986*^9}},
 CellID->1513761036,ExpressionUUID->"e44a717b-488a-4fa0-aa94-292e33befc6c"],

Cell["AI", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.8894555738835506`*^9}},
 CellID->1950660336,ExpressionUUID->"78c3e198-c9ba-4287-afcb-6426d3379497"],

Cell["Plugins", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.88945558390662*^9}},
 CellID->730603534,ExpressionUUID->"7cc72b6a-cdb5-482d-b611-c934d7fc611e"],

Cell["ChatGPT plugins", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.8894555929937887`*^9}},
 CellID->975828151,ExpressionUUID->"323a9f8c-80b1-4e49-83ab-b82c74c058d4"],

Cell["OpenAI", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455569564808*^9, 3.88945559394429*^9}},
 CellID->1124411551,ExpressionUUID->"348fdd92-edb9-4f6a-adc0-b1df0bbff3b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bcad6561-2b5d-4d48-b52a-84fe450b88b2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"2468ca25-8bf6-4aaa-8818-d4437f9a8f22"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Cloud & Deployment", {False, "Cloud & Deployment"}], 
            "\" \"", "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "External Interfaces & Connections", {
             False, "External Interfaces & Connections"}], "\" \"", 
            "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Knowledge Representation & Natural Language", {
             False, "Knowledge Representation & Natural Language"}], "\" \"", 
            "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdj81OwzAQhA/8tEWIA08QLlxQHiJKOVRUtOryAsaZhqiO1/\
KuBX57lnKC22r2G81Mt2zpirQG0PWuaCra0qL/gD9hOF7I5XYSpfs+cBmax2aNFLjOiEoPz1+\
KHF1oNtGOo/MQI3qOEV4njkJPL5E/\
A4YRzQEpQ8znfl7GvTot2cxbF8fiRliLjWIWWXVFeTbMt7TcZ07IWummd4qR8wSxfrt0DvjDLnoOZf\
4n3p27WfRvLq26WKm8C2zl7QHCJXu81WTj984H6Dco/WBQ"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->631444283,ExpressionUUID->"81b59e91-65fa-4f0b-afc9-b8947edc9adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8e5f6375-f456-40f6-b6ad-422922e0bf23"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"2433b10a-9d43-461d-80dc-3be5878fad52"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"ec7dbf01-8d4a-4ffd-96e8-04617c9107ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8f1c974e-504f-410f-8424-eeadba681f08"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"a944b77f-a3aa-4d38-86d2-cedf7f5cf90b"],

Cell["Source, reference or citation", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"df640541-bcde-4be2-950f-76f86702f6f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c4cbe946-4c60-4597-be78-17f8a15e93b5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"2db80dba-85c5-49c8-9d17-77ded33cd07e"],

Cell[TextData[ButtonBox["ChatGPT plugins blog",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://openai.com/blog/chatgpt-plugins"], None},
 ButtonNote->"https://openai.com/blog/chatgpt-plugins"]], "Item",
 TaggingRules->{},
 CellID->1160725202,ExpressionUUID->"de103ca1-e358-4cd2-a2c0-379c16035b2c"],

Cell[TextData[ButtonBox["ChatGPT plugins documentation",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://platform.openai.com/docs/plugins/introduction"], None},
 ButtonNote->"https://platform.openai.com/docs/plugins/introduction"]], "Item",
 TaggingRules->{},
 CellID->948367542,ExpressionUUID->"db842df3-cf76-4410-958b-811af942fcd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "809009d7-2096-4d72-986f-065b0c11cc7c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"f918133b-c4c4-4018-a7ed-70ecea829acb"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d67c54ed-5250-4f17-9703-96b2ae84165f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"cc4bc9d0-9c06-4614-aafe-a11bfc9ee801"],

Cell["13.1+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.891966102925074*^9, 3.89196610301642*^9}},
 CellID->1140217459,ExpressionUUID->"0ac06380-d1fa-45c9-ae7e-4d21c8a999a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e768bb71-92e2-497e-9372-b55120ee7d32"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"59cf5ca1-5d4d-4e90-871a-741d93996020"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Linux\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9T0sOgkAMTQQUE+\
MJvAKHIKxINBCq0S2OVSfCzGTaicztrQvYtX2fvlfmBWTAcUBYN4Fd4AI21RvVBx/\
PhNKjJobNVZuH/RKsT71q4AbpxehJhDXjSDPtuaK0C2K00OdhQRLRzybLMTtqE6bZM2+\
9deg5wqGyo+tZ3/WgOTZylMW8IJJ8lZSNY20N0bYMbEfB1D+6HcJoqEoK2NeG0TuP3P+\
JsC1NhHAnlIq7DskGr/AcnTRvezUg/wDD31vo"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->1967364554,ExpressionUUID->"7ccf8ab4-bb5e-4a45-bd7a-89d29ec95739"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "79672d92-56b4-4d83-87f7-556e58f5d93d"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"d140714c-fb70-49ee-81b0-2fe05e91be2f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVkN1qwzAMhWFrmwS2PcTu8xBZ6EXKoKEa7DpxFGLqPyy54LefQ5ekvdKxjv3JR1Vewh\
44KoTDObALXEJWTyiuOIx72n1LYsgAiaQ1kH91LKaT7eEAwkvHUEDor+\
gNqiTFhENQOCRkw6hpzO6A8YV2l2RsoEWszsL7r2v/ib/I1X3/xf5461ToeKY+\
Hzd2aldts9QH9vLhB7m6W9ZVlZC33jr0HOGzttqlOb1UkuM29Whu0luj0cybPLu5R1RUga1OF8S8Xq\
uCNlS/lvDRGEbvPPI9QVGZmGISpsdvFyQbvMCf6FKIthMK+Q8ymZXJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->690346219,ExpressionUUID->"c76d9dc9-58bc-4f4d-90b6-09361c8e8289"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "80061238-a2aa-4c30-8363-19d0b4229538"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"04b2c6bf-949b-449f-ba05-6f7d18e5cc1a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJwtjkEKwjAQRVVarSAu3LnzAjlE7aogKB0vUNMpBtNMyMwsentTdPk/7/F/\
XRkoQWaPsL2rRBUDu+aN9oPDuOLi5jg3ZSs48bj+\
5XHDRafZOIHGSElwuLhwsZ504OKZFA1Uj0QRk8xwbmiKvbiX807mZoH+\
Wl66R3EUmPe1Ck2Zsss8eZ0CN2sDxzYIpphQ+gWE3ZXIYx8MHDpk0mTxOcf8/dFbj/IFQ4JH6g=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1942241639,ExpressionUUID->"fe3ab3e0-32c1-403a-b615-466e479abc92"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f5f848e3-bcae-43d0-ac2d-8eb0dececf49"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"29028803-9188-4842-9866-bc7fc9fd0c7e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqAzEMREuTNFkIpZfe8wP7EctCITQkS9Qf8DpaYqK1jCUd/\
Pd1KISW3mZGbw6jbtPCCrQQwsvJNJm2sO6v6G94mZ5keQhSk9VecZZp8eOnZ1merTaaIyuOzDf5JR/\
Xt8FlR4S0+8QckeR/8mC3PbFddp33KPLXtbAZMifMWuC95zk5DWOgoOUDnVrGSqxPSQNHkaYz5bkS/\
j6DyeYo/aKF131UzCmjujsITRcL2ChYx23PKGzZ41dJ9QuD84T6DQYsYUs="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->1503792273,ExpressionUUID->"5ccece0b-383a-47dd-bc7d-ac0e2a7d50d8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3d6b1c07-e91e-4b36-8ea3-23929bb1010a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"d821fa4f-971b-4868-a773-fd1e8ab1349f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["LocalFiles", {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0SVOVC3DgZCGOlAfgUjXbFiK1ahXnBdzd2cSq17Py2G2XKw/By/\
AI8BKII+IZGLvZTVoVib141vP3zcw3Phzuy4H0jQG5dR58Hfy+3M6WkF9BUT6l/\
qkmL3dOMVfmRBsgtp56qKjVlT3qz4IB/n82w5v4m1zGyUWU0Yd1w5m6meAtyz0az6GqjfLAF2V/Zf/\
ySFNukIIDWmcrB9TPwBiOsM3WR8qrcouGJ05Vybt3p5ZfetkSkUD4pSaBtddohS5Fg8GJWuUGvCi0g\
9ybRhQIJJRtBJZsD6JEY/BG24UogouHQVXEE52w6CouI5BawIedn1+/\
icwBQ6d3ogCOypHYqsJCl5plsy46GU+\
rGp0nUTBwUTqs7lnEEhksOBXxknAQu1IIj23eFXRtyStjkhkjLzqEyoGA2xxqdnsvd8/\
QwdSWOIfbbjC0M1H51cJhsHGgo49ONadwDcaV6ftz0Fnupr6eKbfghNmLdYR0n0hyP8KP7/\
H7vY6wN4tpGNmM8QXKBp1mNK24hVJ/hpYiHGpLcjOgWMX5dUCjw+\
Cx4jrzfxQzOopdV5cs9ucuQKcYRh7M1aIjpnwredzcsDbO4wRr/cfRf1V6h3B1ZpNs0snPs+\
ecYvcTmiJD5jFzoHxCe8fXyoQ0oETI15nR+RVTK5KDh6QZgKuSXr6ZWqMttLjOa7DgJsF7tO1m3N+\
44YWLLPGNHG8UwXt6nohO7RL9VzE8CbsEp5kxG2JX3uDB5V1zjwt91/\
TBiTIEj43jgaabh3y1iXmzrO0MTagsbUx9X+\
5NrQdXO46amjU6tI0MlwT8Lu3OgHihc5g3NT9XF2k5/gLmcbOx"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->501690768,ExpressionUUID->"25cbab51-70f9-4cf3-8d68-255e16056335"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhjZpkzZKL1zoyeLEgbwAlyrZtBCpVas4iLPrnU1MnPXisZsuJ94CceJFeA\
R4iYoj4hkYO9ltGlGJPSTj8cw3f9+43+rxJnelBr536V3hXY/\
vJzOQc0izJ9g4V0ia5sjBArOnq3O2g42x10Dn3bFZhmNQ86P3RmdWLJiQ0vjc0X1rLJYDcwtIRocTW\
BRaOCBF1lj7PB8qlNqgt4Br9/\
7au4mNBLQmlH3yGAonsj1snZFFRNhZXfNvu8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnI\
S2YysgeWGa3NUuXT1wd3X76zMXz0ZIqvmMfwaywjR2PTlZPKM2MXIkawEEpJmTPB1t59/\
oqsqn80jGij3IEV0iFbKjeL8WrTRBufVo0KcbZ6FwESCxSD8kiBqqDMyW5hUpUpkh/\
AyQhnrj9QmbjpG1zgFqQP8soqhUKbklJHOYOU5khFCJyv3N5hbSctpMpRdApyoyRUis1s16roeiHmU\
Pegr4uZYFJojbxzYSyMqHcTuK3JgwcDIedTS8WmNOL2GyvKc7gBbbP4/\
TmpLTtx5hfCTlWOybN7hKiP5H2I8PNH+\
H7fI3THIQyNeSxS5TFp1jft0UJMgatPUNGYoPY4JQ7pGufXCbb73pkwePlIMe1hmJC4JrExsR7qi1b\
g6ERM6+XhLznNiBhU4Ty+ABXGYcBYl19nuf5PBsmglo+SIwrTeWt0mhjaNeIM7XD39EZoH1kbF+\
Y40UrOifqBTBY2Wc1fjHKtcqhyuywgBzvwzpm82l7efZhmj7eurCnAupIfbhRD78hlXEaslv2/\
CqKJ5DOwinZrQ6xLbG4pV00+JRLG5jfPhEb411i2buq58OPNnLdL20+\
M9oscNxjQ49242IUl5Ni0dj8vub9GIIfOGJAeHgmTsqAn9Sq+P38Bxkb37g=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->895939654,ExpressionUUID->"40b90193-6a89-4522-838a-425a4a789cc0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUZqPp2q3ahsQVcGFxBWh9AW6mNuug0qpNcV/\
AS04aq44dfOxt4UV4F8QjwEsgLhHPwEnaZKX8CF8k9vn5zt9nj3pDHnBXKuDdS+\
8K74Z8L8wgXkKSPsDOhUSSBFMHOaY7q3O6i53IK6Dzw8jcVsdKzB9N7hxYLRRDsDcyhsqjF4nbsbmj\
/S4ezCEvlHBAgrSz9np6JjFWBr0FbAB44x9gJwSlCGePfM6EE2kXe+dW5DXG7krNP+\
6EmTEIzGUSmSmcNJrJlJXGW1aIWIFjibQQO1WyxAAyoUtmUrIHlhqlzK3Ui9f7Xz98YjOxJL2Fdx7Q\
IXOGwXZZ7EXmXHHC0uqDmJ0wcPHL2ju0QPVRDpZ5pP/ahcVGawpPedVmHHTCIBdSIR/\
MjIWpTs2cAjW9xf2xiJcLa7xOqPr+GyvKC7gBZdN6/ThtLQd1O2bCLqTG8PE9Qi2vZ/srwpfP1fp+\
j3AYVWGoA5FIpMcwaDX9aS4WwOV7aKZMUF0eCwXJGufbKfZH3plcOBn/pZj+\
GdAIxDVtO3ProVX0qvHNxaLlFn/FV21qcP7FjgbloEJZN6DNc/0Px+G43R+\
FRxRo8NaoJDRERXBAJD+c3AjlRRW1ZtOTUMl4SbywLKcsmKQ0bF7r+\
fOpVlJDk91lARrs2DtndENufryd6JD3rqwpwLqSH2wURFftsuYqNrfhv0qiqegMrHSQbGzbIoMt4ar\
Rk0SuBhCcC4Xwp9FsadrZ8GebOf9e3F5olM81bvBgyA+nmuwKS9h14/ojXXJ/\
jUDPySACpJsZw7ws6N25qi/oTyONokw="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->2049915661,ExpressionUUID->"d0c56f63-b7be-45e5-85f3-acda9b57a70c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{"\"WL system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVr1uG0cQjmRSIiWCCgwZ+ak2QRCkMOEuhYsQ4km0CVAQwRUiBCmc5d0cueHe7mFnT/\
L5MdLkAQKkSZEXSJU6eYC0Qbr8PENml+TpJNhIChUuzIb7M/ftzPfNzs5Rq8eb3JUK+\
M5Z4fLC9fhutIB4CUn6FjbGEmmlOXKQYbq1mqfb2JgWCmh+b2qu/\
NQv83cuxgxLJFMWG53KeWGFkzTawtZUXA3Mc0Ay3j+\
HLFfCAS2kjfW37FhirAwWFvBizANKdAOkiY0IlCKwXfrwWDiR7mBraEUWgLar7dY5PHdhf3cN/\
uNWtDAGgbmFRGZyj8dkykpTWJaLWIFjibQQO1WyxAAyoUtmUrIHlhqlzJXU88d7v3/\
7E4sskOvIcrBI2KAdUyYWimG8gIRYSZgTuMRgfGoSmUqyvmbGWAb6UlqjM/\
8tgnOEfcvcM3072HvYCjqtgt05F/MVf+\
1B4ZzRq0llwpsfTYRb8C4vs5lROIV0LPVyIx0e8oW54s7S2dFCWBE7igcb57aAymZvaLQbikyqkh9w\
4ioGxoVGNrGmMmoPBEI41Tt7XGqyj8nZzvBkYuUlcfXVKKWtTlRYSxF/LlQBvH1qCoSzS7BV9jRu+\
Nf2Z0dGGesDnz4ZhLF98ekPn118+WfffiK+//vZF7/17bsf8+Z33/\
zc3yTnLZy9FTueQf72SurHFtJHgZ3Kqkup5qWciCTxajSHQqEP6H7w8yjPgTjSMRDrvOUPeCp0cmdk\
8u2HdyF5+zjksLHlG9lrsh/WZK8Yem2kf/\
bQlwSUtCtsqAIjjU4oRUWIPPKliorLKgT0pgnkoBPQMRWKGxWJ9mSWG0tm2uheXsyUjO8ir7pTwOD1\
2exrYu9NctWS671act2k6bXJsL5/jb0DqzdGLClXhvT+\
uBOdsCw8OXF4YnGdfnSAz7kFeaHoLN45NRZGOjX+Ya2xIOLl3JqCfN3C9hMryjFcgrJp+\
P3Tryw74ZE+FXYuNUaHNa/9+kbnGsKvv/jfX9cI3ak/hhiYikQWGDWvNR1lYg5cvoCN6AS1w+\
lBhmSN80cf20eFMxkFGb8imPYxkIpiRsObzLb83SFhquaHP+IkLrG1wfnPxmUDte+h1ixUzq7/\
o0E0qMYH0YFP7qdGJZGhVgkcUCvWPbmkNA+QHoi/H9H1XlJ7YklEC0ySLzYL+/\
zDkVZSw8bFM6oYYFdZu2m++\
IOXetvjLcoZam5cyfdroVFXeBb6Jty0bP8rLtJHL8BKB0ltWEXavLW4ovyEyl6QYn1TXiLSrZ1KJf5\
B3edXRLhL977INNbSose7Ie9zSwcECttHuuTFjPqzHu9sbvZ5mVOfPAlX/l9i1gMk"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->852365606,ExpressionUUID->"6b242312-0fe5-4bfa-9ddd-8835f7fb4376"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
            TemplateBox[{"\"WL built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVMFy0zAQpSVuEpJJDnAqFw03DuEXOonTlsykk46VmV5R7HWiiSx5tFJb8wV8HPwFR4\
ZvYO3EbkiBwRevdrVPu/ueNO6MeMBdoYCfLbzLvRvxdriBeAtJ+\
gJbc4nkCWYOMkxPduv0FFuRV0Drl5F5KJelm7++\
m7OVl8qNpGZYZCujypxOJB4m5hGQNvaWkOVKOCBH2trnnU8lxsqgt4B3c14gHcb36QG2QlCKYNqUMh\
VOpGfYubIiqyBOd2H+\
5STcGIPA3EYiM7mTRjOZssJ4y3IRK3AskRZipwqWmUSmEpAlkEoty72Ukz6rnaGPN0wggZbQFNjV9o\
kZy4zbgCWfA6uFYrEh69HhB96/MRZmOjVLWtejwlcTEW/X1nidUC/dayuKOdyDsmn1/\
bxodvar5m6EXUuN4ZsnhMpfUfU7wrev5ffjCWEQlcdIvY5EIj2GQRPpzjKxBi4/\
Q00aQZ3xWChI9jjfL7A79s5kwsn4L810p0ADFSsyW0vroQl0SjKWYt1Ihb/\
nNHMacI3zD6prkF4Jsu+/KXP/DyfhpLGH4ZDO6X80KgkNyQockGQHl/\
dCeVEeWknjPFQy3rKUOMuoCKKMzKyK83czraSGurhFDhrsxDtndC1UPjyqc8Q7t9bkYF3Bewft0L1Z\
VLrDWtj/1RFxoklJ0kFyYDY9BkfO3ZgvE7kbf3AlFMKfiDmKNMzwt4c1P+\
utHRrlM40HIhjxwayUeW4Juhpbd6wL7lcI9DT0I0C6ZDEsi5zekNvqrv0CBTKNJA=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->1992814552,ExpressionUUID->"0aa07a3d-1889-46a9-afe8-818305e6c32a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVMFu00AQpSVpExK1EnBCAq04k/5C1TgtRGqVKhuJ89Q7TlZd75qd3bbmf/gb+\
AuOiG9g7MRuKAXhi2dnPG/\
mzbz1SW8kuzKUBuXeLIYihpHcT1aYXqPKnlDnXBN7utOAOWU763O2S515NMjnp3N3Wx0rt3xxCanBI\
BQWaBXaVGOV05vD7djdsb1LgwXmhYGA7Mg6m7zXE02pcRQ90hpiso3QpU6CxjDSPmdNIEC2R70zD3m\
NsrsOyy87yco5QhFWmoQrgnZW6EyULnpRbDrTHtNgSqEtBTCGv/\
MiFoobIgG2FKCUrhLBbFLoSKxbIsaFIMAjJ6cmKlTiVocVu1F8dCbjfgSVxIMSygnrgvD4KXJBAVy3\
IXgkhxfO49RmboF37Sjp2RjS66V30Som2n/voTzHGzQ+q5+fx+2Xw5r5Bfglk0he3iPU/nqVvyN8+\
1o9P+4RDuZVGW2Xc1A6UtJtI/1pDkuU+jM2S2WoPZmCQbXB+X5M/\
ZMYXA5Bp38h058gTwyu2OwsfMQ20Ks2tYBlKyX5TvJCeOANzr+l0OAMKpzNCNpON+9knIxb+\
zA55FLDD86oxLHyMCCr+uD0BkyEqm4tnVeJ0em1yFgMuasXzGZex+\
XbqTXaYtPfjLtBP44hONtoWT7/s9WR7F16V6APpRxskeLbNaulSY38/\
4sUb8au0OuAastsaXYfONfDPmUt10vonoEhfGw9DyLtfuSb7Z4fo7efOBNzS1tqGMmDqQ3oC8/\
o9fD6J7aU8YqQ/yHDORJfxRQXZcE/mzXmL0JanD8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->1079216852,ExpressionUUID->"7de91d63-978e-4aff-b2e1-d1ded5ac6d31"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uE0EQJmAndmI5EUqBkuZEgaCw6CgosOJLDJYSOfJYIEQBm7s5e+\
W93dPuXpLjMWh4ACQaXoGKGh6AFtHx8wzM3vkOx/yIgmu8uzP77Tff/Hiv0YE62EwgrA5Tm6S2A2v+\
FIMZhtElUzvkhk7qA4uxiVaKfXTZ1EapQNpfGakzt3XHsDUEL1Ay4pNUM8tptWIaI3bWU+\
doyGtjjHEimEU6iGrzSzv73ARCmVSjGYJ/4Xrd1HwUgmDW6Mo+syxaNY2+\
ZnEOcbkyN8Z4bnN7ycX6U6UMenbKjacSB+\
fxyMtUqr2EBQKtF3KNgRWZFyo0HpOZpyLyRy9SQqgzLid31z+\
9fOsdqZBHnFwoPIPWksEUBjabX0zpJbrsBFomfMU0cnkLwqtjNimib/\
ZSa5UsNpULbEFmSGtfY4jSciagDVl8ooQZYXTI5awU32zDVJ2B1UTHnzLNAovamNpYp1j5rPeVtH0W\
c5HBJlDsAXrApPGOtaqcmj1mMCfgeO9nkvwD4t3qHxxrfkr5ejaIyNTyU62J1EMmUoTmkaKoh6eoK8\
1rF/g13du+Eko7DUb3e/laP7/z5t6jJ1+6+iZ7/e3p449dfe0G1F+\
9eNcty2sJZ70QyokJu0Xq7mqMbi8LVV1oUxFZOjtmYehyVe8zYVxsV3PKe0mCJJcMkHIBDffWAybD/\
6YrtI6UxoGMlCvKhTBYMJtoldJTK6Z5X7PsEE9R6Cj/vncrz1Ze4EdMT7g0/vbCo+\
68TNQCwof37vv6E6E9cs9QACMW8tT49Z9JGcRsgsCfY5k1glqFgAkM5zifu6a5l1oVUw8GfwimuY+\
UBnZCy4vCNFz5k67VrIBbQE1G3Vfi/KXdS5ANBzKPv6I5//V7fq9ab/\
qbri4fKBH6ikYLWqSZ1T44pQrNIR0Q7PiCBzPqau3FRMLjxELHuR2uD6TgEktywwQl6qLgymEFm0s8\
O9CgNCeobQYbC+HQ4Bzmg8aUw+2fIqKcyClqbjFcWFYx1pcOC5kPQl7IPy/\
u3yRmyVJlBnYXOf8S2xq1aRpLs1AEHWgPqKN0ogk6l625JzNIT2gadqA1QpN3wDhL6E/kOO/\
QH2w4QcQ="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->750749002,ExpressionUUID->"60d5270f-dbd4-4d4a-a843-d6c3a01ff42e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "LocalSystemInteractions", {False, "LocalSystemInteractions"}], 
            "\" \"", 
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVT1vK0UUJS92YieWg9CT+\
GpGDwlREKHXULwCK97YeZYcYu04IEQB49279sizM6u5s3b2lZSUNPwAJBr+AhU1/ABaRMfHb+\
DOrr1xIvJEwTY7O3PnzLnnnrl71jrlTe4KBfzgKndZ7k75YbCAaAlxsoeNsUTHXx+\
bSCheoIN0pB1YETlpNNLWEU3hNjB5hI0wV0Df+6FZ+89y/\
5vlfoYlAJM7CBTZCsW6b24AKfx4CmmmhAOaSBqb3U/\
OJUbKYG4BHyCSNLERgFIEd0hbz4UTyQG2hlakJdSjerk1hRtXru9v4L/\
eCxbGIDC3kMhM5gGZTFhhcssyESlwLJYWIqcKFhtAJnTBTELxwBKjlFlLPX929Nu3P7LBDUS5oxC+\
oOOYsSy8/phFJk2FjrEMuUZaJg5gNUkCK6Fy4YxFtpKCeSHv57GPrbI+VR4HUzGvxGn3c+\
eMrj7qEP7qYIM9qKCBd3mRzozCEJKx1MttkfAxX5g1d5bYBwvhpQSL2JjaHOqYo6HRbihSqQp+\
wkmRCBgXGtnEmjqo3RcIJQHP+7zQFB8R785wMLFyRRy+\
HCW01Alya0G7T4gY8PalyRGuVmBrnzTu8Gv7swOjjPUahBf9cmxffPjDR59+/kfPvie+/+\
uLz37t2Tfe5c3vvvmpV/v1Ls5RJZQXk79dFfSZheSD+\
0LVG7oBHUw8JyKOSRxsDoVCn9trJeWzLAOSS0dAteAtf9ZzKu//piv/aq90ytbgyNbSLW49o+\
TMCiuh8lMIIkbvtLWV3nnOMHQWRFpOoqGL7KrIsch1tKCQjEgpBYotCRAUvs8wn23GftPF5Bp559JY\
GOnE+Auzo6WIlnNrcu27Q/vCimIMK1A2KZ+/e3Vkp7x8l8LOpcbg8U7mfn7rlh2EX372z5+\
3CN3QH0MqhiKWOQbNW2eMUjEHLl/A1joEdcCpNUC8wfm9h+2z3JlUOBk9kEz7HMgLYkbDu9Vp+\
TtIxa0bG3/Koew0W5z/0JK2YMcebKNDTXfzDvpBvx6fBCf+\
kjw3Kg4MtUEgS76C3Y09CdMD8bcCJaMlNR7LUiJD3ZSGabnOn4y0khq2JK8y0GAr928b60t6eYu8l4\
F1BT/eSY9+B1dZlVHjbpd/aWZUI70Ab8l4Z1jn2rw3Wck+iGVVjs2N+\
5dC3VupK8Xf2eX8YI6H1EPyVOOOOU55t4zJLB1Rytg+0wXPZwj0L+yEgOX1nBYZ/\
SInZfv4B6Y3mSw="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->1372050489,ExpressionUUID->"405d5250-8026-427a-86c8-c3db535c1427"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNU91u0zAUhtGsLa06kLjiBov78gpTm25QaVOnui9wGp+0Vh078k+\
77BnhLbhEPAMnaZKWARK+8fH5+c7f50lvzCPuC4X8chF8HvyYd+MtJjsU6QvXuZOONNHcY+\
bSl8d3euE6y6CQ3q+W5lA+\
SzWPFn6LlrS9JRym5hEdmQYrzHIFHkmRdmrPNzPpEmVcsOiOQZHrxKgUBXfJcQYe0kvXu7WQVYEXRz\
N3EyEYCCG9NBoU8/joGTimEQUKJjUDkg8sIWe2RmUOzBsmTBIy1OSpi/NocaqC+\
S2Q3SLTxjNFRRIcrM0eP/HhvbE416lZUbamefd6CsluY03Qgqruf7ZQ3OEelU2r8/\
O69RxWbdyD3Ujt4ncnhEpfDf93hG9fy/PjhDBalmmk3ixByODiqLX05xlskMsnbNZAUJc8AYWixvl+\
7fqT4E0GXib/aKY/Q4Ue1iR2VjZga+iVY1/Bpl0+/\
8AxKefX4PyxyiZ0UIbWXbfF1Xc8jaetfBVfEfrwi1EiNkQW9EjUG93sQQUoU1Wrfx8rmexYaizLKDX\
tmsSssvOPc62kxqakRY4a7TR4b3RDv5qdY957sCZH6ws+OCudWL/ISyzXkPS/+\
qD5a0KVxJYzse0seqY8jvSGCFiNOroF5fBvS3hmabfA357XXHfUjY0KmXZnax7z0Vx7tLklwGpE/\
YkueFg7pO88XKIzwSa4KnL69w+QUN5fC7dukw=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->373167137,ExpressionUUID->"da19bdbc-15cb-45ef-82e3-ac92f300ce5c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3c99ce12-f97e-4d91-89a2-5deedc62e77b"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"92d9033c-eccc-427f-857a-48246e7a6b9d"],

Cell["There are known issues with with Safari.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.889455308071157*^9, 3.8894553756444798`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"45e6c700-c294-49a3-8ca5-e70b61246c57"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1091, Automatic},
WindowMargins->{{260, Automatic}, {Automatic, 39}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891966127707362`16.34274404105077*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    True -> StyleBox[
                    "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/christopher/git/ChatGPTPluginKit/ChatGPTPluginKit/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj0\
5iKuUNScwtyEktSQfKMUPl0Jf3Q4tSiYv3kjCIgP78gI7VIPz2zRN85I7HEPSAkIKc0PTPPG5tAUml\
mTop+eH5OWlFibnw8uryuoZ4xEBYkJuekligF84Ac4liUXpqbmlcSzBgLAK4NP6U="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6769010e-fc90-4294-ac90-76d31b4904b7"]]]]]], Appearance -> 
                   None, BoxID -> "6769010e-fc90-4294-ac90-76d31b4904b7", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891966127707362`16.34274404105077*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    True -> StyleBox[
                    "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/christopher/git/ChatGPTPluginKit/ChatGPTPluginKit/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj0\
5iKuUNScwtyEktSQfKMUPl0Jf3Q4tSiYv3kjCIgP78gI7VIPz2zRN85I7HEPSAkIKc0PTPPG5tAUml\
mTop+eH5OWlFibnw8uryuoZ4xEBYkJuekligF84Ac4liUXpqbmlcSzBgLAK4NP6U="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6769010e-fc90-4294-ac90-76d31b4904b7"]]]]]], Appearance -> 
                   None, BoxID -> "6769010e-fc90-4294-ac90-76d31b4904b7", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.141799`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.141799`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/ChatGPTPluginKit.wl"], "Hash" -> 
                    "2e5a098c8103a7e7399bbbeeb9b8bc3d68108b1e4571efa9c8dc96eae\
f8f9b0f"|>, <|"File" -> File["Kernel/CopyButton.wl"], "Hash" -> 
                    "a588aeca21fab45ca0ad8e55f048dcc1d3888d27bfc7f2a9213b372f8\
5731739"|>, <|"File" -> File["Kernel/Deploy.wl"], "Hash" -> 
                    "0d1734d3268e2961ea5441a04ce0295458562d76eb4ed8f210a2c0d7b\
abb20ca"|>, <|"File" -> File["Kernel/Endpoint.wl"], "Hash" -> 
                    "3705326141125abd00d99370d1da9b4a8f7fc4ed435319ae8dfed1901\
19613c8"|>, <|"File" -> File["Kernel/Export.wl"], "Hash" -> 
                    "b9051af1b99986ff57c082e05be2bf89b32acdc526fd8e45472dd89f9\
93922f3"|>, <|"File" -> File["Kernel/Plugin.wl"], "Hash" -> 
                    "72b6ee63766fa5a643c54de82cd6aff97e3843abbda36fadac69e397a\
686714a"|>, <|"File" -> 
                    File["Documentation/English/Guides/ChatGPTPluginKit.nb"], 
                    "Hash" -> 
                    "c8b4061ad1453a9fd26f9577288bcc48592afe6022410841266468b58\
308011f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeployment.nb"], "Hash" -> 
                    "8d5c0693e4d135a622bf334924bee15f24b457d0f32a6ccd7e87d87af\
840d5fa"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeploy.nb"], "Hash" -> 
                    "4669edf0d66fa3ef657525b196cd436ae070993b66fcb0ba1b9a1f77f\
7a26f19"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeployment.nb"], "Hash" -> 
                    "e1bb568158c000daddce72d0b0d1b78abcea39a25dcbbce4cfadf619e\
5f156c0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeploy.nb"], "Hash" -> 
                    "3802ac1ce47d232bb106eacb0261ed787546318381f55c21df5d9981b\
ba3171c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginEndpoint.nb"], "Hash" -> 
                    "fa34dc5aa5bb52bf2355e1e1958e5d19d796d53a20380c93ff43f4aff\
2e46bad"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPlugin.nb"], "Hash" -> 
                    "654231d2fc5def2225d93bbf71b9c547ef963a54ef655f3545446e92a\
a4867ee"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
InstallChatGPTPlugin.nb"], "Hash" -> 
                    "b78d10157bfac906a93f1924ba5b966659a9e5f8eca42440e47fd948a\
8a6af88"|>, <|"File" -> File["Assets/default_icon.png"], "Hash" -> 
                    "bbabc95d6c92acfe05adb4017f0527b473bbd59d8f0b10c1ab93881ce\
8495aa7"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style["File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ChatGPTPluginKit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2e5a098c8103a7e7399bbbeeb9b8bc3d68108b1e4571efa9c8dc96eae\
f8f9b0f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/CopyButton.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a588aeca21fab45ca0ad8e55f048dcc1d3888d27bfc7f2a9213b372f8\
5731739", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Deploy.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0d1734d3268e2961ea5441a04ce0295458562d76eb4ed8f210a2c0d7b\
abb20ca", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoint.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3705326141125abd00d99370d1da9b4a8f7fc4ed435319ae8dfed1901\
19613c8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Export.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b9051af1b99986ff57c082e05be2bf89b32acdc526fd8e45472dd89f9\
93922f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plugin.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "72b6ee63766fa5a643c54de82cd6aff97e3843abbda36fadac69e397a\
686714a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/ChatGPTPluginKit.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c8b4061ad1453a9fd26f9577288bcc48592afe6022410841266468b58\
308011f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeployment.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8d5c0693e4d135a622bf334924bee15f24b457d0f32a6ccd7e87d87af\
840d5fa", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeploy.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4669edf0d66fa3ef657525b196cd436ae070993b66fcb0ba1b9a1f77f\
7a26f19", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeployment.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1bb568158c000daddce72d0b0d1b78abcea39a25dcbbce4cfadf619e\
5f156c0", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeploy.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3802ac1ce47d232bb106eacb0261ed787546318381f55c21df5d9981b\
ba3171c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginEndpoint.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fa34dc5aa5bb52bf2355e1e1958e5d19d796d53a20380c93ff43f4aff\
2e46bad", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPlugin.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "654231d2fc5def2225d93bbf71b9c547ef963a54ef655f3545446e92a\
a4867ee", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Tutorials/InstallChatGPTPlugin.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b78d10157bfac906a93f1924ba5b966659a9e5f8eca42440e47fd948a\
8a6af88", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Assets/default_icon.png"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bbabc95d6c92acfe05adb4017f0527b473bbd59d8f0b10c1ab93881ce\
8495aa7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.000446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.000446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPUtz20h6pvnQ05bs0czsTlIVhdGmkk1k4UkCU7tlS5Q0Vtbya\
ASNZ5KtrXEDaEgogwCDBmVrU6lKKrnuIdkc97BV+0NyyC/\
IafeQS3YPqVyyhxySQ6omXzceBEHSBkjZI0qkq0wK/fi+7u/d3ejPKpH5Y/\
Ryx3uFiVUl9w7cAPsdHwcosD0XHlslUjv2aAWrQipPbBJYt0ntBJ3CE21O6xoGJkRb0rrtNvIvHmNk\
aqUfWmWyunvhorZtHHpm18G0+\
e2keVnDAbl7ctHBBAfPvQ52NzZIdR85BMela3EpbuvY1AAdvLGhVY+h/\
wuos3SC2x0HHoYYhh2XycoRcrGGHWwEnt8Ps3IMaMRAqmTuE982+\
xvH33O0E1pUIws73SCIp2ExGlHY70f7e0e+fQ4oPN/\
3PTfYc81jTLyub2BtYX9vxw7aqEO01WhioNGnME7sU+QpKrvYQRfYJHdDEPtd16AzPmp2Kid+\
FyfDWNzudDDykQuTX3nqub2ShR1EsBZcONi6lRn7wt45croIZoYsbHcDrw0kNpLS2iEOzjxTWzzyMc\
xtYJ+nOt127FO3jd0gnlBSa2HKKfF3r+\
pBG51izf4xhhmbi2YsadUHt3pitzHxb7HP8qPkCTRcbnV9Hzp+Bghj7c4+zG8LdR5j+/\
SMolA98l4CzBJZ29aJ53QDnK5P7hyiU9e2bIPxcOtrIPf8vo/ajKhlMs+mh7Jvtf7rn/20Dh0u7No+\
8AwdM5Qff7LT8hzP9z9kn18+\
9N9jn9889L9kn189bH07GfGyFvh251P3wO10gx4Xh4V3W4A6IHaETNN2T7PFiwwthk+\
Gjsus5BD5p7ZL0mxMv1u3Wreyv0fjUusxe9xPKfmOZbucle2skEVNtZX6ETIcHGz7xhnMV12r1D9er\
2uL0M8utlDXCbT3I54/CHB723W9UJdo5d/+5Ocp3XFa3/qcAAdtGWc+dOx1zrC/\
dWoHW60zFHxydHLkdGHsPxj2QO/ajrn1hedYMElffZUt3+QfiPCvw/CsJ7qJojPJyJfqJzAUh/\
Lo2KMGaH19RypVWxAf8BLfVNXnWrlO6tocwYbnmkRbqGvhr7o2/1kXuYEdXPTYR7twA/Rq3/\
PbpAyKtn+oca3ViPoDQhzX0OaA3bttl6RmJ5TXyhNs9apVYLSDdYbokkX6CBQcDnCW41ciZCiGTEvk\
xmUQTn6EYqga8AQVw9xQW7eLA0up4EpGBa9pZ95LKqPuKTCtjwyqQrNTtPS0CzbPB9l/\
MVB2F2wOaBNQVjahuq3cozLrmvFDqE+yTd8yG5RPvM7VZYBVShPHdvGRR+\
zIzoYELrVKSa3QyH4jzkHL8cjYzkHWqsy8g5l3MIZ3UJt5BzfHO5hgqB/Ud+\
gUh5QOZcPzL8Yf9UCEqVX2bdDuEEcOj/S0v3hr3FHXlinsbf+0SzWaVvrRpU3baiQbhwjUDybB+\
BNWTTFM/Ks2JOJe6I+4N6nZ0C4I9P38KSCATSr5zwGrF6CVY4O1QcJge/v+\
prZ04IK1RM4uCtB2aVOr0rkh1krY7/btzZBSdFYYxT76AfZd7AzM+\
oOXDlR9jMiZ9kjAMuJUxVB4TkRN3BRVVdd1jHVVV3RDNBtQoOg8luQmD7OiGoppqA2MsKVYqs5Zg1D\
XYqhe5yI0mGl4SFYUhA0k8BbSJdlAHDIVLMsWJ0HPBm+\
KiqKYQlO3jKYlIFXgRV1sCpYiN0UesBuEtxrB28Udx7tIw+\
JMaCGZotBQsKA2eIxkSeIRJxmYE1RZkhW5IZjNBtYlbCqWwHNIMDizqSNdFzgDDcK6H8ECD6LjgeuX\
hiY2ORlAgWrgBRnpJseZqgoPTd5Eqi4hxWpaBgCSRFnkVYQV08Imr3I8D6iJhjJ6ZHuvOp7fB0tXOZ\
lHFq+rqqo0LEtuGpwiYE7WsaBbiqqLAjJMQxYaFsyuJEtNwTQV1QKEVEGwxNGwQiZJw2oKegPjhths\
NCwko4YkGrJkYkUwzAayLLWJRUUSYcpMJEINExkNFYtqEzWURpOXhswit+\
sZTJ6ZOMFknjo2Odv6pGubmAxyq6snuBiKLnENHpm8JItItUwYoCo3m4ICzGpIiqwKyMINThAkYFuJ\
FxoNqaHosiJyCkz0EG59MhyXY2xhcFIMfASySLa0i7buORncwEnsmiHX0Q7SeCqmbHANVcSSyYswZw\
JQRRQlVZBAtHjZgm8QKJOzgE4NwzCbWGmaShNZisSZsjVkzh5fCp5pHKUG0Mm0OJPSVcRWQ27KgqwD\
NxrAow2EuSYH/\
KJDsaFzOgJmQ7zVbFpNBLPOD5HET8bHcfg0Yl7XZdBAsmJwIE7glxkYOJnTQaj0poJ0AyNRRYJsGjr\
8lgxgP6vBq1i2eLlhcIMotiZFMY2eqHAgZjwAbpqCKOg6z4FmhMkCLYDNptKUpYbIK6LCW7JsCLxpy\
aASFBgUAl3GG4Po7Y2PXqKSUggCXSXQAgjJMI/\
AgoIoy5jHvCqDygXdYzbVhgmCJHAwFEMVLUsSLQmEWsBSQ0fmIILfHx/\
BNGINWRJE3hQsQzaxJQhAQeA03WoCk4F2aWJLbYigrSlXypYIqlqSGhiEG0mgVDAeRKw5HLETiGF8M\
Jlk68AFS+o4I1ECfjJ5jpfB8iBD5RoIpoOnAguTpzYaDVlFlK8UsF2SIEkcEN0yVUlBCgI1qAxR3x9\
uE4gKyZYZehNf2eAbPui4pz2QYGgMVTYbBozMsEB9IxP0G9+\
0OBksoNSEKTFlFUwTB6xl8EhXwToCvymSCkRtbmp3tx3He7lHF+\
VZyMJC5k1tOXIUtDPUoWHKH6Rcjci/0AyIVp/TDQLss2rb5c3YeSJl6Jb9B2NZH9X2B/\
hiF9yji1a5VRrSNJyMEUV0/\
BDpV8jvjer9id22wSUCBEYiH65MxGP8zmvwDENTVrFEfn9UxW0Id1klv8TC3CePLhHBXD2NnGvwSUM\
ipZjszeNofS9itXyjZoP+\
m799BLVXwzgCmweuZQMvXbRK4dpbPyFbK8Pr9pahaKXSiErRmkfPr6Uo0r2qFKogQp4B7VfSzwBjUg\
vX7QCne6miZyz4yTyEml0jicejaCacl94K/ACAeJpHQW6tAG9rlUMMvvitTW0BSHSC/\
FMctNZAAEPSRw8WwVWfieJMFKdAFCvTKINHKDjrDeHerk06bMEWSNXyum5AK60lT0NWCAuAhss0mk7\
XXKEPMpUWNAjAKBjSg3OXPovWIj03XfDYNk3s0kUDcog6pPK060A4tfh5x4RQng6lVSJcvujf6wadb\
nCwu7ERLxv8ab6GHUAWGt3qX3PI2fj8yCMbG2wpvkizs/\
GancJDQLVM7vQtmaQWUllvfK7ewAsFNRqW0WWh0Gu3qqQaLrTPkQorWh3YS6iwFSX4pnsK8L3YW/\
Ghq86HXpdg7xz7dNX5Ex91zmyDDK7bJ0vqrdprtjsAMc1ADjZ9kX3+5Z/\
7eu2JxAI8u3iCz7ET1fzNQ7pWf+Q5F6fQT2pHK/oOl9uZhpg/Zsgjp/U1+ztcsW99/\
fpaeTrK0ToXrMvrKN/QJiURPMzHhRuaYxt0R+AF2/\
p4kKuR4wG8x55jjqEcBgw7qYCxJdp87BqEoYFWZWw8bAcou21BoxjQW8O2n5ZZq1H7HdVwG5T9rrSq\
vQXwHUD/1AeVavYztsU+//XwdVtYbM+TzMdUeqO4Lu+dQ/PHyDUdtuG1wsbd24nrk+jIjt+\
OdETyZ4QN29Gie0x9+03/+A/0868PfZ59/v2h/+\
fs858PtfkntvuCws5sICbmb5mBbgGPvAB7RPXl7QMLJqWZi+\
7GGTZesJNhiG6DgQUvuJZs3bZqOXmsy2wWO/BVEEgxQ1XMMhUzSAXtUGFx/\
WYEPHbqp0orRY5fFB6FIc9MM71OM0UucqyZYo95pplmmunqaqZoTWG6NBNbk73mmilXqFNMQ0Wb0Im\
KSv6e6aiZjroqOqp3TqQMAVHEo1dbQw1FmS0zR8opPDGWXzslS6lXWkndfq1yynGy5SrTtDyCDaO/\
o1VRtnBYlLqt7102WeezZ4KHAhhNrMnPFk0zKZk3MR4pk9X/b4CisV90R+sgd9/32tu6d55XKoee/\
Jo+It6+rvI46dm7aSblTZTHgZOR00fA8nWVxUnPpk4zKW+\
iLA45OTx9JKxcV2mc9Oz2NJPyJkrjwMn66SNg9brK4qTvNkwzKW+\
yLCZvnkwfAWvXVRYnffdnmkl5E2Wx8JtZ00fguesqq5O+GzfNpLyJsnqpby5OH/Hnr6scT/\
ru6DST8ibK8aW92Tt9hF+4rjI86bvV00zKmyjDl/Xm+/\
TRffG6ivCkdw9MMylvoghfxs0Q00fzpesqvpPezTHNpLyJ4ns5N6dMH9WXr6sAT3p3zTST8iYK8GQ3\
C00fte9cV8Gd9G6naSblTRTccW/\
emj46372uIjvp3WfTTMqbKLKjbqabPjquXFuRnPBuwGkm5ZSKZILd6IwTS+yK+VfBIXa7Vt+d+/\
dbXrtDX6Hbe9XxMaHpJIiSb2aNXp8nvn16ClSskeoXZ7ZBrwqY+9wlqI0/I0K+\
3hxEgk8jWr0TbuhdoVTVGKJjD5t8L/8QW4Ot5bFaJ7mghlDQiq6umgyv8dkgAj/\
ewChBdoCwL6xSQqEi3Z06no4czfA9xznyEkl7m+\
8qUxhf2MFZ9qr1nEwM46d3vG3krL8RN4jB5JOwuBWtvFFEKuNGxcDZ5AlGVvjO8Ab5uBi4g1TjYmDP\
WJvwJjx2d902e6G/dogC46yQMkoNe3nbCbDvIpr8I/0udP+\
1DVCxOI6fFSV64VsDwtnbytUKwqXe1BVscsVG4l4UHknc5F2NRMzViqSve6ROTD69bIQ3j/\
bdFVlUv5QKDix9X2Xhttl7LQvp0DN0jun9mfT+gvJTj/p48/vIdro+/\
szKe0WHCR1AfJLKdjEmYfM5IzaJL8lLsAbTt+9jXJwB2a171MH9M892Uzeu0BtK4P9P/\
QjCmNNZWOiKTwGZAzhn9FrXMpmnfkCUvW4xvHKVjkur0uxm69Z8z8us7v1lFzz1MSxg6OhrtybrJGU\
LyvBzss76rIlWizKghZcB3QJK3AnfWNh7hY1ugNl9MI1cYML7YFLXw85uhRkRR7yLyKOoW6jVfNz2U\
qnW7lDxGJqoLRT4yiQCn9daUlrvtTvBxdu2lmNo09DtK+\
zzjONi5lJbUBfP1NZMbd0stVVGpvlmnUUWdrHDrr/3E/XFpLe44ioW5PUx8UCQ18/UveuMxwh+C/\
pQvRCs0ufGpZbUxgkctIVtYmDXzKgqrULd7uFSmg/h6LI56GUmnt+csKWo+2aRS9msy+\
CsxV08lLWWj/E59glen7HYdWCxNJnfNY9FmW/T3FWD/mZ8Nf18lUlq/\
GaOSnsM8SZONTGVPQb5iN4Htx4nVlgPvPWWY3d0D/nmINOUcvqkgRelkY77zck5BuBCwecN4gq7P+\
mRf8BGTp+/YdR5V6yTUY+xKHbpEzSUEfoIfwS8hXuUt931p/jleguzbFaXRvh8FDIAKsPn3VA+\
HDoj/WuH/U4of+kz1LMqcdVFes/zPmrbzoW2onld3wB3A7lk/cj3epvotBLLvHK3v+\
EXLFs8qR45yHZ71Xftc5tedRsmQOu1SBKxW333zf7v/9DPf/\
Tum53XOsigDJps6acTsPduoyXsFtphG/jlzAb+2xjmyhPbxTs+Ri/\
o3qXtZhPP9x0ayCYcWnrabevYp6c3yEBCe7pMS2kWJq3vFRfIP22Hi/CfJdvcqTML+\
TiX4KDbeWbjl2zNqVj6quqIXfXwwm8WzRUbBotOh6aXytdP0O7QxxtkboNua7BbyYs1j5fz89nzaCt\
knD2Q8utOJBQbbeQ7pvZyCo53rORdud3HsBktmbmPl+c+\
FuTotFCOxykhq42d7a2oBLO0fGMqw1CTvtWjLIMiN1YCvPdTjcAa+gRHBcupgsfat/\
6Iapp111t3PPcU++tUYYBl/\
ONxoPbnbSB3T3xEUzVE7268o4NAfSi815dZkOUgJdnciDl3TwKvs4N8BiIxhaWcprCNXmDmvJjQBXT\
wh6lWUdUwE6jW1WOLqQPNihnNWXaKb1Jvvon7S8W4P6JpIa24oXsBOOoxm0aZL2ukFvJevxM3d4w7D\
jJwzvCrzXLBJAeVNzayZ1yt21f24HGk8m/Rc43IfcE27/oyzFzhM9NAKNAGdGOEfDf3vvBGMtZ0+\
3zIdpItmWF9jLP9kvRTG+qZQih34Bo+ZgHZxGdei+6FF5nUQgch+84wFp77CNQExzbHIlXxEb7TI+\
N5Q09qb9nU++BDFSFxzjPOcf97Tsi1Wd0f6huaSbYDGtZvLWYVTiISo+uMNCDj6ushyyiZpd++\
NyRSCybLrMXg89RCSvnE660cDr6mkVpCaq0MWS/Juwg4bFT3Ipv2hY86HezveK/o8Y/\
oYfjX3IkHP8D1WyAf7IaR9fPom62x0GTfMVZRWnGYbcakRc111EfkbBfqI/\
JV4j6qzENLOil8EjLC5Bk9g18Qk/PkVH3Yx+Mx+\
jjr76N2wvznpJfiXnfYz8JO7OMkXY3lHIW9zafUV+WdHeRYBsq6JvLNfc9v542a3o6nnvAc0/\
vjCuGtOFdgOp1g/6iiQ732j+PiAgd1+98aWmz5GJ5+/\
jlQrVi4N7DKW8oUjV6R7QOzSndSz7H5DPk20qFdopuL80KcqD5GYXU3fDczQVKLa5TIt2LdxdIYggM\
VxEqs1NPuGnawETC0MsvC83umPbTgftiGjjlShyQ6Prakddtt5F+wQ3W9zHS1Y+\
8l1ay9VfLaCToNde3SCW5DYBHg8E9WQfudet/L4jtd2zGPMYFxkrpWqX+\
8XtcWoc9o7Nr7KbCplyPLv/3Jz1OwBvDQSn9lVcm9ZHZCWH01K1mMtTmta0AURJKxUl9IK/\
0QOl3tY6fUeGL2vct8OyAIxO4gB5mF9rW4FLd1kOfomH31GPq/yE5UKdk/XaFvhYYE8fx+\
mCG1IiBVMkd5q79x/D1HO6FFNWB3lpErrNdvFj/a34tZct8Hwu+5lChsc0Nb2N/\
bsYM26hBtNZoYaPQpjJP52v3CHYLY77pGWrizsxPvJESM2kssmnFDUgI6ILtDt+\
3i0tohDs48U1s88jHMLT1INsRXSTRqrYUpp8Tfw9yXvlc1s54MDbFP7DYm4cunt5YfJU/\
oOlu0b8e0kHaHpUNFncdsJ4jWO/JeshBybVsnntMNcLo+\
uXOITl3bsg3Gw62vgdzzzAsL2X2eTQ9l32r91z/7aR06XIgOa5yzUxpJwtUP2eeXD/332Oc3D/\
0v2edXD1vf7jl49LBs51P3wAW1NLCbFOmEI2TSoyfZ4te4k2m3Mc3G6R25gd25objUesx+\
O9FCY2ujhfohCDzQeGzdo232K7R1nWq0dQOiWweD1l8noVKxIA64eFC/ND26VD8BhBzKY+PrzXJ/\
35V4VrgHHMdJUuO5Vq6DWp4jGMJsk8B0aeGvujb/WRe5gR307NWidgFz8Ip6MqQMirJ/\
qIlVi6g3IISJJzYXHVtOzU70unV6i1arwGgH6wzRBYv0ESgooEaWY1ciZLJvdr8Zl0E4+\
RGKoWa3pt8INR2a5AX2mlfR1+jmcHg4vnWGaDJkutGe3Xp+3e4y2AzQBqBsbLp+\
E743H1KZdc34Ibvz/E7YoC8IvXIMsBrnuo0PsCTqr5Ty30Ij+\
Y0Y95bjkbGNe9YqzKz7zLqPYd2XZtZ9eqz7BEO9Vz9Er+x2t03vgJlswD3ocefl3/79T+l//\
3Rp6K7Wj3yPkhyb7NKaq43t/\
Xp4Rim8X8frusH4olDiLhGtIwzWxw1YxI1NbF46l985cE2QUL9tu3SLu1z/\
DnB6J4K6EMOvaysxp4MtDiz71dtn+PczHHR1yPJBXUvU2RVD7b269sIGR+KqTdnv1k/A7uHgC8+\
xwAo+AzcDAIY+8/gIVnnxAf/80pCsApKn42OzNmTJrj6L7mbR3Sy6Kx7d9SKNbOA0JC5Jda8tR/\
JGQz4nG5q9brtDK/0IqieL2/cHhXl7cVNbSBxOqJy4f/6//ff/2b/4+PsPtbnIN9zUVjL+\
2vatTe1uv0mjj1aznkeLPsza/TQwkrHZc1HlTe29IRaTdrc2zF7RgnsD1oI+\
XYnCgVhHan9SwLnf1D4arep9kX2++yjlPlzm7kvpr6+KMbhTP0IGTM/\
MCsyswMwKTK0VWEpJ8XZ1U7sT/r3tG2f2Odbw1ucEGGXLOPOhrdc5w/7WqR0M5H8dfMB06FakI7/\
6Klu+yT8Q4V+HQRtpde7/6md/d1pfeJSyOmsM1RDLcAXM8+lOeHjr75dvDV8wbQzmIXJtC4errtFe+\
3ZpM7q51loJJ3n79mZ4DXGC2EdRauuBxLkvnc3omttHApYRpyqGwnMiauKmqKq6rmOsq7qiG6LZgAJ\
F57EkN3nQ1aqhmIbawAhbiqXqnDUIdS2G6nUuwkXbNDwkKwrCBhJ4C+\
mSbCAOmQqWZYuToGeDN0VFUUyhqVtG0xKQKvCiLjYFS5GbIg/\
YDcKLE3hHaZBSsDgTWkimKDQULKgNHiNZknjESQbmBFWWZEVuCGazgXUJm4ol8BwSDM5s6kjXBc5Ag\
7DuR7CSnC0paGKTkwEUL/\
G8ICPd5DhTVeGhyZtI1SWkWE3LAECSKIu8irBiWtjkVY7nATXRUEaPbO9Vx/\
P7YE2apH40rCQNegJr0iTcg7AKp3lOcJk0yfAgLpeaxjbBc9IkqoN4XlqazgTHSZNEDuJ4WWkIExQn\
TYI3iOJlpFnrSfyESb4G0bucNFIJgpMmMRpEcLI0OQlikyZpGURs3DQgPZU6YRKKQZRGpTnogZz4kn\
2ymjrpB+A8+jLYSvoZ+G6kFvrg4OXcSxU9Y25M5iHU7BqJrxynNaDoJp7rEADxuEdBbq20SjQs//\
bI43eJVztbLJjqxYL/B6aztAg="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.891966127707362`16.34274404105077*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    True -> StyleBox[
                    "\"Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/christopher/git/ChatGPTPluginKit/ChatGPTPluginKit/\
build/"]], Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                "OEM6eJxLYyzmCEosd8qvSC1OYyxmC8oHsdNYill8MotLglncMnNSgxmj05iKu\
UNScwtyEktSQfKMUPl0Jf3Q4tSiYv3kjCIgP78gI7VIPz2zRN85I7HEPSAkIKc0PTPPG5tAUmlmTop\
+eH5OWlFibnw8uryuoZ4xEBYkJuekligF84Ac4liUXpqbmlcSzBgLAK4NP6U="}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "6769010e-fc90-4294-ac90-76d31b4904b7"]]]]]], Appearance -> 
             None, BoxID -> "6769010e-fc90-4294-ac90-76d31b4904b7"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.141799`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit-1.3.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"3.141799`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/christopher/git/ChatGPTPluginKit/\
ChatGPTPluginKit/build/Wolfram__ChatGPTPluginKit\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/ChatGPTPluginKit.wl"], "Hash" -> 
                    "2e5a098c8103a7e7399bbbeeb9b8bc3d68108b1e4571efa9c8dc96eae\
f8f9b0f"|>, <|"File" -> File["Kernel/CopyButton.wl"], "Hash" -> 
                    "a588aeca21fab45ca0ad8e55f048dcc1d3888d27bfc7f2a9213b372f8\
5731739"|>, <|"File" -> File["Kernel/Deploy.wl"], "Hash" -> 
                    "0d1734d3268e2961ea5441a04ce0295458562d76eb4ed8f210a2c0d7b\
abb20ca"|>, <|"File" -> File["Kernel/Endpoint.wl"], "Hash" -> 
                    "3705326141125abd00d99370d1da9b4a8f7fc4ed435319ae8dfed1901\
19613c8"|>, <|"File" -> File["Kernel/Export.wl"], "Hash" -> 
                    "b9051af1b99986ff57c082e05be2bf89b32acdc526fd8e45472dd89f9\
93922f3"|>, <|"File" -> File["Kernel/Plugin.wl"], "Hash" -> 
                    "72b6ee63766fa5a643c54de82cd6aff97e3843abbda36fadac69e397a\
686714a"|>, <|"File" -> 
                    File["Documentation/English/Guides/ChatGPTPluginKit.nb"], 
                    "Hash" -> 
                    "c8b4061ad1453a9fd26f9577288bcc48592afe6022410841266468b58\
308011f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeployment.nb"], "Hash" -> 
                    "8d5c0693e4d135a622bf334924bee15f24b457d0f32a6ccd7e87d87af\
840d5fa"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeploy.nb"], "Hash" -> 
                    "4669edf0d66fa3ef657525b196cd436ae070993b66fcb0ba1b9a1f77f\
7a26f19"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeployment.nb"], "Hash" -> 
                    "e1bb568158c000daddce72d0b0d1b78abcea39a25dcbbce4cfadf619e\
5f156c0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeploy.nb"], "Hash" -> 
                    "3802ac1ce47d232bb106eacb0261ed787546318381f55c21df5d9981b\
ba3171c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginEndpoint.nb"], "Hash" -> 
                    "fa34dc5aa5bb52bf2355e1e1958e5d19d796d53a20380c93ff43f4aff\
2e46bad"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ChatGPTPlugin.nb"], "Hash" -> 
                    "654231d2fc5def2225d93bbf71b9c547ef963a54ef655f3545446e92a\
a4867ee"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
InstallChatGPTPlugin.nb"], "Hash" -> 
                    "b78d10157bfac906a93f1924ba5b966659a9e5f8eca42440e47fd948a\
8a6af88"|>, <|"File" -> File["Assets/default_icon.png"], "Hash" -> 
                    "bbabc95d6c92acfe05adb4017f0527b473bbd59d8f0b10c1ab93881ce\
8495aa7"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/ChatGPTPluginKit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2e5a098c8103a7e7399bbbeeb9b8bc3d68108b1e4571efa9c8dc96eae\
f8f9b0f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/CopyButton.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a588aeca21fab45ca0ad8e55f048dcc1d3888d27bfc7f2a9213b372f8\
5731739", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Deploy.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0d1734d3268e2961ea5441a04ce0295458562d76eb4ed8f210a2c0d7b\
abb20ca", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoint.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3705326141125abd00d99370d1da9b4a8f7fc4ed435319ae8dfed1901\
19613c8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Export.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b9051af1b99986ff57c082e05be2bf89b32acdc526fd8e45472dd89f9\
93922f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plugin.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "72b6ee63766fa5a643c54de82cd6aff97e3843abbda36fadac69e397a\
686714a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/ChatGPTPluginKit.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c8b4061ad1453a9fd26f9577288bcc48592afe6022410841266468b58\
308011f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeployment.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8d5c0693e4d135a622bf334924bee15f24b457d0f32a6ccd7e87d87af\
840d5fa", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginCloudDeploy.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4669edf0d66fa3ef657525b196cd436ae070993b66fcb0ba1b9a1f77f\
7a26f19", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeployment.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1bb568158c000daddce72d0b0d1b78abcea39a25dcbbce4cfadf619e\
5f156c0", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginDeploy.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3802ac1ce47d232bb106eacb0261ed787546318381f55c21df5d9981b\
ba3171c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPluginEndpoint.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fa34dc5aa5bb52bf2355e1e1958e5d19d796d53a20380c93ff43f4aff\
2e46bad", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ChatGPTPlugin.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "654231d2fc5def2225d93bbf71b9c547ef963a54ef655f3545446e92a\
a4867ee", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Tutorials/InstallChatGPTPlugin.nb"]\
, 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b78d10157bfac906a93f1924ba5b966659a9e5f8eca42440e47fd948a\
8a6af88", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Assets/default_icon.png"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bbabc95d6c92acfe05adb4017f0527b473bbd59d8f0b10c1ab93881ce\
8495aa7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.000446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.000446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPUtz20h6pvnQ05bs0czsTlIVhdGmkk1k4UkCU7tlS5Q0VtbyaAS\
NZ5KtrXEDaEgogwCDBmVrU6lKKrnuIdkc97BV+0NyyC/\
IafeQS3YPqVyyhxySQ6omXzceBEHSBkjZI0qkq0wK/fi+7u/d3ejPKpH5Y/\
Ryx3uFiVUl9w7cAPsdHwcosD0XHlslUjv2aAWrQipPbBJYt0ntBJ3CE21O6xoGJkRb0rrtNvIvHmNk\
aqUfWmWyunvhorZtHHpm18G0+\
e2keVnDAbl7ctHBBAfPvQ52NzZIdR85BMela3EpbuvY1AAdvLGhVY+h/\
wuos3SC2x0HHoYYhh2XycoRcrGGHWwEnt8Ps3IMaMRAqmTuE982+\
xvH33O0E1pUIws73SCIp2ExGlHY70f7e0e+fQ4oPN/\
3PTfYc81jTLyub2BtYX9vxw7aqEO01WhioNGnME7sU+QpKrvYQRfYJHdDEPtd16AzPmp2Kid+\
FyfDWNzudDDykQuTX3nqub2ShR1EsBZcONi6lRn7wt45croIZoYsbHcDrw0kNpLS2iEOzjxTWzzyMc\
xtYJ+nOt127FO3jd0gnlBSa2HKKfF3r+\
pBG51izf4xhhmbi2YsadUHt3pitzHxb7HP8qPkCTRcbnV9Hzp+Bghj7c4+zG8LdR5j+/\
SMolA98l4CzBJZ29aJ53QDnK5P7hyiU9e2bIPxcOtrIPf8vo/ajKhlMs+mh7Jvtf7rn/20Dh0u7No+\
8AwdM5Qff7LT8hzP9z9kn18+\
9N9jn9889L9kn189bH07GfGyFvh251P3wO10gx4Xh4V3W4A6IHaETNN2T7PFiwwthk+\
Gjsus5BD5p7ZL0mxMv1u3Wreyv0fjUusxe9xPKfmOZbucle2skEVNtZX6ETIcHGz7xhnMV12r1D9er\
2uL0M8utlDXCbT3I54/CHB723W9UJdo5d/+5Ocp3XFa3/qcAAdtGWc+dOx1zrC/\
dWoHW60zFHxydHLkdGHsPxj2QO/ajrn1hedYMElffZUt3+QfiPCvw/CsJ7qJojPJyJfqJzAUh/\
Lo2KMGaH19RypVWxAf8BLfVNXnWrlO6tocwYbnmkRbqGvhr7o2/1kXuYEdXPTYR7twA/Rq3/\
PbpAyKtn+oca3ViPoDQhzX0OaA3bttl6RmJ5TXyhNs9apVYLSDdYbokkX6CBQcDnCW41ciZCiGTEvk\
xmUQTn6EYqga8AQVw9xQW7eLA0up4EpGBa9pZ95LKqPuKTCtjwyqQrNTtPS0CzbPB9l/\
MVB2F2wOaBNQVjahuq3cozLrmvFDqE+yTd8yG5RPvM7VZYBVShPHdvGRR+\
zIzoYELrVKSa3QyH4jzkHL8cjYzkHWqsy8g5l3MIZ3UJt5BzfHO5hgqB/Ud+\
gUh5QOZcPzL8Yf9UCEqVX2bdDuEEcOj/S0v3hr3FHXlinsbf+0SzWaVvrRpU3baiQbhwjUDybB+\
BNWTTFM/Ks2JOJe6I+4N6nZ0C4I9P38KSCATSr5zwGrF6CVY4O1QcJge/v+\
prZ04IK1RM4uCtB2aVOr0rkh1krY7/btzZBSdFYYxT76AfZd7AzM+\
oOXDlR9jMiZ9kjAMuJUxVB4TkRN3BRVVdd1jHVVV3RDNBtQoOg8luQmD7OiGoppqA2MsKVYqs5Zg1D\
XYqhe5yI0mGl4SFYUhA0k8BbSJdlAHDIVLMsWJ0HPBm+\
KiqKYQlO3jKYlIFXgRV1sCpYiN0UesBuEtxrB28Udx7tIw+\
JMaCGZotBQsKA2eIxkSeIRJxmYE1RZkhW5IZjNBtYlbCqWwHNIMDizqSNdFzgDDcK6H8ECD6LjgeuX\
hiY2ORlAgWrgBRnpJseZqgoPTd5Eqi4hxWpaBgCSRFnkVYQV08Imr3I8D6iJhjJ6ZHuvOp7fB0tXOZ\
lHFq+rqqo0LEtuGpwiYE7WsaBbiqqLAjJMQxYaFsyuJEtNwTQV1QKEVEGwxNGwQiZJw2oKegPjhths\
NCwko4YkGrJkYkUwzAayLLWJRUUSYcpMJEINExkNFYtqEzWURpOXhswit+\
sZTJ6ZOMFknjo2Odv6pGubmAxyq6snuBiKLnENHpm8JItItUwYoCo3m4ICzGpIiqwKyMINThAkYFuJ\
FxoNqaHosiJyCkz0EG59MhyXY2xhcFIMfASySLa0i7buORncwEnsmiHX0Q7SeCqmbHANVcSSyYswZw\
JQRRQlVZBAtHjZgm8QKJOzgE4NwzCbWGmaShNZisSZsjVkzh5fCp5pHKUG0Mm0OJPSVcRWQ27KgqwD\
NxrAow2EuSYH/\
KJDsaFzOgJmQ7zVbFpNBLPOD5HET8bHcfg0Yl7XZdBAsmJwIE7glxkYOJnTQaj0poJ0AyNRRYJsGjr\
8lgxgP6vBq1i2eLlhcIMotiZFMY2eqHAgZjwAbpqCKOg6z4FmhMkCLYDNptKUpYbIK6LCW7JsCLxpy\
aASFBgUAl3GG4Po7Y2PXqKSUggCXSXQAgjJMI/\
AgoIoy5jHvCqDygXdYzbVhgmCJHAwFEMVLUsSLQmEWsBSQ0fmIILfHx/\
BNGINWRJE3hQsQzaxJQhAQeA03WoCk4F2aWJLbYigrSlXypYIqlqSGhiEG0mgVDAeRKw5HLETiGF8M\
Jlk68AFS+o4I1ECfjJ5jpfB8iBD5RoIpoOnAguTpzYaDVlFlK8UsF2SIEkcEN0yVUlBCgI1qAxR3x9\
uE4gKyZYZehNf2eAbPui4pz2QYGgMVTYbBozMsEB9IxP0G9+\
0OBksoNSEKTFlFUwTB6xl8EhXwToCvymSCkRtbmp3tx3He7lHF+\
VZyMJC5k1tOXIUtDPUoWHKH6Rcjci/0AyIVp/TDQLss2rb5c3YeSJl6Jb9B2NZH9X2B/\
hiF9yji1a5VRrSNJyMEUV0/\
BDpV8jvjer9id22wSUCBEYiH65MxGP8zmvwDENTVrFEfn9UxW0Id1klv8TC3CePLhHBXD2NnGvwSUM\
ipZjszeNofS9itXyjZoP+\
m799BLVXwzgCmweuZQMvXbRK4dpbPyFbK8Pr9pahaKXSiErRmkfPr6Uo0r2qFKogQp4B7VfSzwBjUg\
vX7QCne6miZyz4yTyEml0jicejaCacl94K/ACAeJpHQW6tAG9rlUMMvvitTW0BSHSC/\
FMctNZAAEPSRw8WwVWfieJMFKdAFCvTKINHKDjrDeHerk06bMEWSNXyum5AK60lT0NWCAuAhss0mk7\
XXKEPMpUWNAjAKBjSg3OXPovWIj03XfDYNk3s0kUDcog6pPK060A4tfh5x4RQng6lVSJcvujf6wadb\
nCwu7ERLxv8ab6GHUAWGt3qX3PI2fj8yCMbG2wpvkizs/\
GancJDQLVM7vQtmaQWUllvfK7ewAsFNRqW0WWh0Gu3qqQaLrTPkQorWh3YS6iwFSX4pnsK8L3YW/\
Ghq86HXpdg7xz7dNX5Ex91zmyDDK7bJ0vqrdprtjsAMc1ADjZ9kX3+5Z/\
7eu2JxAI8u3iCz7ET1fzNQ7pWf+Q5F6fQT2pHK/oOl9uZhpg/Zsgjp/U1+ztcsW99/\
fpaeTrK0ToXrMvrKN/QJiURPMzHhRuaYxt0R+AF2/\
p4kKuR4wG8x55jjqEcBgw7qYCxJdp87BqEoYFWZWw8bAcou21BoxjQW8O2n5ZZq1H7HdVwG5T9rrSq\
vQXwHUD/1AeVavYztsU+//XwdVtYbM+TzMdUeqO4Lu+dQ/PHyDUdtuG1wsbd24nrk+jIjt+\
OdETyZ4QN29Gie0x9+03/+A/0868PfZ59/v2h/+\
fs858PtfkntvuCws5sICbmb5mBbgGPvAB7RPXl7QMLJqWZi+\
7GGTZesJNhiG6DgQUvuJZs3bZqOXmsy2wWO/BVEEgxQ1XMMhUzSAXtUGFx/\
WYEPHbqp0orRY5fFB6FIc9MM71OM0UucqyZYo95pplmmunqaqZoTWG6NBNbk73mmilXqFNMQ0Wb0Im\
KSv6e6aiZjroqOqp3TqQMAVHEo1dbQw1FmS0zR8opPDGWXzslS6lXWkndfq1yynGy5SrTtDyCDaO/\
o1VRtnBYlLqt7102WeezZ4KHAhhNrMnPFk0zKZk3MR4pk9X/b4CisV90R+sgd9/32tu6d55XKoee/\
Jo+It6+rvI46dm7aSblTZTHgZOR00fA8nWVxUnPpk4zKW+\
iLA45OTx9JKxcV2mc9Oz2NJPyJkrjwMn66SNg9brK4qTvNkwzKW+\
yLCZvnkwfAWvXVRYnffdnmkl5E2Wx8JtZ00fguesqq5O+GzfNpLyJsnqpby5OH/Hnr6scT/\
ru6DST8ibK8aW92Tt9hF+4rjI86bvV00zKmyjDl/Xm+/\
TRffG6ivCkdw9MMylvoghfxs0Q00fzpesqvpPezTHNpLyJ4ns5N6dMH9WXr6sAT3p3zTST8iYK8GQ3\
C00fte9cV8Gd9G6naSblTRTccW/\
emj46372uIjvp3WfTTMqbKLKjbqabPjquXFuRnPBuwGkm5ZSKZILd6IwTS+yK+VfBIXa7Vt+d+/\
dbXrtDX6Hbe9XxMaHpJIiSb2aNXp8nvn16ClSskeoXZ7ZBrwqY+9wlqI0/I0K+\
3hxEgk8jWr0TbuhdoVTVGKJjD5t8L/8QW4Ot5bFaJ7mghlDQiq6umgyv8dkgAj/\
ewChBdoCwL6xSQqEi3Z06no4czfA9xznyEkl7m+\
8qUxhf2MFZ9qr1nEwM46d3vG3krL8RN4jB5JOwuBWtvFFEKuNGxcDZ5AlGVvjO8Ab5uBi4g1TjYmDP\
WJvwJjx2d902e6G/dogC46yQMkoNe3nbCbDvIpr8I/0udP+\
1DVCxOI6fFSV64VsDwtnbytUKwqXe1BVscsVG4l4UHknc5F2NRMzViqSve6ROTD69bIQ3j/\
bdFVlUv5QKDix9X2Xhttl7LQvp0DN0jun9mfT+gvJTj/p48/vIdro+/\
szKe0WHCR1AfJLKdjEmYfM5IzaJL8lLsAbTt+9jXJwB2a171MH9M892Uzeu0BtK4P9P/\
QjCmNNZWOiKTwGZAzhn9FrXMpmnfkCUvW4xvHKVjkur0uxm69Z8z8us7v1lFzz1MSxg6OhrtybrJGU\
LyvBzss76rIlWizKghZcB3QJK3AnfWNh7hY1ugNl9MI1cYML7YFLXw85uhRkRR7yLyKOoW6jVfNz2U\
qnW7lDxGJqoLRT4yiQCn9daUlrvtTvBxdu2lmNo09DtK+\
zzjONi5lJbUBfP1NZMbd0stVVGpvlmnUUWdrHDrr/3E/XFpLe44ioW5PUx8UCQ18/UveuMxwh+C/\
pQvRCs0ufGpZbUxgkctIVtYmDXzKgqrULd7uFSmg/h6LI56GUmnt+csKWo+2aRS9msy+\
CsxV08lLWWj/E59glen7HYdWCxNJnfNY9FmW/T3FWD/mZ8Nf18lUlq/\
GaOSnsM8SZONTGVPQb5iN4Htx4nVlgPvPWWY3d0D/nmINOUcvqkgRelkY77zck5BuBCwecN4gq7P+\
mRf8BGTp+/YdR5V6yTUY+xKHbpEzSUEfoIfwS8hXuUt931p/jleguzbFaXRvh8FDIAKsPn3VA+\
HDoj/WuH/U4of+kz1LMqcdVFes/zPmrbzoW2onld3wB3A7lk/cj3epvotBLLvHK3v+\
EXLFs8qR45yHZ71Xftc5tedRsmQOu1SBKxW333zf7v/9DPf/\
Tum53XOsigDJps6acTsPduoyXsFtphG/jlzAb+2xjmyhPbxTs+Ri/\
o3qXtZhPP9x0ayCYcWnrabevYp6c3yEBCe7pMS2kWJq3vFRfIP22Hi/CfJdvcqTML+\
TiX4KDbeWbjl2zNqVj6quqIXfXwwm8WzRUbBotOh6aXytdP0O7QxxtkboNua7BbyYs1j5fz89nzaCt\
knD2Q8utOJBQbbeQ7pvZyCo53rORdud3HsBktmbmPl+c+\
FuTotFCOxykhq42d7a2oBLO0fGMqw1CTvtWjLIMiN1YCvPdTjcAa+gRHBcupgsfat/\
6Iapp111t3PPcU++tUYYBl/\
ONxoPbnbSB3T3xEUzVE7268o4NAfSi815dZkOUgJdnciDl3TwKvs4N8BiIxhaWcprCNXmDmvJjQBXT\
wh6lWUdUwE6jW1WOLqQPNihnNWXaKb1Jvvon7S8W4P6JpIa24oXsBOOoxm0aZL2ukFvJevxM3d4w7D\
jJwzvCrzXLBJAeVNzayZ1yt21f24HGk8m/Rc43IfcE27/oyzFzhM9NAKNAGdGOEfDf3vvBGMtZ0+\
3zIdpItmWF9jLP9kvRTG+qZQih34Bo+ZgHZxGdei+6FF5nUQgch+84wFp77CNQExzbHIlXxEb7TI+\
N5Q09qb9nU++BDFSFxzjPOcf97Tsi1Wd0f6huaSbYDGtZvLWYVTiISo+uMNCDj6ushyyiZpd++\
NyRSCybLrMXg89RCSvnE660cDr6mkVpCaq0MWS/Juwg4bFT3Ipv2hY86HezveK/o8Y/\
oYfjX3IkHP8D1WyAf7IaR9fPom62x0GTfMVZRWnGYbcakRc111EfkbBfqI/\
JV4j6qzENLOil8EjLC5Bk9g18Qk/PkVH3Yx+Mx+\
jjr76N2wvznpJfiXnfYz8JO7OMkXY3lHIW9zafUV+WdHeRYBsq6JvLNfc9v542a3o6nnvAc0/\
vjCuGtOFdgOp1g/6iiQ732j+PiAgd1+98aWmz5GJ5+/\
jlQrVi4N7DKW8oUjV6R7QOzSndSz7H5DPk20qFdopuL80KcqD5GYXU3fDczQVKLa5TIt2LdxdIYggM\
VxEqs1NPuGnawETC0MsvC83umPbTgftiGjjlShyQ6Prakddtt5F+wQ3W9zHS1Y+\
8l1ay9VfLaCToNde3SCW5DYBHg8E9WQfudet/L4jtd2zGPMYFxkrpWqX+\
8XtcWoc9o7Nr7KbCplyPLv/3Jz1OwBvDQSn9lVcm9ZHZCWH01K1mMtTmta0AURJKxUl9IK/\
0QOl3tY6fUeGL2vct8OyAIxO4gB5mF9rW4FLd1kOfomH31GPq/yE5UKdk/XaFvhYYE8fx+\
mCG1IiBVMkd5q79x/D1HO6FFNWB3lpErrNdvFj/a34tZct8Hwu+5lChsc0Nb2N/\
bsYM26hBtNZoYaPQpjJP52v3CHYLY77pGWrizsxPvJESM2kssmnFDUgI6ILtDt+\
3i0tohDs48U1s88jHMLT1INsRXSTRqrYUpp8Tfw9yXvlc1s54MDbFP7DYm4cunt5YfJU/\
oOlu0b8e0kHaHpUNFncdsJ4jWO/JeshBybVsnntMNcLo+\
uXOITl3bsg3Gw62vgdzzzAsL2X2eTQ9l32r91z/7aR06XIgOa5yzUxpJwtUP2eeXD/332Oc3D/\
0v2edXD1vf7jl49LBs51P3wAW1NLCbFOmEI2TSoyfZ4te4k2m3Mc3G6R25gd25objUesx+\
O9FCY2ujhfohCDzQeGzdo232K7R1nWq0dQOiWweD1l8noVKxIA64eFC/ND26VD8BhBzKY+PrzXJ/\
35V4VrgHHMdJUuO5Vq6DWp4jGMJsk8B0aeGvujb/WRe5gR307NWidgFz8Ip6MqQMirJ/\
qIlVi6g3IISJJzYXHVtOzU70unV6i1arwGgH6wzRBYv0ESgooEaWY1ciZLJvdr8Zl0E4+\
RGKoWa3pt8INR2a5AX2mlfR1+jmcHg4vnWGaDJkutGe3Xp+3e4y2AzQBqBsbLp+\
E743H1KZdc34Ibvz/E7YoC8IvXIMsBrnuo0PsCTqr5Ty30Ij+\
Y0Y95bjkbGNe9YqzKz7zLqPYd2XZtZ9eqz7BEO9Vz9Er+x2t03vgJlswD3ocefl3/79T+l//\
3Rp6K7Wj3yPkhyb7NKaq43t/\
Xp4Rim8X8frusH4olDiLhGtIwzWxw1YxI1NbF46l985cE2QUL9tu3SLu1z/\
DnB6J4K6EMOvaysxp4MtDiz71dtn+PczHHR1yPJBXUvU2RVD7b269sIGR+KqTdnv1k/A7uHgC8+\
xwAo+AzcDAIY+8/gIVnnxAf/80pCsApKn42OzNmTJrj6L7mbR3Sy6Kx7d9SKNbOA0JC5Jda8tR/\
JGQz4nG5q9brtDK/0IqieL2/cHhXl7cVNbSBxOqJy4f/6//ff/2b/4+PsPtbnIN9zUVjL+\
2vatTe1uv0mjj1aznkeLPsza/TQwkrHZc1HlTe29IRaTdrc2zF7RgnsD1oI+\
XYnCgVhHan9SwLnf1D4arep9kX2++yjlPlzm7kvpr6+KMbhTP0IGTM/\
MCsyswMwKTK0VWEpJ8XZ1U7sT/r3tG2f2Odbw1ucEGGXLOPOhrdc5w/7WqR0M5H8dfMB06FakI7/\
6Klu+yT8Q4V+HQRtpde7/6md/d1pfeJSyOmsM1RDLcAXM8+lOeHjr75dvDV8wbQzmIXJtC4errtFe+\
3ZpM7q51loJJ3n79mZ4DXGC2EdRauuBxLkvnc3omttHApYRpyqGwnMiauKmqKq6rmOsq7qiG6LZgAJ\
F57EkN3nQ1aqhmIbawAhbiqXqnDUIdS2G6nUuwkXbNDwkKwrCBhJ4C+\
mSbCAOmQqWZYuToGeDN0VFUUyhqVtG0xKQKvCiLjYFS5GbIg/\
YDcKLE3hHaZBSsDgTWkimKDQULKgNHiNZknjESQbmBFWWZEVuCGazgXUJm4ol8BwSDM5s6kjXBc5Ag\
7DuR7CSnC0paGKTkwEUL/\
G8ICPd5DhTVeGhyZtI1SWkWE3LAECSKIu8irBiWtjkVY7nATXRUEaPbO9Vx/\
P7YE2apH40rCQNegJr0iTcg7AKp3lOcJk0yfAgLpeaxjbBc9IkqoN4XlqazgTHSZNEDuJ4WWkIExQn\
TYI3iOJlpFnrSfyESb4G0bucNFIJgpMmMRpEcLI0OQlikyZpGURs3DQgPZU6YRKKQZRGpTnogZz4kn\
2ymjrpB+A8+jLYSvoZ+G6kFvrg4OXcSxU9Y25M5iHU7BqJrxynNaDoJp7rEADxuEdBbq20SjQs//\
bI43eJVztbLJjqxYL/B6aztAg="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891966210504061`16.34274405028984*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell has excessive height. Consider reducing the \
size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "9b98e6b1-e967-4494-bf92-c5d41049f030", 1822574373, 
                    "LargeCellBounds/CellHeight", <|
                    "Type" -> "height", "CellID" -> 1822574373, "CellObject" -> 
                    CellObject[
                    "9632ecf7-afa9-422e-926c-8cb13c53fac8", 
                    "b3c9d4c2-88a8-43ad-9b41-bd41970ef641"], 
                    "CellSerialNumber" -> 8165, "CellSize" -> {298, 531}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "9632ecf7-afa9-422e-926c-8cb13c53fac8", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 53, "Rendering" -> 
                    False, "Style" -> "ExampleImage", "TemplateGroup" -> 
                    False, "TemplateGroupName" -> None, "Area" -> 500000., 
                    "Height" -> 500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1822574373]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell has excessive height. Consider reducing the \
size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1c96e600-4a98-42ac-b824-cdb3b2f426e5", 1491546085, 
                    "LargeCellBounds/CellHeight", <|
                    "Type" -> "height", "CellID" -> 1491546085, "CellObject" -> 
                    CellObject[
                    "a066330f-e087-46ff-95e8-20a72804c260", 
                    "66ad74cc-780e-47f8-b7b8-8aeeeab3b734"], 
                    "CellSerialNumber" -> 8178, "CellSize" -> {316, 546}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "a066330f-e087-46ff-95e8-20a72804c260", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 65, "Rendering" -> 
                    False, "Style" -> "ExampleImage", "TemplateGroup" -> 
                    False, "TemplateGroupName" -> None, "Area" -> 500000., 
                    "Height" -> 500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1491546085]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "3f16ef12-3317-45d4-883b-af7053fd6a82"]]]]]], Appearance -> 
                   None, BoxID -> "3f16ef12-3317-45d4-883b-af7053fd6a82", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.891966210504061`16.34274405028984*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 StyleBox[
                  ActionMenuBox[
                   TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]}},
                     AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}}, "Highlighted"], {
                   TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell has excessive height. Consider reducing the \
size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "9b98e6b1-e967-4494-bf92-c5d41049f030", 1822574373, 
                    "LargeCellBounds/CellHeight", <|
                    "Type" -> "height", "CellID" -> 1822574373, "CellObject" -> 
                    CellObject[
                    "9632ecf7-afa9-422e-926c-8cb13c53fac8", 
                    "b3c9d4c2-88a8-43ad-9b41-bd41970ef641"], 
                    "CellSerialNumber" -> 8165, "CellSize" -> {298, 531}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "9632ecf7-afa9-422e-926c-8cb13c53fac8", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 53, "Rendering" -> 
                    False, "Style" -> "ExampleImage", "TemplateGroup" -> 
                    False, "TemplateGroupName" -> None, "Area" -> 500000., 
                    "Height" -> 500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1822574373]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell has excessive height. Consider reducing the \
size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1c96e600-4a98-42ac-b824-cdb3b2f426e5", 1491546085, 
                    "LargeCellBounds/CellHeight", <|
                    "Type" -> "height", "CellID" -> 1491546085, "CellObject" -> 
                    CellObject[
                    "a066330f-e087-46ff-95e8-20a72804c260", 
                    "66ad74cc-780e-47f8-b7b8-8aeeeab3b734"], 
                    "CellSerialNumber" -> 8178, "CellSize" -> {316, 546}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "a066330f-e087-46ff-95e8-20a72804c260", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 65, "Rendering" -> 
                    False, "Style" -> "ExampleImage", "TemplateGroup" -> 
                    False, "TemplateGroupName" -> None, "Area" -> 500000., 
                    "Height" -> 500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    1491546085]; Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "3f16ef12-3317-45d4-883b-af7053fd6a82"]]]]]], Appearance -> 
                   None, BoxID -> "3f16ef12-3317-45d4-883b-af7053fd6a82", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ab885183-1b32-478a-9b3e-dc7ccadc8029\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ab885183-1b32-478a-9b3e-dc7ccadc8029\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.3.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2323\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWE9vG0UUj+\
O1HTuu67ZBCE7WKgJxcNXEoKZcgrOJ20hNa3ncFoSQOt59tkfszq5mZpOa78CJKwe+FZzhA/AR4M3+\
s7NOpeAEwcF7WWvfv9+8ee/9njwuyK0BvTjy34Ecl+S9U65ABAIUVczn+\
HlckOWBrxXGhjSeM6nGm7I8pBP8QioktG2QkmyT0POomD0D6pDCt+\
OibB7POPWYfeY7oQvafDMzLxJQsjGcBSBBvfUD4Lu7stSjroRUupNKwRuBQxAO7O6S0gD9z1Bnewhe\
4OLHGGHsuCjv9ikHAi7YyheXYxoDhJEGKcnKU8Gcy8bpu6KdaFFZVo9CpdI01JITxX4/\
7p30BTtHCG97wufqhDsDkH4obCDV3skRUx4NJGkmiUGjl3hOEBq8hnIMLp2BIxtxiF7IbZ3x92XHGI\
oQsmPUukEAVFCOyTde+\
HwuqR5RCUTNXBhv5M5ePTmnbkgxM7LaDZXv4RXbmbR8BmrqO6TWF4C5Vex8wWnXZRPuAVdpQmXZAl0\
p6XuueurRCRD2A2DGKknGMqtLcUtD5oEUG9FT/yr7goZ1KxQCHb9GwEDu9DC/Fg2eAZtMNYRS37/\
AmAW50x1J3w0VLOrLO2d0wtmY2VENW3/hdW/1BPWiSy3KrSg9unxL5u8//2Siw+oxE1gz+\
swoHzw9snzXF+LD6Pn1UDyInj8OxdfR89uh9VF24jpRggUv+\
SkPQjWv4ljYsBA6AutTx2F8khfXIlgRntw91iPJGRUTxuViGeu3tWFt5H+/H0t5Xuypn0L2Tnu7mO/\
tfJMlpqRhpmWuK9QkhvllyyQ1dHMMYxq6inyQlPypAq/LuR+\
PElL888dfFkbHltmntgvKzGaH1r8JsrL56tXp8eqIPjHp6ODgi72DTntv1Nlvf/\
74gLafjDrQduzHtk0d++DR/\
pMc3jTzzSTFS52SapAK1lTocblwxLgpjOcwnqsZiHtZ54qGrelPOEVAQb6s7iZgNMKoFa+\
NZTnO9QGlUUlAbV3r145qbf7zYAtzzsjNuR0y9S90I/CJNcUhaes5lU/R9osQiUVgg32/\
JGvgYMeWxYnApB4gxfktR65nXNF3cdPmTf/lMigO/eD/WwBNfScu49D3JUvILL7gglXItGIm+\
08Y2HJ9uTID50f3moLXFLwCBVfWFHzLFHwDvFXzNTYQAlkdcsXce9h52Lk9TA2ThCOPSQ3rJrksm/\
ud/VvE1TTjDrUERPFWRxYxwC3e4RnyME681QF9Zn6D7dQKom5oiaS5Wky2RoAjoxWEI5fJKTi3l82S\
ifLVEe9kI2BeLOvNdL2ZrjfTFTbT+ZaUX/qu2KkW3JN60m96XXXza+WDS3+\
AxWtRuhCSwneonv17dn+5mbvlNqkv0jwpx2TdJobmWLJ7HaZsk0pCcKQU0VRbY56zCzE0R7RJ4/\
Joj3d0NE4mK/n0mvNxXgHxn3B05C5VwNaJw64U3I9t3jA1TVY2GQP5G6je90k="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"Wolfram/ChatGPTPluginKit\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztW31sFMcVv/OdbfwJJm7SkrQ6LVaVVjl/gj+\
Qmjv77LOtGDh57JAESL3em7MX7+0uM3s+\
H5WQ20SV0qSEFmho2hDTlirlj4ogVSLfpmmVVlFTidLWKm1jhxAVpQFUJSlBadOZ2Z27vbUtzuBC/\
rgndOM382be771583HzuJgbr+\
gXkx3aBMSxQlzVqxoQ6QgaoiFrKqmOuXFRv0YFYl7s7ZOxESvARQPiCKkBlf0Qawkkwc3DO6BkgDKQ\
iMdFlOqBYhS4t8Y8eFVnShXjsrRRiyYUSEcpSI/\
iAdDAlQMpHWJoDGk6VGtqcGFYVDDkrdW8FcaHYRQQVLCmBhT2k/\
FTRKZsAMZ1hVSaQM2BPXhlRFQhgAqBpKFsnd5+\
AoMrKcTF3UiOZnfmZTEdhDYV4ZKOhGFwb5RaFpnjrgl3RZA8TiAMhZGmGl1qlPsElIS7OmQjLuoYrL\
IcQzptJnZCRMFTKJ1QEVMwiitNFeGEKlHHL+\
Yd7wBKwLQZpe26DkUkqhLE3k2ammkp6RAxBEZKgTGXw/\
aSrnFRSYjEM7ikPWFocTLTUrq1aCM0RrUoKI0gSHxryOO2QdsVeUSNQ9XgDsVFIUgDhpcZ0d64OAKB\
vAsSjxVbHkv3ytJbOCDHIUYuRuXBdA3pWB5KIEQGvpcAhqAiTPwbEvUeKI+\
MUgiFES1JdLpxdfsw1pSEAe3yuGKjOKLKMVlioRz6hMzpCuYSc+\
bKupGoj8oSpmyV5SQ3LhkgdWMqxBh9rfrn3XO7ooF0+\
JC1EhYlGNZQPF1HBu3v7ghpiobQKy9TuhBA9YxmA+hzjH4boF7YrIuSbKQsSy/\
RYSvDsqLAKIE9Dm0r7KSroNDjKnC53Jl/\
i9QVOevM6gpa7fZ4COf4dLBplWsLigoYsCk5SD5nC37WHLTx255+\
aAct9X3TKuNRKs7khKokLdWdfmznZ167b3vQOV5ayan37rZ32qsEJPugLtfQqF0p59OgrP5pJfbxiJ\
Ji0xIX07zn0I9TJrKT47R8w3UCm5b4mCUf792jBm3yd7x8cMwE9aaU1X7+w3Z7/\
6zxidI7CpiSR5j5e3r+YwlFTKGerl20vLL7C4yv/S5gfNHX50btvMt1bNQu7zoVb8ka7/\
W59QzEfy9gy/J1tNy0/3QWnwZp8fd5prbZ+Ylf+LfZx5so+9VWu76Db39rqx3PZM2WtbQce/E3jB/\
qRgLTO/w2431rXILdKZw//tTtdn7yQKhFtvfn/uHjc/9x/ZGzh5N2fLPCs0k7fs5z+\
zjP7ec89w8fj/sva75yXufHn6U0F0DfO0DpXABd+YjS+RzX+UmXx+3NWrgn13rchWbUTnYxYI//\
0XTs8fceYA678qWonQ/uOTIYtMlPPvfxg0Fn/5wNqmZ0OoA+z+hvAbR/H6Wz12/\
Q5JmZmN0gznPAs96Ht9sN4jw3OKt/zgZ9dJnSPwLohz+\
g9G4APcjowvUbNHWmlYXa1OWn2b4wG25iAC898D4LZd4++eseyGYE3NqzUDvrn7NBtzJ6J4D+\
cIrSW8sYcpMXgkMU0PRf5hLMoKP3s5n6yeSj2M6vOvwS2525/\
DNfXr8z6Oyfs0GHnqJEIu02Rn9ezpC7+HfdbhDnOeAp4YhsN4jz3OCs/jkbtI3RPwPo+econQ+\
g3YyWIeRmY5+wGQi++NoEA1z1GANYM7yTHWm8/c7y2w1mwNF3hhZqZ/\
1zNmg9o3M2gxoZvbUMM3SgiZ2xszvN4yMyfMicmReCUTvvOvQvtilw+\
enSDV8NOvvnbJC5F5wJIMDobMBaVX+\
6foOCye5xu0Gc54CPvdmB7AZxnhuc1T9ng7YyIpvb3YzIxfPJ71NajnPo8CU2A8FbjrBdbm/\
rB2wtuba7zSuZ1T790+1sl5tdPTO2UDvrf0NDzpMxiFrjpdZMj5vunXziMkNX/\
8jDzP0nPujXgrb2vaHTO4NO+ZuOPh39vofZyRE5sY2hjER/D+yrwfVQTzjolL+\
hl5oF0Vc8at5MvvIEQzv9zd+ZB/pjncyaZ77xOuOnn3zDvMnY5W86+llx7n6Kxnex1oyUV3/\
EUNZ3z7BI8p0+yvgJ/Cqbkyz5G3q6L4R+ancL8+X0zHm6eqfOrWti/LHB75j7bcWWTbSc+\
etL7OTLkr/56D+EDOWQsY+WBytLRhiv//tdthftf/\
9OVvbor5jo7fKxYse7R1k71qFk9NPXgJA7Xe1tnyDf9dOvTtbDSocojY0gLaFGHQ8rhWEkxp2vLaWs\
ckCWxrDzHebT+A6yALj5iEJr03IVIVEahfy5xOmrcmAgWd+s9qp6wuCNRZmXNU9mHqxo4u+JmRb+\
nrhC2EQcucEngM9YD2a9Boy3q6pmvkcCz8VvT2XknS+\
A1oBgjbBFU2JkTupCo6LRHRmIKIkRWb1HNgTgEXyCs58FDXiFX74gAGnUMHS8oa4OWQ95uDZpDicpW\
iJaK2nxuogoKdDoh7qGZUNDqYxsnTjc2rq+obXJ3zDc1Ohf19Iq+tuGm6A/KrVIkhiVWusb2+\
pAeU9Kh0iR1bHB/j5QSjzSCWNiQsm8oVLLba4pEARnUy7+pO+\
HOfuTyJuGZasiUnuez0nfSqETYomEAx08d7V1QkdCVqI+\
nU0T9sU05LNmziervh0JbPhEXwwmfcRhEC+\
CjkXjKivs5j1VcglQTDatRFzF6SdfqySfMJYR8xIj58ss8GJaSqs6IfEadC6NlRYYBtO2zK6OZb6e3\
AFxrYBuvOoIzllrqGDpymwPzV7HhlsNRrUk3RzUETKZSJToQ7HTRWWbEvFhiDaKaGxeW2WE9DUiCEo\
ypjuXJzPLbOiUaogTTPe8rv/nMPAMaPqnNwBW0TmhKyVCdyczm2BOsNt+\
8LFUwk1JgYQUDV9zCsR5VOdzIPkcSD4Hks+B5HMg+RxIPgeSz4Fc2wzlcyD5HEg+\
B5LPgeRzIPkcSD4Hks+B5HMg+\
RzI8uVASvI5kHwO5EbkQK6Krly4B6aSGoripUTYIrFmhTVw30VC6i4BlAgWYgEUCn19GwVwm9AnohH\
oU0R1JEEWmi+uRaFC0HuF9l7awYxKUlHF+3IPCGQm6P+\
Vp3JVxJ4tsjEKoC4i9myLC8GohrIjBbhyckGV0KlJCfqEKy5pihZbMVC4AYvlpizJa3ButbAZyWT6R\
MXXDxUo4iWsvAqhodHXriNfY31jk3BtU9tHJoeslEE9Sv5Ykuq261NdJtwLEV7Ski8WGmoba+\
uvSd0KYXCwtzN3XV8UcgmAhaDk06r5tGo+rXrVtGrmauvMWC5w17QND8qtFUdzrUrMkRO9Jevnc+\
ZdlmczgXs70er4CV57sR946QUSfHax+x8RoHsHqMllR/\
CDcq6AWgWKzCPGD4qt7Q4Usk3MD8ps1x7gX9Jlxg9WZ86sPs28pBPbPPQQauHnXjKZnH/\
iacM7ModcCpOAqBN1ua6BIio1sZIvWvSbR1mIdrJ+qNh11UGjzbHWhvrGVr/YsL7ev66+\
rdHf1trW7JdgW31jc7S5LdYczcSq+WNDcViZF6sruqLygg2rzT70WhMiX2bIYsJmTv5/Zs/etw=="}\
, "ClickToCopyTemplate"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.891966210504061`16.34274405028984*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{
                Annotation[
                 Grid[{{
                    Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                    "Heavy"], "", "Your paclet resource is being published"}},
                   Alignment -> {Left, Baseline}, 
                  Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
                 DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
                 "Your paclet resource is being published"]], ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style["", LineBreakWithin -> Automatic, LineIndent -> 0], 
            ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, 
                    "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell has excessive height. Consider reducing the size \
to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "9b98e6b1-e967-4494-bf92-c5d41049f030", 1822574373, 
                  "LargeCellBounds/CellHeight", <|
                  "Type" -> "height", "CellID" -> 1822574373, "CellObject" -> 
                   CellObject[
                    "9632ecf7-afa9-422e-926c-8cb13c53fac8", 
                    "b3c9d4c2-88a8-43ad-9b41-bd41970ef641"], 
                   "CellSerialNumber" -> 8165, "CellSize" -> {298, 531}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "9632ecf7-afa9-422e-926c-8cb13c53fac8",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 53, "Rendering" -> 
                   False, "Style" -> "ExampleImage", "TemplateGroup" -> False,
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1822574373]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell has excessive height. Consider reducing the size \
to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "1c96e600-4a98-42ac-b824-cdb3b2f426e5", 1491546085, 
                  "LargeCellBounds/CellHeight", <|
                  "Type" -> "height", "CellID" -> 1491546085, "CellObject" -> 
                   CellObject[
                    "a066330f-e087-46ff-95e8-20a72804c260", 
                    "66ad74cc-780e-47f8-b7b8-8aeeeab3b734"], 
                   "CellSerialNumber" -> 8178, "CellSize" -> {316, 546}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "a066330f-e087-46ff-95e8-20a72804c260",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 65, "Rendering" -> 
                   False, "Style" -> "ExampleImage", "TemplateGroup" -> False,
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[1491546085]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "3f16ef12-3317-45d4-883b-af7053fd6a82"]]]]]], Appearance -> 
             None, BoxID -> "3f16ef12-3317-45d4-883b-af7053fd6a82"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ab885183-1b32-478a-9b3e-dc7ccadc8029\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ab885183-1b32-478a-9b3e-dc7ccadc8029\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.3.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2323\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  
                  "OEM6eJztWE9vG0UUj+\
O1HTuu67ZBCE7WKgJxcNXEoKZcgrOJ20hNa3ncFoSQOt59tkfszq5mZpOa78CJKwe+FZzhA/AR4M3+\
s7NOpeAEwcF7WWvfv9+8ee/9njwuyK0BvTjy34Ecl+S9U65ABAIUVczn+\
HlckOWBrxXGhjSeM6nGm7I8pBP8QioktG2QkmyT0POomD0D6pDCt+\
OibB7POPWYfeY7oQvafDMzLxJQsjGcBSBBvfUD4Lu7stSjroRUupNKwRuBQxAO7O6S0gD9z1Bnewhe\
4OLHGGHsuCjv9ikHAi7YyheXYxoDhJEGKcnKU8Gcy8bpu6KdaFFZVo9CpdI01JITxX4/\
7p30BTtHCG97wufqhDsDkH4obCDV3skRUx4NJGkmiUGjl3hOEBq8hnIMLp2BIxtxiF7IbZ3x92XHGI\
oQsmPUukEAVFCOyTde+\
HwuqR5RCUTNXBhv5M5ePTmnbkgxM7LaDZXv4RXbmbR8BmrqO6TWF4C5Vex8wWnXZRPuAVdpQmXZAl0\
p6XuueurRCRD2A2DGKknGMqtLcUtD5oEUG9FT/yr7goZ1KxQCHb9GwEDu9DC/Fg2eAZtMNYRS37/\
AmAW50x1J3w0VLOrLO2d0wtmY2VENW3/hdW/1BPWiSy3KrSg9unxL5u8//2Siw+oxE1gz+\
swoHzw9snzXF+LD6Pn1UDyInj8OxdfR89uh9VF24jpRggUv+\
SkPQjWv4ljYsBA6AutTx2F8khfXIlgRntw91iPJGRUTxuViGeu3tWFt5H+/H0t5Xuypn0L2Tnu7mO/\
tfJMlpqRhpmWuK9QkhvllyyQ1dHMMYxq6inyQlPypAq/LuR+\
PElL888dfFkbHltmntgvKzGaH1r8JsrL56tXp8eqIPjHp6ODgi72DTntv1Nlvf/\
74gLafjDrQduzHtk0d++DR/\
pMc3jTzzSTFS52SapAK1lTocblwxLgpjOcwnqsZiHtZ54qGrelPOEVAQb6s7iZgNMKoFa+\
NZTnO9QGlUUlAbV3r145qbf7zYAtzzsjNuR0y9S90I/CJNcUhaes5lU/R9osQiUVgg32/\
JGvgYMeWxYnApB4gxfktR65nXNF3cdPmTf/lMigO/eD/WwBNfScu49D3JUvILL7gglXItGIm+\
08Y2HJ9uTID50f3moLXFLwCBVfWFHzLFHwDvFXzNTYQAlkdcsXce9h52Lk9TA2ThCOPSQ3rJrksm/\
ud/VvE1TTjDrUERPFWRxYxwC3e4RnyME681QF9Zn6D7dQKom5oiaS5Wky2RoAjoxWEI5fJKTi3l82S\
ifLVEe9kI2BeLOvNdL2ZrjfTFTbT+ZaUX/qu2KkW3JN60m96XXXza+WDS3+\
AxWtRuhCSwneonv17dn+5mbvlNqkv0jwpx2TdJobmWLJ7HaZsk0pCcKQU0VRbY56zCzE0R7RJ4/\
Joj3d0NE4mK/n0mvNxXgHxn3B05C5VwNaJw64U3I9t3jA1TVY2GQP5G6je90k="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"Wolfram/ChatGPTPluginKit\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztW31sFMcVv/OdbfwJJm7SkrQ6LVaVVjl/gj+\
Qmjv77LOtGDh57JAESL3em7MX7+0uM3s+\
H5WQ20SV0qSEFmho2hDTlirlj4ogVSLfpmmVVlFTidLWKm1jhxAVpQFUJSlBadOZ2Z27vbUtzuBC/\
rgndOM382be771583HzuJgbr+\
gXkx3aBMSxQlzVqxoQ6QgaoiFrKqmOuXFRv0YFYl7s7ZOxESvARQPiCKkBlf0Qawkkwc3DO6BkgDKQ\
iMdFlOqBYhS4t8Y8eFVnShXjsrRRiyYUSEcpSI/\
iAdDAlQMpHWJoDGk6VGtqcGFYVDDkrdW8FcaHYRQQVLCmBhT2k/\
FTRKZsAMZ1hVSaQM2BPXhlRFQhgAqBpKFsnd5+\
AoMrKcTF3UiOZnfmZTEdhDYV4ZKOhGFwb5RaFpnjrgl3RZA8TiAMhZGmGl1qlPsElIS7OmQjLuoYrL\
IcQzptJnZCRMFTKJ1QEVMwiitNFeGEKlHHL+\
Yd7wBKwLQZpe26DkUkqhLE3k2ammkp6RAxBEZKgTGXw/\
aSrnFRSYjEM7ikPWFocTLTUrq1aCM0RrUoKI0gSHxryOO2QdsVeUSNQ9XgDsVFIUgDhpcZ0d64OAKB\
vAsSjxVbHkv3ytJbOCDHIUYuRuXBdA3pWB5KIEQGvpcAhqAiTPwbEvUeKI+\
MUgiFES1JdLpxdfsw1pSEAe3yuGKjOKLKMVlioRz6hMzpCuYSc+\
bKupGoj8oSpmyV5SQ3LhkgdWMqxBh9rfrn3XO7ooF0+\
JC1EhYlGNZQPF1HBu3v7ghpiobQKy9TuhBA9YxmA+hzjH4boF7YrIuSbKQsSy/\
RYSvDsqLAKIE9Dm0r7KSroNDjKnC53Jl/\
i9QVOevM6gpa7fZ4COf4dLBplWsLigoYsCk5SD5nC37WHLTx255+\
aAct9X3TKuNRKs7khKokLdWdfmznZ167b3vQOV5ayan37rZ32qsEJPugLtfQqF0p59OgrP5pJfbxiJ\
Ji0xIX07zn0I9TJrKT47R8w3UCm5b4mCUf792jBm3yd7x8cMwE9aaU1X7+w3Z7/\
6zxidI7CpiSR5j5e3r+YwlFTKGerl20vLL7C4yv/S5gfNHX50btvMt1bNQu7zoVb8ka7/\
W59QzEfy9gy/J1tNy0/3QWnwZp8fd5prbZ+Ylf+LfZx5so+9VWu76Db39rqx3PZM2WtbQce/E3jB/\
qRgLTO/w2431rXILdKZw//tTtdn7yQKhFtvfn/uHjc/9x/ZGzh5N2fLPCs0k7fs5z+\
zjP7ec89w8fj/sva75yXufHn6U0F0DfO0DpXABd+YjS+RzX+UmXx+3NWrgn13rchWbUTnYxYI//\
0XTs8fceYA678qWonQ/uOTIYtMlPPvfxg0Fn/5wNqmZ0OoA+z+hvAbR/H6Wz12/\
Q5JmZmN0gznPAs96Ht9sN4jw3OKt/zgZ9dJnSPwLohz+\
g9G4APcjowvUbNHWmlYXa1OWn2b4wG25iAC898D4LZd4++eseyGYE3NqzUDvrn7NBtzJ6J4D+\
cIrSW8sYcpMXgkMU0PRf5hLMoKP3s5n6yeSj2M6vOvwS2525/\
DNfXr8z6Oyfs0GHnqJEIu02Rn9ezpC7+HfdbhDnOeAp4YhsN4jz3OCs/jkbtI3RPwPo+econQ+\
g3YyWIeRmY5+wGQi++NoEA1z1GANYM7yTHWm8/c7y2w1mwNF3hhZqZ/\
1zNmg9o3M2gxoZvbUMM3SgiZ2xszvN4yMyfMicmReCUTvvOvQvtilw+\
enSDV8NOvvnbJC5F5wJIMDobMBaVX+\
6foOCye5xu0Gc54CPvdmB7AZxnhuc1T9ng7YyIpvb3YzIxfPJ71NajnPo8CU2A8FbjrBdbm/\
rB2wtuba7zSuZ1T790+1sl5tdPTO2UDvrf0NDzpMxiFrjpdZMj5vunXziMkNX/\
8jDzP0nPujXgrb2vaHTO4NO+ZuOPh39vofZyRE5sY2hjER/D+yrwfVQTzjolL+\
hl5oF0Vc8at5MvvIEQzv9zd+ZB/pjncyaZ77xOuOnn3zDvMnY5W86+llx7n6Kxnex1oyUV3/\
EUNZ3z7BI8p0+yvgJ/Cqbkyz5G3q6L4R+ancL8+X0zHm6eqfOrWti/LHB75j7bcWWTbSc+\
etL7OTLkr/56D+EDOWQsY+WBytLRhiv//tdthftf/\
9OVvbor5jo7fKxYse7R1k71qFk9NPXgJA7Xe1tnyDf9dOvTtbDSocojY0gLaFGHQ8rhWEkxp2vLaWs\
ckCWxrDzHebT+A6yALj5iEJr03IVIVEahfy5xOmrcmAgWd+s9qp6wuCNRZmXNU9mHqxo4u+JmRb+\
nrhC2EQcucEngM9YD2a9Boy3q6pmvkcCz8VvT2XknS+\
A1oBgjbBFU2JkTupCo6LRHRmIKIkRWb1HNgTgEXyCs58FDXiFX74gAGnUMHS8oa4OWQ95uDZpDicpW\
iJaK2nxuogoKdDoh7qGZUNDqYxsnTjc2rq+obXJ3zDc1Ohf19Iq+tuGm6A/KrVIkhiVWusb2+\
pAeU9Kh0iR1bHB/j5QSjzSCWNiQsm8oVLLba4pEARnUy7+pO+\
HOfuTyJuGZasiUnuez0nfSqETYomEAx08d7V1QkdCVqI+\
nU0T9sU05LNmziervh0JbPhEXwwmfcRhEC+\
CjkXjKivs5j1VcglQTDatRFzF6SdfqySfMJYR8xIj58ss8GJaSqs6IfEadC6NlRYYBtO2zK6OZb6e3\
AFxrYBuvOoIzllrqGDpymwPzV7HhlsNRrUk3RzUETKZSJToQ7HTRWWbEvFhiDaKaGxeW2WE9DUiCEo\
ypjuXJzPLbOiUaogTTPe8rv/nMPAMaPqnNwBW0TmhKyVCdyczm2BOsNt+\
8LFUwk1JgYQUDV9zCsR5VOdzIPkcSD4Hks+B5HMg+RxIPgeSz4Fc2wzlcyD5HEg+\
B5LPgeRzIPkcSD4Hks+B5HMg+\
RzI8uVASvI5kHwO5EbkQK6Krly4B6aSGoripUTYIrFmhTVw30VC6i4BlAgWYgEUCn19GwVwm9AnohH\
oU0R1JEEWmi+uRaFC0HuF9l7awYxKUlHF+3IPCGQm6P+\
Vp3JVxJ4tsjEKoC4i9myLC8GohrIjBbhyckGV0KlJCfqEKy5pihZbMVC4AYvlpizJa3ButbAZyWT6R\
MXXDxUo4iWsvAqhodHXriNfY31jk3BtU9tHJoeslEE9Sv5Ykuq261NdJtwLEV7Ski8WGmoba+\
uvSd0KYXCwtzN3XV8UcgmAhaDk06r5tGo+rXrVtGrmauvMWC5w17QND8qtFUdzrUrMkRO9Jevnc+\
ZdlmczgXs70er4CV57sR946QUSfHax+x8RoHsHqMllR/\
CDcq6AWgWKzCPGD4qt7Q4Usk3MD8ps1x7gX9Jlxg9WZ86sPs28pBPbPPQQauHnXjKZnH/\
iacM7ModcCpOAqBN1ua6BIio1sZIvWvSbR1mIdrJ+qNh11UGjzbHWhvrGVr/YsL7ev66+\
rdHf1trW7JdgW31jc7S5LdYczcSq+WNDcViZF6sruqLygg2rzT70WhMiX2bIYsJmTv5/Zs/etw=="}\
, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.889280090680156`16.34244420961691*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "92ce7a395baccd06b35bc67811577346991d7e35"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.889484664715806`16.342467052671726*^9, 
  "TemplateVersion" -> "2022.09.16", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "Openers" -> {
   "ExampleSection" -> {"1" -> Closed, "3" -> Closed, "4" -> Closed}}, 
  "TryRealOnly" -> False, 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Users/christopher/git/ChatGPTPluginKit/ChatGPTPluginKit/build/Wolfram__\
ChatGPTPluginKit-1.3.3.paclet", "FileHashes" -> ByteArray[CompressedData["
1:eJwBZwOY/CFib1JiAQAAAFoDAAA4Qzp4nK2VbUhTURjHK0KzEl/IF1IspVKr
s/lufjDSuXRu5vBoiil23c6dN6/njvuSWxQiSkoUoRURCYUoERWWIuGHsjIK
NSgRRKNMe/0QFEUWFEYTp8dNvS7r04X/5f/7c57zPM9JCQEwIEUQkCgojYim
JFYsYQwcVpixKWUVgG6Qk3gD0l2lkpqiA2KDbEouxZuQOEeJSuMMUgXCIiUy
HFaqsYllhDJlusQYkaBUlVFiuj5Xz0omBmsZUYFL54LdWrxPHa919yPg7C0T
1x/7hhYBGLYwWIONyKIsiVIYaGEOSli9j8OIcMpD6MieK++8ANwmxxGQaeqX
UBIrw3o69DHw+54mDYARrrAUJoRlaD5ZY9Utlg9JAOoWpuUgGvEIG5CeMtlK
CK0VpRzrVEoVy0nGNGRmOesUwKms9YWHfta+Caoiof3tlhXDo6e1AGb8l1Cn
wKDDDcO3XnauJIE7vV+og+rOZgKYvvzARQ9YENoX0W4ZzCd5az+nJcSNd9rq
rPrXPKesAa8T8dGKyxkkq71rTRGuTzUCqF5+lhobzRwz72R++++0PTofE0bS
vAYC3xerYnwBTF5+mlNKar+6QVf2ZT1Jocc6EugUv60Abl84BSKKN5RNd3r8
9PwhmS7XenYo2859zfwbntw8825x8U9613kAGOkiT2BkcNb8Y29rLJtVAAJX
cDSDWKOgqGRlkO5Cgb45uDgYwDhXkMzUNwuJlJESKXnyvds+CWk13UoAFa6Q
Z3dajAyzO7/m5FjipgMuMit5RkQKljOUyzCZvOywgtd5tiUTvgjTjFjWvsBj
l7hwa3n4mY5fI7alu2NJ2OyJk2SAg88m/ePvFuxd/MrnA5dY5V3J/r8bv43r
AExcGJkriRzPULZp1GBBpFhWbigvPDg4FNVXl0P4ryqPrhjz694N4EYt4jFi
57+nDo2ji4t5fjH3SKGJIIiyYQbBma2pkijannlHc9OnwR/VPRqGmInibTfb
N6SjsfOhgPLToyhiJIqv3Ti77hytl9pGRrVMFUesRJnJVFvMHO9sDGsMmWgQ
2EhiJMqM0V5lR2PyjWuhu3KakomRKJ56ysAiUYNpzsk12SrRk803PYiLKD7T
riwKMzQSRPlZ9uyNbdXf7wJ/AGKqdj5P+JdI
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], CurrentValue[
                    RSNB`cell, {TaggingRules, "Refreshing"}] = False]], 
                    Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Mac OS X ARM (64-bit) (November 18, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"bdef939f-76dc-4492-bbd0-ea7fd693ef13"
]

